[{"path":"https://r-tmap.github.io/tmap/articles/01_basics_vv.html","id":"about-the-data","dir":"Articles","previous_headings":"","what":"About the data","title":"tmap basics: visual variables","text":"spatial data object contained tmap called World. data frame row country. columns following data variables plus additional geometry column contains geometries (see sf package): specify object tm_shape (see vignette) convenience assign s:","code":"names(World) #>  [1] \"iso_a3\"       \"name\"         \"sovereignt\"   \"continent\"    \"area\"         #>  [6] \"pop_est\"      \"pop_est_dens\" \"economy\"      \"income_grp\"   \"gdp_cap_est\"  #> [11] \"life_exp\"     \"well_being\"   \"footprint\"    \"HPI\"          \"inequality\"   #> [16] \"gender\"       \"press\"        \"geometry\" s = tm_shape(World, crs = \"+proj=eqearth\")"},{"path":"https://r-tmap.github.io/tmap/articles/01_basics_vv.html","id":"constant-values","dir":"Articles","previous_headings":"","what":"Constant values","title":"tmap basics: visual variables","text":"advanced users: default constant values specified combinations visual variables layer type. See tmap_options(\"value.const\")","code":"s + tm_polygons(fill = \"#ffce00\", # fill color                 col = \"black\",    # line color                 lwd = 0.5,        # line width                 lty = \"dashed\")   # line type"},{"path":"https://r-tmap.github.io/tmap/articles/01_basics_vv.html","id":"visual-variables","dir":"Articles","previous_headings":"","what":"Visual variables","title":"tmap basics: visual variables","text":"","code":"s + tm_polygons(fill = \"press\")   # data variable (column in World) s +    tm_polygons(fill = \"grey90\") +   # fill color ()   tm_bubbles(size = \"pop_est\",     # data variable, mapped to symbol size              fill = \"well_being\",  # data variable, mapped to symbol fill color              shape = \"income_grp\") # data variable, mapped to symbol shape #> [plot mode] legend/component: Some components or legends are too \"high\" and are #> therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling."},{"path":"https://r-tmap.github.io/tmap/articles/01_basics_vv.html","id":"facets","dir":"Articles","previous_headings":"","what":"Facets","title":"tmap basics: visual variables","text":"(facets later)","code":"s + tm_polygons(fill = c(\"well_being\", \"life_exp\"))   # two data variables (columns in World)"},{"path":"https://r-tmap.github.io/tmap/articles/02_theory_gg.html","id":"components","dir":"Articles","previous_headings":"","what":"Components:","title":"tmap theory: Grammar of Graphics`","text":"Data: dataset visualized. Aesthetic Mappings: data maps visual properties (e.g., position, color, size). Geometric Objects: Shapes representing data (e.g., points, lines, bars). Scales: Rules linking data values aesthetic values. Transformations: Adjustments data coordinates (e.g., log scales). Statistical Summaries: Computed data representations (e.g., means, trends). Facets: Layouts splitting data subsets comparison. applied ggplot2 [2] also tmap, slightly differently.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/articles/02_theory_gg.html","id":"ggplot2","dir":"Articles","previous_headings":"","what":"ggplot2","title":"tmap theory: Grammar of Graphics`","text":"ggplot2, visual variables defined plot level (default), tmap layer level. makes sense, since non-spatial visualizations x y variables, important ones, shared among plot layers. However, spatial visualizations x y variables considered data-driven rather geometry-driven. visual variables, fill border color, line width, symbol shape. also applies scale funtions: e.g. ggplot2, scale_fill_continuous() defined visual variable fill whole plot. tmap, scale functions mapped 1 1 visual variables per layer: tm_polygons(fill = \"my_var\", fill.scale = tm_scale_continuous()) See vignette (: link) compares tmap ggplot2 series examples","code":""},{"path":"https://r-tmap.github.io/tmap/articles/03_versus_ggplot2.html","id":"choropleth-map-comparision","dir":"Articles","previous_headings":"","what":"Choropleth Map comparision","title":"tmap versus: ggplot2","text":"example default output tmap compares ggplot2. default output ggplot2:  default output tmap:  Note different line width values: linewidth = .4 ggplot2 lwd = 1 tmap unit line width different. tmap follows lwd parameter (see graphics::par) whereas ggplot2 linewidth = 1 equals roughly 0.75 due historical error.","code":"library(ggplot2) library(cols4all)  ggplot(World) +     geom_sf(aes(fill = HPI), color = \"grey20\", linewidth = .4) +     scale_fill_continuous_c4a_div(\"pu_gn\", mid = 35) +     coord_sf(crs = \"+proj=eqearth\") +     theme_void() tm_shape(World, crs = \"+proj=eqearth\") +     tm_polygons(fill = \"HPI\",                 col = \"grey20\",                 lwd = 1,                 fill.scale = tm_scale_continuous(values = \"pu_gn\", midpoint = 35))"},{"path":"https://r-tmap.github.io/tmap/articles/03_versus_ggplot2.html","id":"mimicking-ggplot2-layout","dir":"Articles","previous_headings":"","what":"Mimicking ggplot2 layout","title":"tmap versus: ggplot2","text":"can use tmap match style ggplot2:","code":"tm_shape(World, crs = \"+proj=eqearth\") +     tm_polygons(fill = \"HPI\",                 col = \"grey20\",                 lwd = 1,                 fill.scale = tm_scale_continuous(values = \"pu_gn\", midpoint = 35),                 fill.legend = tm_legend(reverse = TRUE,                                          frame = FALSE,                                          item.height = 2.25,                                          item.width = 1.8,                                          position = tm_pos_out(pos.v = \"center\"),                                          na.show = FALSE,                                          ticks = list(c(0, 0.1), c(0.9, 1)),                                          ticks.col = \"white\",                                          col = \"white\")) +     tm_layout(frame = FALSE, outer.margins = 0)"},{"path":"https://r-tmap.github.io/tmap/articles/04_examples_gridmaps.html","id":"get-grid-layout-of-dutch-provinces","dir":"Articles","previous_headings":"","what":"Get grid layout of Dutch provinces","title":"tmap example: gridmaps","text":"","code":"nl_prov_grid1 = geofacet::nl_prov_grid1 class(nl_prov_grid1) = \"data.frame\"  nl_prov_grid1 = nl_prov_grid1 |>     mutate(name = ifelse(name == \"Friesland\", \"Fryslan\", name)) |>     select(-code)"},{"path":"https://r-tmap.github.io/tmap/articles/04_examples_gridmaps.html","id":"join-with-nld-datasets-in-tmap","dir":"Articles","previous_headings":"","what":"Join with NLD datasets in tmap","title":"tmap example: gridmaps","text":"","code":"NLD_prov2 = NLD_prov |>     left_join(nl_prov_grid1,               by = \"name\")  NLD_muni2 = NLD_muni |>     left_join(NLD_prov2 |>                 st_drop_geometry() |>                 select(name, row, col), by = c(\"province\" = \"name\"))  NLD_dist2 = NLD_dist |>     left_join(NLD_prov2 |>                 st_drop_geometry() |>                 select(name, row, col), by = c(\"province\" = \"name\"))"},{"path":"https://r-tmap.github.io/tmap/articles/04_examples_gridmaps.html","id":"the-map","dir":"Articles","previous_headings":"","what":"The map","title":"tmap example: gridmaps","text":"","code":"tm_shape(NLD_dist2) +     tm_fill(\"edu_appl_sci\", fill.legend = tm_legend(\"Percentage\")) +     tm_facets_grid(rows = \"row\", columns = \"col\") + tm_shape(NLD_muni2) +     tm_borders(lwd = 1) +     tm_facets_grid(rows = \"row\", columns = \"col\") + tm_shape(NLD_prov2) +     tm_borders(lwd = 2) +     tm_facets_grid(rows = \"row\", columns = \"col\") + tm_layout(panel.show = FALSE) +     tm_title(\"Population share (age 15-75) with scientific (incl. applied) degree\") #> [plot mode] fit legend/component: Some legend items or map compoments do not #> fit well, and are therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling."},{"path":"https://r-tmap.github.io/tmap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martijn Tennekes. Author, maintainer. Jakub Nowosad. Contributor. Joel Gombin. Contributor. Sebastian Jeworutzki. Contributor. Kent Russell. Contributor. Richard Zijdeman. Contributor. John Clouse. Contributor. Robin Lovelace. Contributor. Jannes Muenchow. Contributor. Olivier Roy. Contributor. Edzer Pebesma. Contributor.","code":""},{"path":"https://r-tmap.github.io/tmap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tennekes M (2018). “tmap: Thematic Maps R.” Journal Statistical Software, 84(6), 1–39. doi:10.18637/jss.v084.i06.","code":"@Article{,   title = {{tmap}: Thematic Maps in {R}},   author = {Martijn Tennekes},   journal = {Journal of Statistical Software},   year = {2018},   volume = {84},   number = {6},   pages = {1--39},   doi = {10.18637/jss.v084.i06}, }"},{"path":"https://r-tmap.github.io/tmap/index.html","id":"tmap-thematic-maps-in-r-","dir":"","previous_headings":"","what":"Thematic Maps","title":"Thematic Maps","text":"tmap R package drawing thematic maps. API based Layered Grammar Graphics resembles syntax ggplot2, popular R-library drawing charts.","code":""},{"path":"https://r-tmap.github.io/tmap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Thematic Maps","text":"Installation tmap (version 4) straightforward: old version tmap (version 3) available , recommend use version 4, CRAN soon. Linux macOS users new working spatial data R, may fail since additional (non-R) libraries required (automatically installed Windows users). Windows additional installation required. Linux (Ubuntu) See https://geocompx.org/post/2020/installing-r-spatial-packages-linux/. Please address installation issues issue. macOS See https://www.kyngchaos.com/. Please address installation issues issue.","code":"# install.packages(\"remotes\") remotes::install_github(\"r-tmap/tmap\")  # On Linux, with pak # install.packages(\"pak\") pak::pak(\"r-tmap/tmap\")  # Or from r-universe install.packages(\"tmap\", repos = c(\"https://r-tmap.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://r-tmap.github.io/tmap/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Thematic Maps","text":"Plot World map happy planet index (HPI) per country. object World example spatial data (sf) object contained tmap:  map can enhanced several ways. instance:","code":"tm_shape(World) +     tm_polygons(fill = \"HPI\") tm_shape(World, crs = \"+proj=robin\") +     tm_polygons(fill = \"HPI\",                 fill.scale = tm_scale_continuous(values = \"matplotlib.rd_yl_bu\"),                 fill.legend = tm_legend(title = \"Happy Planet Index\",                                         orientation = \"landscape\",                                          frame = FALSE)                 )"},{"path":"https://r-tmap.github.io/tmap/index.html","id":"book-chapter-about-tmap","dir":"","previous_headings":"","what":"Book chapter about tmap","title":"Thematic Maps","text":"book Geocomputation R provides chapter Making maps R, including section tmap.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":null,"dir":"Reference","previous_headings":"","what":"Netherlands datasets — NLD_prov","title":"Netherlands datasets — NLD_prov","text":"Datasets Netherlands 2022 three levels: NLD_prov (12) provinces, NLD_muni (345) municipalities NLD_dist (3340) districts , class sf","code":""},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Netherlands datasets — NLD_prov","text":"","code":"NLD_prov  NLD_muni  NLD_dist"},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Netherlands datasets — NLD_prov","text":"https://www.cbs.nl/nl-nl/maatwerk/2024/11/kerncijfers-wijken-en-buurten-2022","code":""},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Netherlands datasets — NLD_prov","text":"data variables NLD_muni NLD_dist identical: See source detailed information variables. dataset, created Noveber 2024, update datasets NLD_muni NLD_prov used tmap <= 3, created around 2016. Note number municipalities reduced (due mergings). old variables included, except variables related ethnicity. Many new variable added, moreover, district (Dutch: wijk) level data added: NLD_dist. CRS (coordinate reference system) used Rijksdriekhoekstelsel New, EPSG 28992. Coordinates rounded meters reduce file size.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/Netherlands.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Netherlands datasets — NLD_prov","text":"Statistics Netherlands (2024), Hague/Heerlen, Netherlands, https://www.cbs.nl/.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World.html","id":null,"dir":"Reference","previous_headings":"","what":"World dataset — World","title":"World dataset — World","text":"World dataset, class sf","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World dataset — World","text":"","code":"World"},{"path":"https://r-tmap.github.io/tmap/reference/World.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World dataset — World","text":"NED: Natural Earth Data https://www.naturalearthdata.com/ HPI: Happy Planet Index https://happyplanetindex.org/ UNDP: Human Development Report (2024) https://hdr.undp.org/content/human-development-report-2023-24 WB: World Bank https://data.worldbank.org OWiD: World Data https://ourworldindata.org RSF: Reporters Without Borders https://rsf.org/en/index","code":""},{"path":"https://r-tmap.github.io/tmap/reference/World.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"World dataset — World","text":"See sources detailed information variables. dataset, created Noveber 2024, update old version, created around 2016. variables old version included, updated. Furthermore, gender ineuqlity press freedom added. ISO country-code: two countries user-assigned codes, namely: XKX used Kosovo (conform European Union World Bank) (UNK old version); XNC used Northern Cyprus (CYN old version). variables data available multiple years, availability different across countries. cases, recent values taken.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/get_fact_levels_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function that gets factor levels with NA's — get_fact_levels_na","title":"Internal tmap function that gets factor levels with NA's — get_fact_levels_na","text":"Internal tmap function gets factor levels NA's","code":""},{"path":"https://r-tmap.github.io/tmap/reference/get_fact_levels_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function that gets factor levels with NA's — get_fact_levels_na","text":"","code":"get_fact_levels_na(x, o)"},{"path":"https://r-tmap.github.io/tmap/reference/get_fact_levels_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function that gets factor levels with NA's — get_fact_levels_na","text":"x vector o options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/get_scale_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function get scale values — get_scale_defaults","title":"Internal tmap function get scale values — get_scale_defaults","text":"Internal tmap function get scale values","code":""},{"path":"https://r-tmap.github.io/tmap/reference/get_scale_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function get scale values — get_scale_defaults","text":"","code":"get_scale_defaults(scale, o, aes, layer, cls, ct = NULL)"},{"path":"https://r-tmap.github.io/tmap/reference/get_scale_defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function get scale values — get_scale_defaults","text":"scale scale o o aes aes layer layer cls cls ct ct","code":""},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial data of global land cover — land","title":"Spatial data of global land cover — land","text":"Spatial data global land cover, percent tree cover, elevation class stars. Two attributes object relates global land cover. cover layer classifies status land cover whole globe 20 categories, cover_cls layer uses 8 simplified categories. Percent Tree Cover (trees) represents density trees ground, last attribute represents elevation.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial data of global land cover — land","text":"","code":"land"},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial data of global land cover — land","text":"object class stars 1080 rows 540 columns.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial data of global land cover — land","text":"Important: publication maps allowed cited Tateishi et al. (2014), \"Geospatial Information Authority Japan, Chiba University collaborating organizations.\" shown.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/land.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial data of global land cover — land","text":"Production Global Land Cover Data - GLCNMO2008, Tateishi, R., Thanh Hoan, N., Kobayashi, T., Alsaaideh, B., Tana, G., Xuan Phong, D. (2014), Journal Geography Geology, 6 (3).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/make_by_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function to create by variables (used for faceting) — make_by_vars","title":"Internal tmap function to create by variables (used for faceting) — make_by_vars","text":"Internal tmap function create variables (used faceting)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/make_by_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function to create by variables (used for faceting) — make_by_vars","text":"","code":"make_by_vars(dt, tmf, smeta)"},{"path":"https://r-tmap.github.io/tmap/reference/make_by_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function to create by variables (used for faceting) — make_by_vars","text":"dt data.table tmf tmf object smeta smeta object","code":""},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial data of metropolitan areas — metro","title":"Spatial data of metropolitan areas — metro","text":"metro includes population time series 1950 (forecasted) 2030. metro areas 1 million inhabitants 2010 included.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial data of metropolitan areas — metro","text":"","code":"metro"},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial data of metropolitan areas — metro","text":"object class sf (inherits data.frame) 436 rows 13 columns.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial data of metropolitan areas — metro","text":"https://population.un.org/wup/","code":""},{"path":"https://r-tmap.github.io/tmap/reference/metro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial data of metropolitan areas — metro","text":"United Nations, Department Economic Social Affairs, Population Division (2014). World Urbanization Prospects: 2014 Revision, CD-ROM Edition.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/print.tm_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Print tm_element — print.tm_element","title":"Print tm_element — print.tm_element","text":"Print tm_element","code":""},{"path":"https://r-tmap.github.io/tmap/reference/print.tm_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print tm_element — print.tm_element","text":"","code":"# S3 method for class 'tm_element' print(x, ...)  # S3 method for class 'tm_shape' print(x, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/print.tm_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print tm_element — print.tm_element","text":"x x ... passed ","code":""},{"path":"https://r-tmap.github.io/tmap/reference/print.tmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw thematic map — print.tmap","title":"Draw thematic map — print.tmap","text":"Draw thematic map","code":""},{"path":"https://r-tmap.github.io/tmap/reference/print.tmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw thematic map — print.tmap","text":"","code":"# S3 method for class 'tmap' print(   x,   return.asp = FALSE,   show = TRUE,   vp = NULL,   knit = FALSE,   options = NULL,   in.shiny = FALSE,   proxy = FALSE,   ... )  # S3 method for class 'tmap' knit_print(x, ..., options = NULL)"},{"path":"https://r-tmap.github.io/tmap/reference/print.tmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw thematic map — print.tmap","text":"x tmap object. return.asp aspect ratio returned? show show map vp viewport (\"plot\" mode) knit logical, knit? options vector options .shiny logical, map drawn shiny? proxy logical, .shiny, tmapProxy used? ... used","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick thematic map plot — qtm","title":"Quick thematic map plot — qtm","text":"Draw thematic map quickly. function convenient wrapper main plotting method stacking tmap-elements. Without arguments search term, functions draws interactive map.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick thematic map plot — qtm","text":"","code":"qtm(   shp = NULL,   fill = tm_const(),   col = tm_const(),   size = tm_const(),   shape = tm_const(),   lwd = tm_const(),   lty = tm_const(),   fill_alpha = tm_const(),   col_alpha = tm_const(),   text = tm_const(),   text_col = tm_const(),   text_size = tm_const(),   by = NULL,   scale = NULL,   title = NULL,   crs = NULL,   bbox = NULL,   basemaps = NA,   overlays = NA,   zindex = NA,   group = NA,   group.control = \"check\",   style = NULL,   format = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick thematic map plot — qtm","text":"shp One : shape object, object class defined sf stars package. Objects packages sp raster also supported, discouraged. specified, .e. qtm() executed. case plain interactive map shown. OpenStreetMap search string, e.g. qtm(\"Amsterdam\"). case plain interactive map shown positioned according results search query (OpenStreetMap nominatim) fill, col, size, shape, lwd, lty, fill_alpha, col_alpha Visual variables. text, text_col, text_size Visual variables. data variable name data split, vector two variable names split data two variables (first used rows second columns). See also tm_facets(). scale numeric value serves global scale parameter. font sizes, symbol sizes, border widths, line widths controlled value. parameters symbols.size, text.size, lines.lwd can scaled separately respectively symbols.scale, text.scale, lines.scale. See also .... title main title. legend titles, use X.style, X layer name (see ...). crs Either crs object character value (PROJ.4 character string). default, projection used defined shp object . bbox bounding box. Argument passed tm_shape() basemaps name(s) provider URL tiled basemap. shortcut tm_basemap(). Set NULL disable basemaps. default, set tmap option basemaps. overlays name(s) provider URL tiled overlay map. shortcut tm_tiles(). zindex zindex group group group.control group.control style Layout options (see tm_layout()) define style. See tmap_style() details. format Deprecated, see tm_format() alternatives ... arguments associated visual variables passed layer functions tm_polygons(), tm_lines(), tm_symbols(), tm_text(). instance, fill.scale scale specifications fill color polygons (see tm_polygons()).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick thematic map plot — qtm","text":"tmap-element","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quick thematic map plot — qtm","text":"first argument shape object (normally specified tm_shape()). next arguments, fill raster, aesthetics main layers. remaining arguments related map layout. argument main layer function, tm_polygons(), can specified (see ...). also possible stack tmap-elements qtm plot. See examples. default, scale bar shown. option can set tmap_options() (argument qtm.scalebar). minimap shown default qtm called without arguments search term. option can set tmap_options() (argument qtm.minimap).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quick thematic map plot — qtm","text":"Tennekes, M., 2018, tmap: Thematic Maps R, Journal Statistical Software, 84(6), 1-39, doi:10.18637/jss.v084.i06","code":""},{"path":"https://r-tmap.github.io/tmap/reference/qtm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick thematic map plot — qtm","text":"","code":"data(World, rivers, metro)  # just the map qtm(World)   # choropleth qtm(World, fill = \"economy\", style = \"cobalt\", crs = \"+proj=eck4\")   qtm(World, col = NULL) + qtm(metro, size = \"pop2010\",   size.legend = tm_legend(\"Metropolitan Areas\"))   # dot map if (FALSE) { # \\dontrun{ current.mode <- tmap_mode(\"view\") qtm(metro, bbox = \"China\") tmap_mode(current.mode) # restore mode } # }  if (FALSE) { # \\dontrun{ # without arguments, a plain interactive map is shown (the mode is set to view) qtm()  # search query for OpenStreetMap nominatim qtm(\"Amsterdam\") } # }"},{"path":"https://r-tmap.github.io/tmap/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. leaflet providers","code":""},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper functions for using tmap in shiny — renderTmap","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"Use tmapOutput create UI element, renderTmap render tmap map. update map view mode, use tmapProxy. Adding layers usual via map layer functions like tm_polygons. Removing layers can done , removing function tm_remove_layer.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"","code":"renderTmap(   expr,   env = parent.frame(),   quoted = FALSE,   execOnResize = TRUE,   mode = NA )  tmapOutput(outputId, width = \"100%\", height = 400, mode = NA)  tmapProxy(mapId, session = shiny::getDefaultReactiveDomain(), x, mode = NA)  tm_remove_layer(zindex)"},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"expr tmap object. tmap object created qtm stacking tmap-elements. env environment evaluate expr quoted expr quoted expression (quote())? useful want save expression variable execOnResize TRUE (default), plot resized, map regenerated. set FALSE map rescaled: aspect ratio kept, layout less desirable. mode tmap mode, see tmap_mode() defined, current mode used outputId Output variable read width, height width height map mapId single-element character vector indicating output ID map modify (invoked Shiny module, namespace added automatically) session Shiny session object map belongs; usually default value suffice x tmap object specifies added removed layers. zindex z index pane layer contained going removed. recommended specify zindex layer creating map (inside renderTmap).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"Two features tmap (yet) supported Shiny: small multiples (facets) colored backgrounds (argument bg.color tm_layout). Workarounds small multiples: create multiple independent maps specify .layers = TRUE tm_facets.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/renderTmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper functions for using tmap in shiny — renderTmap","text":"","code":"if (interactive() && require(\"shiny\")) {    data(World)   world_vars <- setdiff(names(World), c(\"iso_a3\", \"name\", \"sovereignt\", \"geometry\"))    tmap_mode(\"plot\")    shinyApp(     ui = fluidPage(       tmapOutput(\"map\", height = \"600px\"),       selectInput(\"var\", \"Variable\", world_vars)     ),     server <- function(input, output, session) {       output$map <- renderTmap({         tm_shape(World) +           tm_polygons(input$var, zindex = 401)       })     }   )    tmap_mode(\"view\")    shinyApp(     ui = fluidPage(       tmapOutput(\"map\", height = \"600px\"),       selectInput(\"var\", \"Variable\", world_vars)     ),     server <- function(input, output, session) {       output$map <- renderTmap({         tm_shape(World, id = \"iso_a3\") +           tm_polygons(fill = world_vars[1], zindex = 401)       })       observe({         var <- input$var         tmapProxy(\"map\", session, {           tm_remove_layer(401) +             tm_shape(World, id = \"iso_a3\") +             tm_polygons(fill = var, zindex = 401)         })       })     },options = list(launch.browser=TRUE)   ) }"},{"path":"https://r-tmap.github.io/tmap/reference/rivers.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial data of rivers — rivers","title":"Spatial data of rivers — rivers","text":"Spatial data rivers","code":""},{"path":"https://r-tmap.github.io/tmap/reference/rivers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial data of rivers — rivers","text":"","code":"rivers"},{"path":"https://r-tmap.github.io/tmap/reference/rivers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial data of rivers — rivers","text":"object class sf (inherits data.frame) 1616 rows 5 columns.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/rivers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial data of rivers — rivers","text":"https://www.naturalearthdata.com","code":""},{"path":"https://r-tmap.github.io/tmap/reference/shapeTM.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function to create a tmap shape — shapeTM","title":"Internal tmap function to create a tmap shape — shapeTM","text":"Internal tmap function create tmap shape","code":""},{"path":"https://r-tmap.github.io/tmap/reference/shapeTM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function to create a tmap shape — shapeTM","text":"","code":"shapeTM(shp, tmapID = NULL, bbox = NULL, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/shapeTM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function to create a tmap shape — shapeTM","text":"shp Shape file tmapID tmap Identifier bbox bounding box","code":""},{"path":"https://r-tmap.github.io/tmap/reference/theme_ps.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 theme for proportional symbols — theme_ps","title":"ggplot2 theme for proportional symbols — theme_ps","text":"ggplot2 theme proportional symbols. default, theme shows plotting area, without titles, axes, legend.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/theme_ps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 theme for proportional symbols — theme_ps","text":"","code":"theme_ps(   base_size = 12,   base_family = \"\",   plot.axes = FALSE,   plot.legend = FALSE )"},{"path":"https://r-tmap.github.io/tmap/reference/theme_ps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 theme for proportional symbols — theme_ps","text":"base_size base size base_family base family plot.axes axes shown? plot.legend legend(s) shown?","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_add_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: manual legend — tm_add_legend","title":"Map component: manual legend — tm_add_legend","text":"Map component adds manual legend","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_add_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: manual legend — tm_add_legend","text":"","code":"tm_add_legend(   ...,   labels,   type = \"symbols\",   title = \"\",   design = NULL,   orientation = NULL,   group = NA,   group.control = \"check\",   resize.as.group = FALSE,   z = NA_integer_ )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_add_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: manual legend — tm_add_legend","text":"... visual variables arguments passed tm_legend(). default, argument type set \"Symbols\", means supported visual variables : \"fill\", \"col\", \"shape\", \"size\", \"fill_alpha\", \"col_alpha\", \"lty\", \"lwd\", \"linejoin\", \"lineend\". labels labels type layer type visual variables (see ...) taken. Options: \"symbols\" (default), \"lines\", \"polygons\", \"text\". title text title design legend design orientation legend orientation group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). resize..group resize..group z z","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_basemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: basemap / overlay tiles — tm_basemap","title":"Map layer: basemap / overlay tiles — tm_basemap","text":"Map layer draws tiles tile server. tm_basemap() draws tile layer basemap, .e. bottom layer. contrast, tm_tiles() draws tile layer overlay layer, stacking order corresponds order layer called, just like map layers.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_basemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: basemap / overlay tiles — tm_basemap","text":"","code":"tm_basemap(   server = NA,   alpha = NULL,   zoom = NULL,   max.native.zoom = 17,   zindex = 0,   group = NA,   group.control = \"radio\" )  tm_tiles(   server = NA,   alpha = NULL,   zoom = NULL,   max.native.zoom = 1,   zindex = NA,   group = NA,   group.control = \"check\" )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_basemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: basemap / overlay tiles — tm_basemap","text":"server Name provider URL. list available providers can obtained providers (tip: RStudio, type providers$ see options). See https://leaflet-extras.github.io/leaflet-providers/preview/ preview . URL provided, template format, e.g. \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\". Use NULL tm_basemap() disable basemaps. alpha Transparency level zoom Zoom level (used plot mode) max.native.zoom Maximum native zoom level (used view mode). minimum maximum zoom levels determined tm_view. zindex zindex pane view mode. default, set layer number plus 400. default, tmap layers therefore placed custom panes \"tmap401\", \"tmap402\", etc., except base tile layers, placed standard \"tile\". parameter determines name pane z-index, determines pane order bottom top. instance, zindex set 500, pane named \"tmap500\". group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_basemap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: basemap / overlay tiles — tm_basemap","text":"","code":"if (requireNamespace(\"maptiles\")) {   tm_basemap() +     tm_shape(World) +     tm_polygons(\"HPI\")      tm_basemap(\"OpenTopoMap\") +     tm_shape(World) +      tm_polygons(fill = NA, col = \"black\")      if (FALSE) { # \\dontrun{   tm_basemap(\"CartoDB.PositronNoLabels\") +   tm_shape(NLD_prov, crs = 4236) +     tm_borders() +     tm_facets_wrap(\"name\") +     tm_tiles(\"CartoDB.PositronOnlyLabels\")   } # } } #> Loading required namespace: maptiles"},{"path":"https://r-tmap.github.io/tmap/reference/tm_cartogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: cartogram — tm_cartogram","title":"Map layer: cartogram — tm_cartogram","text":"Map layer draws cartogram","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_cartogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: cartogram — tm_cartogram","text":"","code":"tm_cartogram(   size = 1,   size.scale = tm_scale(),   size.legend = tm_legend_hide(),   size.chart = tm_chart_none(),   size.free = NA,   plot.order = tm_plot_order(\"size\", reverse = FALSE),   options = opt_tm_cartogram(),   ... )  tm_cartogram_ncont(   size = 1,   size.scale = tm_scale(),   size.legend = tm_legend_hide(),   size.chart = tm_chart_none(),   size.free = NA,   plot.order = tm_plot_order(\"size\", reverse = FALSE),   options = opt_tm_cartogram_ncont(),   ... )  tm_cartogram_dorling(   size = 1,   size.scale = tm_scale(),   size.legend = tm_legend_hide(),   size.chart = tm_chart_none(),   size.free = NA,   plot.order = tm_plot_order(\"size\", reverse = FALSE),   options = opt_tm_cartogram_dorling(),   ... )  opt_tm_cartogram(type = \"cont\", itermax = 15, ...)  opt_tm_cartogram_ncont(type = \"ncont\", expansion = 1, inplace = FALSE, ...)  opt_tm_cartogram_dorling(type = \"dorling\", share = 5, itermax = 1000, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_cartogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: cartogram — tm_cartogram","text":"size, size.scale, size.legend, size.chart, size.free Visual variable determines size. See details. plot.order Specification order spatial features drawn. See tm_plot_order() details. options options passed corresponding opt_<layer_function> function ... Arguments passed tm_polygons fill,fill.scale,fill.legend,fill.chart,fill.free Visual variable determines fill color. See details. col,col.scale,col.legend,col.chart,col.free Visual variable determines color. See details. lwd,lwd.scale,lwd.legend,lwd.chart,lwd.free Visual variable determines line width. See details. lty,lty.scale,lty.legend,lty.chart,lty.free Visual variable determines line type. See details. fill_alpha,fill_alpha.scale,fill_alpha.chart,fill_alpha.legend,fill_alpha.free Visual variable determines fill color transparency. See details. col_alpha,col_alpha.scale,col_alpha.legend,col_alpha.chart,col_alpha.free Visual variable determines color transparency. See details. linejoin,lineend Line join line end. See gpar() details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). popup.vars names data variables shown popups \"view\" mode. Set popup.vars TRUE show variables shape object. Set popup.vars FALSE disable popups. Set popup.vars character vector variable names variables popups. default (NA) depends whether visual variables (e.g.fill) used. , shown. variables shape object shown. popup.format list formatting options popup values. See argument legend.format options. applicable numeric data variables. one list formatting options provided, applied numeric variables popup.vars. Also, (named) list lists can provided. case, list formatting options applied named variable. hover name data variable specifies hover labels (view mode ). Set FALSE disable hover labels. default FALSE, unless id specified. case, set id, id name data variable specifies indices spatial features. used \"view\" mode. type cartogram type, one : \"cont\" contiguous cartogram, \"ncont\" non-contiguous cartogram \"dorling\" Dorling cartograms itermax, maximum number iterations (see cartogram::cartogram_cont()) expansion factor expansion, see cartogram::cartogram_ncont() (argument k) inplace polygon modified original place? (TRUE default) share share bounding box filled larger circle (see cartogram::cartogram_dorling() argument k)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":null,"dir":"Reference","previous_headings":"","what":"Legend charts — tm_chart","title":"Legend charts — tm_chart","text":"Legend charts small charts added map, usually addition legends.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legend charts — tm_chart","text":"","code":"tm_chart_histogram(   breaks,   plot.axis.x,   plot.axis.y,   extra.ggplot2,   position,   width,   height,   stack,   z,   group.frame,   resize_as_group )  tm_chart_bar(   plot.axis.x,   plot.axis.y,   extra.ggplot2,   position,   width,   height,   stack,   z,   group.frame,   resize_as_group )  tm_chart_donut(position, width, height, stack, z, group.frame, resize_as_group)  tm_chart_violin(   position,   width,   height,   stack,   z,   group.frame,   resize_as_group )  tm_chart_box(position, width, height, stack, z, group.frame, resize_as_group)  tm_chart_none()  tm_chart_heatmap(   position,   width,   height,   stack,   z,   group.frame,   resize_as_group )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legend charts — tm_chart","text":"breaks breaks bins (histograms) plot.axis.x, plot.axis.y x axis y axis plot? extra.ggplot2 Extra ggplot2 code position Position chart. See tm_pos() details width number text lines (height ) height number text lines stack stack map components? z stacking order group.frame group.frame resize_as_group resize_as_group","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Legend charts — tm_chart","text":"Note charts different charts drawn inside map. called glyphs (implemented).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_chart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Legend charts — tm_chart","text":"","code":"## numerical variable  tm_shape(World) +    tm_polygons(\"HPI\",      fill.scale = tm_scale_intervals(),      fill.chart = tm_chart_histogram())   tm_shape(World) +    tm_polygons(\"HPI\",          fill.scale = tm_scale_continuous(),          fill.chart = tm_chart_histogram(           position = tm_pos_out(\"center\", \"bottom\"),           width = 30)         )   tm_shape(World) +    tm_polygons(\"HPI\",          fill.scale = tm_scale_intervals(),          fill.chart = tm_chart_donut())   tm_shape(World) +    tm_polygons(\"HPI\",          fill.scale = tm_scale_intervals(),          fill.chart = tm_chart_box())   tm_shape(World) +    tm_polygons(\"HPI\",          fill.scale = tm_scale_intervals(),          fill.chart = tm_chart_violin())   # with additional ggplot2 code require(ggplot2) #> Loading required package: ggplot2 tm_shape(World) +    tm_polygons(\"HPI\",          fill.scale = tm_scale_intervals(),          fill.chart = tm_chart_bar(           extra.ggplot2 = theme(             panel.grid.major.y = element_line(colour = \"red\")           ))         )   tm_shape(land) +   tm_raster(\"trees\",         col.chart = tm_chart_histogram())   ## categorical variable tm_shape(World) +    tm_polygons(\"economy\",          fill.scale = tm_scale_categorical(),          fill.chart = tm_chart_bar())   tm_shape(World) +    tm_polygons(\"economy\",          fill.scale = tm_scale_categorical(),          fill.chart = tm_chart_donut())   tm_shape(World) +   tm_polygons(tm_vars(c(\"HPI\", \"well_being\"), multivariate = TRUE),         fill.chart = tm_chart_heatmap()) #> Labels abbreviated by the first letters, e.g.: \"2 to 3\" => \"2\""},{"path":"https://r-tmap.github.io/tmap/reference/tm_compass.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: compass — tm_compass","title":"Map component: compass — tm_compass","text":"Map component adds compass","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_compass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: compass — tm_compass","text":"","code":"tm_compass(   north,   type,   text.size,   size,   show.labels,   cardinal.directions,   text.color,   color.dark,   color.light,   lwd,   position,   bg.color,   bg.alpha,   stack,   just,   frame,   frame.lwd,   frame.r,   margins,   z )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_compass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: compass — tm_compass","text":"north north type type text.size text.size size size show.labels show.labels cardinal.directions cardinal.directions text.color text.color color.dark color.dark color.light color.light lwd lwd position position bg.color bg.color bg.alpha bg.alpha stack stack just just frame frame frame.lwd frame.lwd frame.r frame.r margins margins z z","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_const.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap function to define a constant visual value — tm_const","title":"tmap function to define a constant visual value — tm_const","text":"tmap function define constant visual value","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_const.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap function to define a constant visual value — tm_const","text":"","code":"tm_const()"},{"path":"https://r-tmap.github.io/tmap/reference/tm_credits.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: (credits) text — tm_credits","title":"Map component: (credits) text — tm_credits","text":"Map component adds text, typically used credits","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_credits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: (credits) text — tm_credits","text":"","code":"tm_credits(   text,   size,   color,   padding,   fontface,   fontfamily,   stack,   just,   frame,   frame.lwd,   frame.r,   bg.color,   bg.alpha,   position,   width,   height,   group.frame,   resize_as_group,   z )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_credits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: (credits) text — tm_credits","text":"text text title size font size title color color padding padding fontface font face fontfamily font family stack stack just just frame frame frame.lwd frame.lwd frame.r frame.r bg.color bg.color bg.alpha bg.alpha position position width width height height group.frame group.frame resize_as_group resize_as_group z z","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_extra_innner_margin.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap layout: helper functions — tm_place_legends_right","title":"tmap layout: helper functions — tm_place_legends_right","text":"tmap layout: helper functions","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_extra_innner_margin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap layout: helper functions — tm_place_legends_right","text":"","code":"tm_place_legends_right(width = NA)  tm_place_legends_left(width = NA)  tm_place_legends_bottom(height = NA)  tm_place_legends_top(height = NA)  tm_place_legends_inside(pos.h = NULL, pos.v = NULL)  tm_extra_innner_margin(left = 0, right = 0, top = 0, bottom = 0)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_extra_innner_margin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmap layout: helper functions — tm_place_legends_right","text":"width width height height pos.h, pos.v position (horizontal vertical) left, right, top, bottom extra margins","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_facets.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify facets — tm_facets","title":"Specify facets — tm_facets","text":"tm_facets_wrap() specify facets one grouping variable (one faceting dimension). tm_facets_(hv)stack() stacks facets either horizontally vertically (one grouping variable). tm_facets_grid() supports three faceting dimensions. tm_facets_pagewise() can used replace old along argument. tm_facets_flip() can used flip facets. tm_facets() core function, recommended use functions.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify facets — tm_facets","text":"","code":"tm_facets(   by = NULL,   rows = NULL,   columns = NULL,   pages = NULL,   as.layers = FALSE,   nrow = NA,   ncol = NA,   byrow = TRUE,   orientation = NA,   free.coords = NA,   drop.units = TRUE,   drop.empty.facets = TRUE,   drop.NA.facets = FALSE,   sync = TRUE,   na.text = NA,   scale.factor = 2,   type = NA,   along = NULL,   free.scales = NULL,   ... )  tm_facets_grid(rows = NULL, columns = NULL, pages = NULL, ...)  tm_facets_wrap(by = \"VARS__\", nrow = NA, ncol = NA, byrow = TRUE, ...)  tm_facets_pagewise(by = \"VARS__\", nrow = 1, ncol = 1, byrow = TRUE, ...)  tm_facets_stack(by = \"VARS__\", orientation = NA, ...)  tm_facets_hstack(by = \"VARS__\", ...)  tm_facets_vstack(by = \"VARS__\", ...)  tm_facets_flip(...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify facets — tm_facets","text":"Group variable (facet wrap facet stack) rows Variable specifies rows (facet grid) columns Variable specifies columns (facet grid) pages Variable specifies pages (facet grid) .layers show facets layers? nrow Number rows ncol Number columns byrow facets wrapped row? orientation facet stack: horizontal vertical? free.coords Logical. argument specified, map coordinate ranges? default TRUE, unless facets shown different layers (.layers = TRUE) drop.units Logical. argument specified, non-selected spatial units dropped? FALSE, plotted mapped aesthetics regarded missing values. applicable raster shapes. default TRUE. drop.empty.facets Logical. argument specified, empty facets dropped? Empty facets occur -variable contains unused levels. TRUE two -variables specified, empty rows columns dropped. drop.NA.facets Logical. argument specified, data values specific facets missing, facets dropped? FALSE default. v3, called showNA. sync Logical. navigation view mode (zooming panning) synchronized? default TRUE facets bounding box. generally case rasters plotted, free.coords FALSE. na.text Text used facets missing values. v3, textNA. scale.factor Number determines elements (e.g. font sizes, symbol sizes, line widths) small multiples scaled relation scaling factor shapes. elements scaled scale.factorth root scaling factor shapes. , scale.factor=1, scaled proportional scaling shapes. Since elements, especially text, often small read, higher value recommended. default, scale.factor=2. type \"grid\", \"wrap\" \"stack\" along deprecated Please use tm_facets_pagewisse() free.scales deprecated. Please use .free arguments layer functions, e.g. fill.free tm_polygons. ... passed tm_facets()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_facets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify facets — tm_facets","text":"","code":"tm_shape(NLD_dist) +   tm_polygons(\"edu_appl_sci\",     fill.scale = tm_scale_intervals(values = \"pu_gn\", style = \"kmeans\", n = 7)) +   tm_facets(by = \"province\") + tm_shape(NLD_muni) +   tm_borders(lwd = 3) +   tm_facets(by = \"province\") + tm_title(\"Population with a univeristy degree (incl appl. sciences), percentages\") #> [plot mode] fit legend/component: Some legend items or map compoments do not #> fit well, and are therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.   tm_shape(World) +   tm_polygons(c(\"gender\", \"press\"),     fill.scale = list(tm_scale_intervals(values = \"bu_br_div\", midpoint = 0.5),       tm_scale_intervals(values = \"pu_gn_div\", midpoint = 50)),     fill.legend = tm_legend(\"\")) + tm_layout(panel.labels = c(\"Gender Inequality Index (GII)\", \"World Press Freedom Index\"))"},{"path":"https://r-tmap.github.io/tmap/reference/tm_graticules.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate grid / graticule lines — tm_graticules","title":"Coordinate grid / graticule lines — tm_graticules","text":"Draw latitude longitude graticules. creates tmap-element draws coordinate grid lines. serves layer can drawn anywhere layers. See tm_grid() drawing horizontal lines.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_graticules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate grid / graticule lines — tm_graticules","text":"","code":"tm_graticules(   x = NA,   y = NA,   n.x = NA,   n.y = NA,   crs = 4326,   labels.format = list(suffix = intToUtf8(176)),   labels.cardinal = TRUE,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_graticules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate grid / graticule lines — tm_graticules","text":"x X coordinates vertical grid lines. NA, specified pretty scale n.x. y Y coordinates horizontal grid lines. NA, specified pretty scale n.y. n.x Preferred number grid lines x axis. labels, pretty() sequence used, number actual labels may different n.x. n.y Preferred number grid lines y axis. labels, pretty() sequence used, number actual labels may different n.y. crs Projection character. specified, grid lines projected accordingly. Many world maps projected, still latitude longitude (EPSG 4326) grid lines. labels.format List formatting options grid labels. Parameters : fun Function specify labels. take numeric vector, return character vector size. default specified. specified, list items scientific, format, digits (see ) used. scientific labels formatted scientifically? , square brackets used, format numbers \"g\". Otherwise, format=\"f\", text.separator, text.less., text..used. Also, numbers automatically rounded millions billions applicable. format default, \"f\", .e. standard notation xxx.xxx, used. scientific=TRUE \"g\", means numbers formatted scientifically, .e. n.dddE+nn needed save space. digits Number digits decimal point format=\"f\", number significant digits otherwise. ... arguments passed formatC() labels.cardinal Add four cardinal directions (N, E, S, W) labels, instead using negative coordinates west south (assumes coordinates positive north-east direction). ... Arguments passed tm_grid col Color grid lines. lwd Line width grid lines alpha Alpha transparency grid lines. Number 0 1. default, alpha transparency col taken. labels.show Show tick labels. Either one value x y axis, vector two: first x latter y. labels.pos position labels. Vector two: horizontal (\"left\" \"right\") vertical (\"top\" \"bottom\") position. labels.size Font size tick labels labels.col Font color tick labels labels.rot Rotation angles labels. Vector two values: first rotation angle (degrees) tick labels x axis second rotation angle tick labels y axis. 0, 90, 180, 270 valid values. labels.margin.x Margin tick labels x axis frame. Note labels.inside_frame = FALSE ticks = TRUE, ticks adjusted accordingly. labels.margin.y Margin tick labels y axis frame. Note labels.inside_frame = FALSE ticks = TRUE, ticks adjusted accordingly. labels.space.x Space used labels ticks x-axis labels.inside_frame = FALSE. default, determined automatically using widths heights tick labels. unit parameter text line height. labels.space.y Space used labels ticks y-axis labels.inside_frame = FALSE. default, determined automatically using widths heights tick labels. unit parameter text line height. labels.inside_frame Show labels inside frame? default FALSE. ticks labels.inside_frame = FALSE, ticks can drawn labels frame? Either one value x y axis, vector two: first x latter y. lines labels.inside_frame = FALSE, grid lines can drawn? ndiscr Number points discretize parallel meridian (applicable curved grid lines) zindex zindex pane view mode. default, set layer number plus 400. default, tmap layers therefore placed custom panes \"tmap401\", \"tmap402\", etc., except base tile layers, placed standard \"tile\". parameter determines name pane z-index, determines pane order bottom top. instance, zindex set 500, pane named \"tmap500\". group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_graticules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate grid / graticule lines — tm_graticules","text":"","code":"current.mode <- tmap_mode(\"plot\") #> ℹ tmap mode set to \"plot\".  tm_shape(NLD_muni) +    tm_polygons() +   tm_grid()   tm_shape(NLD_muni) +    tm_polygons() +   tm_grid(crs = 4326)   tm_shape(NLD_muni) +    tm_polygons() +   tm_grid(crs = 3035, labels.inside.frame = TRUE)   tm_shape(World) +   tm_polygons() +   tm_facets(by = \"continent\") +   tm_grid(labels.inside.frame = TRUE)   tm_shape(NLD_muni) +   tm_polygons() +   tm_graticules()   tm_shape(NLD_muni) +   tm_polygons() +   tm_graticules(labels.pos = c(\"right\", \"top\"))    data(NLD_muni, World)  tmap_arrange(   qtm(NLD_muni, borders = NULL) + tm_grid(),   qtm(NLD_muni, borders = NULL) + tm_graticules() ) #>  #> ── tmap v3 code detected ─────────────────────────────────────────────────────── #> [v3->v4] `qtm()`: use `col = NA` instead of `borders = NULL`. #> [v3->v4] `qtm()`: use `col = NA` instead of `borders = NULL`.   qtm(World, shape.crs = \"+proj=robin\", style = \"natural\") +   tm_graticules(ticks = FALSE) +   tm_layout(frame=FALSE) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is FALSE   tmap_mode(current.mode) #> ℹ tmap mode set to \"plot\"."},{"path":"https://r-tmap.github.io/tmap/reference/tm_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate grid / graticule lines — tm_grid","title":"Coordinate grid / graticule lines — tm_grid","text":"tm_grid() draws horizontal vertical lines according coordinate system (master) shape object. Creates tmap-element draws coordinate grid lines. serves layer can drawn anywhere layers. See tm_graticules() draw latitude longitude graticules.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate grid / graticule lines — tm_grid","text":"","code":"tm_grid(   x = NA,   y = NA,   n.x = NA,   n.y = NA,   crs = NA,   col = NA,   lwd = 1,   alpha = NA,   labels.show = TRUE,   labels.pos = c(\"left\", \"bottom\"),   labels.size = 0.6,   labels.col = NA,   labels.rot = c(0, 0),   labels.format = list(big.mark = \",\"),   labels.cardinal = FALSE,   labels.margin.x = 0,   labels.margin.y = 0,   labels.space.x = NA,   labels.space.y = NA,   labels.inside_frame = FALSE,   ticks = labels.show & !labels.inside_frame,   lines = TRUE,   ndiscr = 100,   zindex = NA,   group = NA,   group.control = \"none\",   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate grid / graticule lines — tm_grid","text":"x X coordinates vertical grid lines. NA, specified pretty scale n.x. y Y coordinates horizontal grid lines. NA, specified pretty scale n.y. n.x Preferred number grid lines x axis. labels, pretty() sequence used, number actual labels may different n.x. n.y Preferred number grid lines y axis. labels, pretty() sequence used, number actual labels may different n.y. crs Projection character. specified, grid lines projected accordingly. Many world maps projected, still latitude longitude (EPSG 4326) grid lines. col Color grid lines. lwd Line width grid lines alpha Alpha transparency grid lines. Number 0 1. default, alpha transparency col taken. labels.show Show tick labels. Either one value x y axis, vector two: first x latter y. labels.pos position labels. Vector two: horizontal (\"left\" \"right\") vertical (\"top\" \"bottom\") position. labels.size Font size tick labels labels.col Font color tick labels labels.rot Rotation angles labels. Vector two values: first rotation angle (degrees) tick labels x axis second rotation angle tick labels y axis. 0, 90, 180, 270 valid values. labels.format List formatting options grid labels. Parameters : fun Function specify labels. take numeric vector, return character vector size. default specified. specified, list items scientific, format, digits (see ) used. scientific labels formatted scientifically? , square brackets used, format numbers \"g\". Otherwise, format=\"f\", text.separator, text.less., text..used. Also, numbers automatically rounded millions billions applicable. format default, \"f\", .e. standard notation xxx.xxx, used. scientific=TRUE \"g\", means numbers formatted scientifically, .e. n.dddE+nn needed save space. digits Number digits decimal point format=\"f\", number significant digits otherwise. ... arguments passed formatC() labels.cardinal Add four cardinal directions (N, E, S, W) labels, instead using negative coordinates west south (assumes coordinates positive north-east direction). labels.margin.x Margin tick labels x axis frame. Note labels.inside_frame = FALSE ticks = TRUE, ticks adjusted accordingly. labels.margin.y Margin tick labels y axis frame. Note labels.inside_frame = FALSE ticks = TRUE, ticks adjusted accordingly. labels.space.x Space used labels ticks x-axis labels.inside_frame = FALSE. default, determined automatically using widths heights tick labels. unit parameter text line height. labels.space.y Space used labels ticks y-axis labels.inside_frame = FALSE. default, determined automatically using widths heights tick labels. unit parameter text line height. labels.inside_frame Show labels inside frame? default FALSE. ticks labels.inside_frame = FALSE, ticks can drawn labels frame? Either one value x y axis, vector two: first x latter y. lines labels.inside_frame = FALSE, grid lines can drawn? ndiscr Number points discretize parallel meridian (applicable curved grid lines) zindex zindex pane view mode. default, set layer number plus 400. default, tmap layers therefore placed custom panes \"tmap401\", \"tmap402\", etc., except base tile layers, placed standard \"tile\". parameter determines name pane z-index, determines pane order bottom top. instance, zindex set 500, pane named \"tmap500\". group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). ... Used catch deprecated arguments tmap v3.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate grid / graticule lines — tm_grid","text":"","code":"current.mode <- tmap_mode(\"plot\") #> ℹ tmap mode set to \"plot\".  tm_shape(NLD_muni) +    tm_polygons() +   tm_grid()   tm_shape(NLD_muni) +    tm_polygons() +   tm_grid(crs = 4326)   tm_shape(NLD_muni) +    tm_polygons() +   tm_grid(crs = 3035, labels.inside.frame = TRUE)   tm_shape(World) +   tm_polygons() +   tm_facets(by = \"continent\") +   tm_grid(labels.inside.frame = TRUE)   tm_shape(NLD_muni) +   tm_polygons() +   tm_graticules()   tm_shape(NLD_muni) +   tm_polygons() +   tm_graticules(labels.pos = c(\"right\", \"top\"))    data(NLD_muni, World)  tmap_arrange(   qtm(NLD_muni, borders = NULL) + tm_grid(),   qtm(NLD_muni, borders = NULL) + tm_graticules() ) #>  #> ── tmap v3 code detected ─────────────────────────────────────────────────────── #> [v3->v4] `qtm()`: use `col = NA` instead of `borders = NULL`. #> [v3->v4] `qtm()`: use `col = NA` instead of `borders = NULL`.   qtm(World, shape.crs = \"+proj=robin\", style = \"natural\") +   tm_graticules(ticks = FALSE) +   tm_layout(frame=FALSE)   tmap_mode(current.mode) #> ℹ tmap mode set to \"plot\"."},{"path":"https://r-tmap.github.io/tmap/reference/tm_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer group control — tm_group","title":"Layer group control — tm_group","text":"Controls layer groups interactive maps (view mode): layer control box (radio buttons check boxes) zoom levels layers displayed .","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer group control — tm_group","text":"","code":"tm_group(name, control = NA, zoom_levels = NA)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer group control — tm_group","text":"name group name corresponds group name specified layer functions (e.g.  tm_polygons()) control group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). zoom_levels zoom levels group displays . specified control set \"none\".","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: iso (contour) — tm_iso","title":"Map layer: iso (contour) — tm_iso","text":"Map layer draws iso (contour) lines. Stack tm_lines() tm_labels_highlighted.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: iso (contour) — tm_iso","text":"","code":"tm_iso(   col,   text,   ...,   options_lines = opt_tm_lines(),   options_labels = opt_tm_labels() )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_iso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: iso (contour) — tm_iso","text":"col Visual variable determines color. See details. text Visual variable determines text. See details. ... passed tm_lines() tm_labels_highlighted(). text color alpha transparency text labels, please use text_col text_alpha instead col col_alpha. options_lines options tm_lines() options_labels options tm_labels_highlighted()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Layout options — tm_style","title":"Layout options — tm_style","text":"Set tmap options directly related layout.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layout options — tm_style","text":"","code":"tm_style(style, ...)  tm_layout(   scale,   asp,   bg.color,   outer.bg.color,   frame,   frame.lwd,   frame.r,   frame.double_line,   outer.margins,   inner.margins,   inner.margins.extra,   meta.margins,   meta.auto_margins,   between_margin,   panel.margin,   component.offset,   component.stack_margin,   grid.mark.height,   xylab.height,   coords.height,   xlab.show,   xlab.text,   xlab.size,   xlab.color,   xlab.rotation,   xlab.space,   xlab.fontface,   xlab.fontfamily,   xlab.side,   ylab.show,   ylab.text,   ylab.size,   ylab.color,   ylab.rotation,   ylab.space,   ylab.fontface,   ylab.fontfamily,   ylab.side,   panel.type,   panel.wrap.pos,   panel.xtab.pos,   unit,   color.sepia_intensity,   color.saturation,   color_vision_deficiency_sim,   text.fontface,   text.fontfamily,   component.position,   component.autoscale,   legend.show,   legend.design,   legend.orientation,   legend.position,   legend.width,   legend.height,   legend.stack,   legend.group.frame,   legend.resize_as_group,   legend.reverse,   legend.na.show,   legend.title.color,   legend.title.size,   legend.title.fontface,   legend.title.fontfamily,   legend.xlab.color,   legend.xlab.size,   legend.xlab.fontface,   legend.xlab.fontfamily,   legend.ylab.color,   legend.ylab.size,   legend.ylab.fontface,   legend.ylab.fontfamily,   legend.text.color,   legend.text.size,   legend.text.fontface,   legend.text.fontfamily,   legend.frame,   legend.frame.lwd,   legend.frame.r,   legend.bg.color,   legend.bg.alpha,   legend.only,   legend.settings.standard.portrait,   legend.settings.standard.landscape,   chart.show,   chart.plot.axis.x,   chart.plot.axis.y,   chart.position,   chart.width,   chart.height,   chart.stack,   chart.group.frame,   chart.resize_as_group,   chart.reverse,   chart.na.show,   chart.title.color,   chart.title.size,   chart.title.fontface,   chart.title.fontfamily,   chart.xlab.color,   chart.xlab.size,   chart.xlab.fontface,   chart.xlab.fontfamily,   chart.ylab.color,   chart.ylab.size,   chart.ylab.fontface,   chart.ylab.fontfamily,   chart.text.color,   chart.text.size,   chart.text.fontface,   chart.text.fontfamily,   chart.frame,   chart.frame.lwd,   chart.frame.r,   chart.bg.color,   chart.bg.alpha,   chart.object.color,   title.show,   title.size,   title.color,   title.fontface,   title.fontfamily,   title.bg.color,   title.bg.alpha,   title.padding,   title.frame,   title.frame.lwd,   title.frame.r,   title.stack,   title.position,   title.width,   title.group.frame,   title.resize_as_group,   credits.show,   credits.size,   credits.color,   credits.fontface,   credits.fontfamily,   credits.bg.color,   credits.bg.alpha,   credits.padding,   credits.frame,   credits.frame.lwd,   credits.frame.r,   credits.stack,   credits.position,   credits.width,   credits.height,   credits.group.frame,   credits.resize_as_group,   compass.north,   compass.type,   compass.text.size,   compass.size,   compass.show.labels,   compass.cardinal.directions,   compass.text.color,   compass.color.dark,   compass.color.light,   compass.lwd,   compass.bg.color,   compass.bg.alpha,   compass.margins,   compass.show,   compass.stack,   compass.position,   compass.frame,   compass.frame.lwd,   compass.frame.r,   compass.group.frame,   compass.resize_as_group,   logo.height,   logo.margins,   logo.between_margin,   logo.show,   logo.stack,   logo.position,   logo.frame,   logo.frame.lwd,   logo.frame.r,   logo.group.frame,   logo.resize_as_group,   scalebar.show,   scalebar.breaks,   scalebar.width,   scalebar.text.size,   scalebar.text.color,   scalebar.color.dark,   scalebar.color.light,   scalebar.lwd,   scalebar.bg.color,   scalebar.bg.alpha,   scalebar.size,   scalebar.margins,   scalebar.stack,   scalebar.position,   scalebar.frame,   scalebar.frame.lwd,   scalebar.frame.r,   scalebar.group.frame,   scalebar.resize_as_group,   grid.show,   grid.labels.pos,   grid.x,   grid.y,   grid.n.x,   grid.n.y,   grid.crs,   grid.col,   grid.lwd,   grid.alpha,   grid.labels.show,   grid.labels.size,   grid.labels.col,   grid.labels.rot,   grid.labels.format,   grid.labels.cardinal,   grid.labels.margin.x,   grid.labels.margin.y,   grid.labels.space.x,   grid.labels.space.y,   grid.labels.inside_frame,   grid.ticks,   grid.lines,   grid.ndiscr,   mouse_coordinates.stack,   mouse_coordinates.position,   mouse_coordinates.show,   minimap.server,   minimap.toggle,   minimap.stack,   minimap.position,   minimap.show,   panel.show,   panel.labels,   panel.label.size,   panel.label.color,   panel.label.fontface,   panel.label.fontfamily,   panel.label.bg.color,   panel.label.frame,   panel.label.frame.lwd,   panel.label.frame.r,   panel.label.height,   panel.label.rot,   bbox,   set_bounds,   set_view,   set_zoom_limits,   qtm.scalebar,   qtm.minimap,   qtm.mouse_coordinates,   earth_boundary,   earth_boundary.color,   earth_boundary.lwd,   earth_datum,   space.color,   check_and_fix,   basemap.show,   basemap.server,   basemap.alpha,   basemap.zoom,   tiles.show,   tiles.server,   tiles.alpha,   tiles.zoom,   attr.color,   title = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layout options — tm_style","text":"style name style ... List tmap options set, option names (characters) returned (see details) scale Overall scale map asp Aspect ratio map. asp set NA (default) aspect ratio adjusted used shapes. set 0 aspect ratio adjusted size device divided number columns rows. bg.color Background color map. outer.bg.color Background color map outside frame. frame frame . frame.lwd line width frame. See graphics::par, option 'lwd'. frame.r r (radius) frame. frame.double_line double line frame. TRUE FALSE. outer.margins margins outer space (outside frame. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins margins inner space (inside frame). vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins.extra extra arguments margins inner space (inside frame). list arguments. meta.margins margins meta. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). meta.auto_margins auto_margins meta. between_margin between_margin . panel.margin margin panel. component.offset offset component. component.stack_margin stack_margin component. grid.mark.height height mark grid. xylab.height height xylab. coords.height height coords. xlab.show visibility xlab. TRUE FALSE. xlab.text text xlab. xlab.size size xlab. xlab.color color xlab. xlab.rotation rotation xlab. xlab.space space xlab. terms number line heights. xlab.fontface font face xlab. See graphics::par, option 'font'. xlab.fontfamily font family xlab. See graphics::par, option 'family'. xlab.side side xlab. ylab.show visibility ylab. TRUE FALSE. ylab.text text ylab. ylab.size size ylab. ylab.color color ylab. ylab.rotation rotation ylab. ylab.space space ylab. terms number line heights. ylab.fontface font face ylab. See graphics::par, option 'font'. ylab.fontfamily font family ylab. See graphics::par, option 'family'. ylab.side side ylab. panel.type type panel. panel.wrap.pos pos wrap panel. panel.xtab.pos pos xtab panel. unit unit . color.sepia_intensity sepia_intensity color. color.saturation saturation color. color_vision_deficiency_sim color_vision_deficiency_sim . text.fontface font face text. See graphics::par, option 'font'. text.fontfamily font family text. See graphics::par, option 'family'. component.position position component. component.autoscale autoscale component. legend.show visibility legend. TRUE FALSE. legend.design design legend. legend.orientation orientation legend. legend.position position legend. legend.width width legend. legend.height height legend. legend.stack stack legend. legend.group.frame frame group legend. legend.resize_as_group resize_as_group legend. legend.reverse reverse legend. legend.na.show visibility na legend. TRUE FALSE. legend.title.color color title legend. legend.title.size size title legend. legend.title.fontface font face title legend. See graphics::par, option 'font'. legend.title.fontfamily font family title legend. See graphics::par, option 'family'. legend.xlab.color color xlab legend. legend.xlab.size size xlab legend. legend.xlab.fontface font face xlab legend. See graphics::par, option 'font'. legend.xlab.fontfamily font family xlab legend. See graphics::par, option 'family'. legend.ylab.color color ylab legend. legend.ylab.size size ylab legend. legend.ylab.fontface font face ylab legend. See graphics::par, option 'font'. legend.ylab.fontfamily font family ylab legend. See graphics::par, option 'family'. legend.text.color color text legend. legend.text.size size text legend. legend.text.fontface font face text legend. See graphics::par, option 'font'. legend.text.fontfamily font family text legend. See graphics::par, option 'family'. legend.frame frame legend. legend.frame.lwd line width frame legend. See graphics::par, option 'lwd'. legend.frame.r r (radius) frame legend. legend.bg.color color bg legend. legend.bg.alpha alpha transparency bg legend. legend.legend. legend.settings.standard.portrait portrait standard settings legend. legend.settings.standard.landscape landscape standard settings legend. chart.show visibility chart. TRUE FALSE. chart.plot.axis.x x axis plot chart. chart.plot.axis.y y axis plot chart. chart.position position chart. chart.width width chart. chart.height height chart. chart.stack stack chart. chart.group.frame frame group chart. chart.resize_as_group resize_as_group chart. chart.reverse reverse chart. chart.na.show visibility na chart. TRUE FALSE. chart.title.color color title chart. chart.title.size size title chart. chart.title.fontface font face title chart. See graphics::par, option 'font'. chart.title.fontfamily font family title chart. See graphics::par, option 'family'. chart.xlab.color color xlab chart. chart.xlab.size size xlab chart. chart.xlab.fontface font face xlab chart. See graphics::par, option 'font'. chart.xlab.fontfamily font family xlab chart. See graphics::par, option 'family'. chart.ylab.color color ylab chart. chart.ylab.size size ylab chart. chart.ylab.fontface font face ylab chart. See graphics::par, option 'font'. chart.ylab.fontfamily font family ylab chart. See graphics::par, option 'family'. chart.text.color color text chart. chart.text.size size text chart. chart.text.fontface font face text chart. See graphics::par, option 'font'. chart.text.fontfamily font family text chart. See graphics::par, option 'family'. chart.frame frame chart. chart.frame.lwd line width frame chart. See graphics::par, option 'lwd'. chart.frame.r r (radius) frame chart. chart.bg.color color bg chart. chart.bg.alpha alpha transparency bg chart. chart.object.color color object chart. title.show visibility title. TRUE FALSE. title.size size title. title.color color title. title.fontface font face title. See graphics::par, option 'font'. title.fontfamily font family title. See graphics::par, option 'family'. title.bg.color color bg title. title.bg.alpha alpha transparency bg title. title.padding padding title. title.frame frame title. title.frame.lwd line width frame title. See graphics::par, option 'lwd'. title.frame.r r (radius) frame title. title.stack stack title. title.position position title. title.width width title. title.group.frame frame group title. title.resize_as_group resize_as_group title. credits.show visibility credits. TRUE FALSE. credits.size size credits. credits.color color credits. credits.fontface font face credits. See graphics::par, option 'font'. credits.fontfamily font family credits. See graphics::par, option 'family'. credits.bg.color color bg credits. credits.bg.alpha alpha transparency bg credits. credits.padding padding credits. credits.frame frame credits. credits.frame.lwd line width frame credits. See graphics::par, option 'lwd'. credits.frame.r r (radius) frame credits. credits.stack stack credits. credits.position position credits. credits.width width credits. credits.height height credits. credits.group.frame frame group credits. credits.resize_as_group resize_as_group credits. compass.north north compass. compass.type type compass. compass.text.size size text compass. compass.size size compass. compass.show.labels labels show compass. compass.cardinal.directions directions cardinal compass. compass.text.color color text compass. compass.color.dark dark color compass. compass.color.light light color compass. compass.lwd line width compass. See graphics::par, option 'lwd'. compass.bg.color color bg compass. compass.bg.alpha alpha transparency bg compass. compass.margins margins compass. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). compass.show visibility compass. TRUE FALSE. compass.stack stack compass. compass.position position compass. compass.frame frame compass. compass.frame.lwd line width frame compass. See graphics::par, option 'lwd'. compass.frame.r r (radius) frame compass. compass.group.frame frame group compass. compass.resize_as_group resize_as_group compass. logo.height height logo. logo.margins margins logo. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). logo.between_margin between_margin logo. logo.show visibility logo. TRUE FALSE. logo.stack stack logo. logo.position position logo. logo.frame frame logo. logo.frame.lwd line width frame logo. See graphics::par, option 'lwd'. logo.frame.r r (radius) frame logo. logo.group.frame frame group logo. logo.resize_as_group resize_as_group logo. scalebar.show visibility scalebar. TRUE FALSE. scalebar.breaks break values scalebar. scalebar.width width scalebar. scalebar.text.size size text scalebar. scalebar.text.color color text scalebar. scalebar.color.dark dark color scalebar. scalebar.color.light light color scalebar. scalebar.lwd line width scalebar. See graphics::par, option 'lwd'. scalebar.bg.color color bg scalebar. scalebar.bg.alpha alpha transparency bg scalebar. scalebar.size size scalebar. scalebar.margins margins scalebar. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). scalebar.stack stack scalebar. scalebar.position position scalebar. scalebar.frame frame scalebar. scalebar.frame.lwd line width frame scalebar. See graphics::par, option 'lwd'. scalebar.frame.r r (radius) frame scalebar. scalebar.group.frame frame group scalebar. scalebar.resize_as_group resize_as_group scalebar. grid.show visibility grid. TRUE FALSE. grid.labels.pos pos labels grid. grid.x x grid. grid.y y grid. grid.n.x x n grid. grid.n.y y n grid. grid.crs coordinate reference system (CRS) grid. grid.col color grid. grid.lwd line width grid. See graphics::par, option 'lwd'. grid.alpha alpha transparency grid. grid.labels.show visibility labels grid. TRUE FALSE. grid.labels.size size labels grid. grid.labels.col color labels grid. grid.labels.rot rot labels grid. grid.labels.format format labels grid. grid.labels.cardinal cardinal labels grid. grid.labels.margin.x x margin labels grid. grid.labels.margin.y y margin labels grid. grid.labels.space.x x space labels grid. grid.labels.space.y y space labels grid. grid.labels.inside_frame inside_frame labels grid. grid.ticks ticks grid. grid.lines lines grid. grid.ndiscr ndiscr grid. mouse_coordinates.stack stack mouse_coordinates. mouse_coordinates.position position mouse_coordinates. mouse_coordinates.show visibility mouse_coordinates. TRUE FALSE. minimap.server server minimap. minimap.toggle toggle minimap. minimap.stack stack minimap. minimap.position position minimap. minimap.show visibility minimap. TRUE FALSE. panel.show visibility panel. TRUE FALSE. panel.labels labels panel. panel.label.size size label panel. panel.label.color color label panel. panel.label.fontface font face label panel. See graphics::par, option 'font'. panel.label.fontfamily font family label panel. See graphics::par, option 'family'. panel.label.bg.color color bg label panel. panel.label.frame frame label panel. panel.label.frame.lwd line width frame label panel. See graphics::par, option 'lwd'. panel.label.frame.r r (radius) frame label panel. panel.label.height height label panel. panel.label.rot rot label panel. bbox bounding box . set_bounds set_bounds . set_view set_view . set_zoom_limits set_zoom_limits . qtm.scalebar scalebar qtm. qtm.minimap minimap qtm. qtm.mouse_coordinates mouse_coordinates qtm. earth_boundary earth_boundary . earth_boundary.color color earth_boundary. earth_boundary.lwd line width earth_boundary. See graphics::par, option 'lwd'. earth_datum earth_datum . space.color color space. check_and_fix check_and_fix . basemap.show visibility basemap. TRUE FALSE. basemap.server server basemap. basemap.alpha alpha transparency basemap. basemap.zoom zoom basemap. tiles.show visibility tiles. TRUE FALSE. tiles.server server tiles. tiles.alpha alpha transparency tiles. tiles.zoom zoom tiles. attr.color color attr. title deprecated See tm_title()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Layout options — tm_style","text":"","code":"data(land, World) # Error unable to warp stars (argument not yet added to tm_shape) # On Windows if (FALSE) { # \\dontrun{ tm_shape(land, raster.wrap = FALSE) +   tm_raster(     \"elevation\",     col.scale = tm_scale_intervals(       breaks = c(-Inf, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, Inf),       values = terrain.colors(9), midpoint = NA     ),     col.legend = tm_legend(       title = \"Elevation\", position = tm_pos_in(\"left\", \"bottom\"),        frame = TRUE, bg.color = \"lightblue\"     )   ) +   tm_shape(World, is.main = TRUE, crs = \"+proj=eck4\") +   tm_borders(\"grey20\") +   tm_graticules(labels.size = .5) +   tm_text(\"name\", size = \"AREA\") +   # tm_compass(position = c(.65, .15), color.light = \"grey90\") +   # tm_credits(\"Eckert IV projection\", position = c(\"right\", \"BOTTOM\")) +   tm_style(\"classic_v3\") +   tm_layout(bg.color = \"lightblue\", inner.margins = c(0, 0, .02, 0)) } # } data(land, World)  tm_shape(World) +    tm_fill(\"pop_est_dens\", fill.scale = tm_scale_intervals(style = \"kmeans\"),       fill.legend = tm_legend(title = \"Population density\")) +   tm_style(\"albatross_v3\", frame.lwd = 10) +   tm_format(\"World\") +   tm_title(\"The World\", position = tm_pos_in(\"left\", \"top\")) #> [deprecated] `tm_format(\"World\")` is deprecated as of tmap 4.0. Instead, please #> use `tm_layout(inner.margins=c(0, 0.05, 0.025, 0.01), #> legend.position=tm_pos_in(\"left\", \"bottom\"), component.position=c(\"right\", #> \"bottom\"), scale=.8, title.size = 1.3)`    ################################ # not working yet: ################################  if (FALSE) { # \\dontrun{   tm_shape(land) +     tm_raster(\"elevation\",           breaks=c(-Inf, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, Inf),             palette = terrain.colors(9), title=\"Elevation\", midpoint = NA) +     tm_shape(World, is.master=TRUE, projection = \"+proj=eck4\") +     tm_borders(\"grey20\") +     tm_graticules(labels.size = .5) +     tm_text(\"name\", size=\"AREA\") +     tm_compass(position = c(.65, .15), color.light = \"grey90\") +     tm_credits(\"Eckert IV projection\", position = c(\"right\", \"BOTTOM\")) +     tm_style(\"classic\") +     tm_layout(bg.color=\"lightblue\",           inner.margins=c(.04,.03, .02, .01),            earth_boundary = TRUE,            space.color=\"grey90\") +     tm_legend(position = c(\"left\", \"bottom\"),            frame = TRUE,           bg.color=\"lightblue\") } # }  tm_shape(World, projection=\"+proj=robin\") +   tm_polygons(\"HPI\", palette=\"div\", n=7,          title = \"Happy Planet Index\") +   tm_credits(\"Robinson projection\", position = c(\"right\", \"BOTTOM\")) +   tm_style(\"natural\", earth_boundary = c(-180, -87, 180, 87), inner.margins = .05) +   tm_legend(position=c(\"left\", \"bottom\"), bg.color=\"grey95\", frame=TRUE) #>  #> ── tmap v3 code detected ─────────────────────────────────────────────────────── #> [v3->v4] `tm_shape()`: use `crs` instead of `projection`. #> [v3->v4] `tm_polygons()`: migrate the argument(s) related to the scale of the #> visual variable `fill` namely 'n', 'palette' (rename to 'values') to fill.scale #> = tm_scale(<HERE>). #> [v3->v4] `tm_polygons()`: migrate the argument(s) related to the legend of the #> visual variable `fill` namely 'title' to 'fill.legend = tm_legend(<HERE>)' #> [v3->v4] `tm_legend()`: use 'tm_legend()' inside a layer function, e.g. #> 'tm_polygons(..., fill.legend = tm_legend())' #> This message is displayed once every 8 hours.  # Not working yet if (FALSE) { # \\dontrun{ # Example to illustrate the type of titles tm_shape(World) +   tm_polygons(c(\"income_grp\", \"economy\"), title = c(\"Legend Title 1\", \"Legend Title 2\")) +   tm_layout(main.title = \"Main Title\",         main.title.position = \"center\",         main.title.color = \"blue\",         title = c(\"Title 1\", \"Title 2\"),         title.color = \"red\",         panel.labels = c(\"Panel Label 1\", \"Panel Label 2\"),         panel.label.color = \"purple\",         legend.text.color = \"brown\")  } # }    if (FALSE) { # \\dontrun{   # global option tmap.style demo      # get current style   current.style <- tmap_style()       qtm(World, fill = \"economy\", format = \"World\")      tmap_style(\"col_blind\")   qtm(World, fill = \"economy\", format = \"World\")      tmap_style(\"cobalt\")   qtm(World, fill = \"economy\", format = \"World\")      # set to current style   tmap_style(current.style) } # }  # TIP: check out these examples in view mode, enabled with tmap_mode(\"view\")"},{"path":"https://r-tmap.github.io/tmap/reference/tm_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Legend — tm_legend","title":"Legend — tm_legend","text":"Legend specification","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legend — tm_legend","text":"","code":"tm_legend(   title,   show,   orientation,   design,   reverse,   na.show,   position,   width,   height,   stack,   z,   group.frame,   resize_as_group,   title.color,   title.size,   title.fontface,   title.fontfamily,   title.padding,   text.color,   text.size,   text.fontface,   text.fontfamily,   format,   frame,   frame.lwd,   frame.r,   bg.color,   bg.alpha,   item.height,   item.width,   item.space,   item.na.height,   item.na.width,   item.na.space,   item.shape,   ticks,   ticks.disable.na,   ticks.col,   ticks.lwd,   title.align,   margins,   margin.item.text,   ... )  tm_legend_hide()  tm_legend_combine(variable)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legend — tm_legend","text":"title Legend title show Show legend? orientation Orientation legend: \"portrait\" \"landscape\" design PARAM_DESCRIPTION reverse legend reversed? na.show PARAM_DESCRIPTION position PARAM_DESCRIPTION width Width legend height Height legend stack PARAM_DESCRIPTION z PARAM_DESCRIPTION group.frame PARAM_DESCRIPTION resize_as_group PARAM_DESCRIPTION title.color Color legend title title.size Size legend title title.fontface Font face legend title title.fontfamily Font family legend title title.padding PARAM_DESCRIPTION text.color Color legend text text.size Size legend text text.fontface Font face legend text text.fontfamily Font family legend text format PARAM_DESCRIPTION frame PARAM_DESCRIPTION frame.lwd PARAM_DESCRIPTION frame.r PARAM_DESCRIPTION bg.color Background color legend bg.alpha Background transparency legend item.height PARAM_DESCRIPTION item.width PARAM_DESCRIPTION item.space PARAM_DESCRIPTION item.na.height PARAM_DESCRIPTION item.na.width PARAM_DESCRIPTION item.na.space PARAM_DESCRIPTION item.shape PARAM_DESCRIPTION ticks List vectors size 2 determines horizontal tick mark lines (portrait legends). values y-values begin endpoint tick mark. ticks.disable.na PARAM_DESCRIPTION ticks.col PARAM_DESCRIPTION ticks.lwd PARAM_DESCRIPTION title.align PARAM_DESCRIPTION margins PARAM_DESCRIPTION margin.item.text PARAM_DESCRIPTION ... visual values, e.g. col, fill, lwd, can specified. , overrule default visual values, determined drawn map objects (e.g. polygons) variable visual (transformation) variable combine legend : e.g. \"fill\" \"size\"","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Legend — tm_legend","text":"tm_legend component","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: lines — tm_lines","title":"Map layer: lines — tm_lines","text":"Map layer draws lines. Supported visual variables : col (color), lwd (line width), lty (line type), col_alpha (color alpha transparency).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: lines — tm_lines","text":"","code":"tm_lines(   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.chart = tm_chart_none(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.chart = tm_chart_none(),   lty.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   linejoin = \"round\",   lineend = \"round\",   plot.order = tm_plot_order(\"lwd\", reverse = TRUE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   popup.vars = NA,   popup.format = list(),   hover = NA,   id = \"\",   options = opt_tm_lines(),   ... )  opt_tm_lines(lines.only = \"ifany\")"},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: lines — tm_lines","text":"col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. lwd, lwd.scale, lwd.legend, lwd.chart, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.chart, lty.free Visual variable determines line type. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. linejoin, lineend line join line end. See gpar() details. plot.order Specification order spatial features drawn. See tm_plot_order() details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). popup.vars names data variables shown popups \"view\" mode. Set popup.vars TRUE show variables shape object. Set popup.vars FALSE disable popups. Set popup.vars character vector variable names variables popups. default (NA) depends whether visual variables (e.g.fill) used. , shown. variables shape object shown. popup.format list formatting options popup values. See argument legend.format options. applicable numeric data variables. one list formatting options provided, applied numeric variables popup.vars. Also, (named) list lists can provided. case, list formatting options applied named variable. hover name data variable specifies hover labels (view mode ). Set FALSE disable hover labels. default FALSE, unless id specified. case, set id, id name data variable specifies indices spatial features. used \"view\" mode. options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 lines.line geometries shape object (defined tm_shape()) plotted, also geometry types (like polygons)? default \"ifany\", means TRUE case geometry collection specified.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: lines — tm_lines","text":"visual variable arguments (e.g. col) can specified either data variable name (e.g., spatial vector attribute raster layer object specified tm_shape()), visual value (col, color expected). Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). *.scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_*() functions. default specified tmap option (tm_options()) scales.var. *.legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options (tm_options()) legend. . *.chart arguments specify additional charts, specified tm_chart_, e.g. tm_chart_histogram() *.free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, *.free argument requires one logical value.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: lines — tm_lines","text":"","code":"tm_shape(rivers) +   tm_lines(lwd = \"strokelwd\",        lwd.scale = tm_scale_asis(values.scale = 0.2, value.neutral = 2),        col = \"scalerank\",        col.scale = tm_scale_categorical(values = \"seaborn.dark\"))   tm_shape(World) +   tm_lines(col = \"continent\",        col.scale = tm_scale_categorical(values = \"seaborn.dark\"),        lty = \"continent\",        lwd = 1.5,        lty.legend = tm_legend_combine(\"col\"))"},{"path":"https://r-tmap.github.io/tmap/reference/tm_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: logo — tm_logo","title":"Map component: logo — tm_logo","text":"Map component adds scale bar. version 4.0, tm_scalebar() used instead tm_scale_bar() (now deprecated), potential confusion tm_scale_*() scaling functions (like tm_scale_continuous()).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: logo — tm_logo","text":"","code":"tm_logo(   file,   height,   margins,   between_margin,   stack,   position,   frame,   frame.lwd,   frame.r,   group.frame,   resize_as_group,   z )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: logo — tm_logo","text":"file either filename url png image. multiple files/urls provided character vector, logos placed near . specify logos small multiples use list character values/vectors. order stack logos vertically, multiple tm_logo elements can stacked. height height logo number text line heights. width scaled based height aspect ratio logo. multiple logos specified vector list, heights can specified accordingly. margins margins between_margin between_margin stack stack position position frame frame frame.lwd frame.lwd frame.r frame.r group.frame group.frame resize_as_group resize_as_group z z","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map component: logo — tm_logo","text":"","code":"data(World)  tm_shape(World) +   tm_polygons(\"HPI\", fill.scale = tm_scale_intervals(values = \"RdYlGn\")) +   tm_logo(c(\"https://www.r-project.org/logo/Rlogo.png\",          system.file(\"img/tmap.png\", package=\"tmap\"))) +   tm_logo(\"http://blog.kulikulifoods.com/wp-content/uploads/2014/10/logo.png\",        height=5, position = c(\"left\", \"top\")) +   tm_format(\"World\") #> [deprecated] `tm_format(\"World\")` is deprecated as of tmap 4.0. Instead, please #> use `tm_layout(inner.margins=c(0, 0.05, 0.025, 0.01), #> legend.position=tm_pos_in(\"left\", \"bottom\"), component.position=c(\"right\", #> \"bottom\"), scale=.8, title.size = 1.3)` #> [cols4all] color palettes: use palettes from the R package cols4all. Run #> `cols4all::c4a_gui()` to explore them. The old palette name \"RdYlGn\" is named #> \"brewer.rd_yl_gn\" #> Multiple palettes called \"rd_yl_gn\" found: \"brewer.rd_yl_gn\", \"matplotlib.rd_yl_gn\". The first one, \"brewer.rd_yl_gn\", is returned."},{"path":"https://r-tmap.github.io/tmap/reference/tm_minimap.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: minimap — tm_minimap","title":"Map component: minimap — tm_minimap","text":"Map component adds minimap view mode","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_minimap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: minimap — tm_minimap","text":"","code":"tm_minimap(server, toggle, stack, position, z, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_minimap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: minimap — tm_minimap","text":"server name provider URL (see tm_tiles). default, shows map basemap, moreover, automatically change user switches basemaps. Note latter happen server specified. toggle minimap button minimise ? default TRUE. stack stack position position z z ... arguments passed addMiniMap.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_mouse_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: mouse coordinates — tm_mouse_coordinates","title":"Map component: mouse coordinates — tm_mouse_coordinates","text":"Map component adds mouse coordinates","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_mouse_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: mouse coordinates — tm_mouse_coordinates","text":"","code":"tm_mouse_coordinates(stack, position, z)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_mouse_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: mouse coordinates — tm_mouse_coordinates","text":"stack stack position position z z","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_options.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap options — tm_options","title":"tmap options — tm_options","text":"tmap options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap options — tm_options","text":"","code":"tm_options(   crs,   facet.max,   facet.flip,   free.scales,   raster.max_cells,   show.messages,   show.warnings,   output.format,   output.size,   output.dpi,   animation.dpi,   value.const,   value.na,   value.null,   value.blank,   values.var,   values.range,   value.neutral,   values.scale,   scales.var,   scale.misc.args,   continuous.nclass_per_legend_break,   continuous.nclasses,   label.format,   label.na,   scale,   asp,   bg.color,   outer.bg.color,   frame,   frame.lwd,   frame.r,   frame.double_line,   outer.margins,   inner.margins,   inner.margins.extra,   meta.margins,   meta.auto_margins,   between_margin,   panel.margin,   component.offset,   component.stack_margin,   grid.mark.height,   xylab.height,   coords.height,   xlab.show,   xlab.text,   xlab.size,   xlab.color,   xlab.rotation,   xlab.space,   xlab.fontface,   xlab.fontfamily,   xlab.side,   ylab.show,   ylab.text,   ylab.size,   ylab.color,   ylab.rotation,   ylab.space,   ylab.fontface,   ylab.fontfamily,   ylab.side,   panel.type,   panel.wrap.pos,   panel.xtab.pos,   unit,   color.sepia_intensity,   color.saturation,   color_vision_deficiency_sim,   text.fontface,   text.fontfamily,   component.position,   component.autoscale,   legend.show,   legend.design,   legend.orientation,   legend.position,   legend.width,   legend.height,   legend.stack,   legend.group.frame,   legend.resize_as_group,   legend.reverse,   legend.na.show,   legend.title.color,   legend.title.size,   legend.title.fontface,   legend.title.fontfamily,   legend.xlab.color,   legend.xlab.size,   legend.xlab.fontface,   legend.xlab.fontfamily,   legend.ylab.color,   legend.ylab.size,   legend.ylab.fontface,   legend.ylab.fontfamily,   legend.text.color,   legend.text.size,   legend.text.fontface,   legend.text.fontfamily,   legend.frame,   legend.frame.lwd,   legend.frame.r,   legend.bg.color,   legend.bg.alpha,   legend.only,   legend.settings.standard.portrait,   legend.settings.standard.landscape,   chart.show,   chart.plot.axis.x,   chart.plot.axis.y,   chart.position,   chart.width,   chart.height,   chart.stack,   chart.group.frame,   chart.resize_as_group,   chart.reverse,   chart.na.show,   chart.title.color,   chart.title.size,   chart.title.fontface,   chart.title.fontfamily,   chart.xlab.color,   chart.xlab.size,   chart.xlab.fontface,   chart.xlab.fontfamily,   chart.ylab.color,   chart.ylab.size,   chart.ylab.fontface,   chart.ylab.fontfamily,   chart.text.color,   chart.text.size,   chart.text.fontface,   chart.text.fontfamily,   chart.frame,   chart.frame.lwd,   chart.frame.r,   chart.bg.color,   chart.bg.alpha,   chart.object.color,   title.show,   title.size,   title.color,   title.fontface,   title.fontfamily,   title.bg.color,   title.bg.alpha,   title.padding,   title.frame,   title.frame.lwd,   title.frame.r,   title.stack,   title.position,   title.width,   title.group.frame,   title.resize_as_group,   credits.show,   credits.size,   credits.color,   credits.fontface,   credits.fontfamily,   credits.bg.color,   credits.bg.alpha,   credits.padding,   credits.frame,   credits.frame.lwd,   credits.frame.r,   credits.stack,   credits.position,   credits.width,   credits.height,   credits.group.frame,   credits.resize_as_group,   compass.north,   compass.type,   compass.text.size,   compass.size,   compass.show.labels,   compass.cardinal.directions,   compass.text.color,   compass.color.dark,   compass.color.light,   compass.lwd,   compass.bg.color,   compass.bg.alpha,   compass.margins,   compass.show,   compass.stack,   compass.position,   compass.frame,   compass.frame.lwd,   compass.frame.r,   compass.group.frame,   compass.resize_as_group,   logo.height,   logo.margins,   logo.between_margin,   logo.show,   logo.stack,   logo.position,   logo.frame,   logo.frame.lwd,   logo.frame.r,   logo.group.frame,   logo.resize_as_group,   scalebar.show,   scalebar.breaks,   scalebar.width,   scalebar.text.size,   scalebar.text.color,   scalebar.color.dark,   scalebar.color.light,   scalebar.lwd,   scalebar.bg.color,   scalebar.bg.alpha,   scalebar.size,   scalebar.margins,   scalebar.stack,   scalebar.position,   scalebar.frame,   scalebar.frame.lwd,   scalebar.frame.r,   scalebar.group.frame,   scalebar.resize_as_group,   grid.show,   grid.labels.pos,   grid.x,   grid.y,   grid.n.x,   grid.n.y,   grid.crs,   grid.col,   grid.lwd,   grid.alpha,   grid.labels.show,   grid.labels.size,   grid.labels.col,   grid.labels.rot,   grid.labels.format,   grid.labels.cardinal,   grid.labels.margin.x,   grid.labels.margin.y,   grid.labels.space.x,   grid.labels.space.y,   grid.labels.inside_frame,   grid.ticks,   grid.lines,   grid.ndiscr,   mouse_coordinates.stack,   mouse_coordinates.position,   mouse_coordinates.show,   minimap.server,   minimap.toggle,   minimap.stack,   minimap.position,   minimap.show,   panel.show,   panel.labels,   panel.label.size,   panel.label.color,   panel.label.fontface,   panel.label.fontfamily,   panel.label.bg.color,   panel.label.frame,   panel.label.frame.lwd,   panel.label.frame.r,   panel.label.height,   panel.label.rot,   bbox,   set_bounds,   set_view,   set_zoom_limits,   qtm.scalebar,   qtm.minimap,   qtm.mouse_coordinates,   earth_boundary,   earth_boundary.color,   earth_boundary.lwd,   earth_datum,   space.color,   check_and_fix,   basemap.show,   basemap.server,   basemap.alpha,   basemap.zoom,   tiles.show,   tiles.server,   tiles.alpha,   tiles.zoom,   attr.color,   title = NULL,   main.title = NULL,   main.title.size = NULL,   main.title.color = NULL,   main.title.fontface = NULL,   main.title.fontfamily = NULL,   main.title.position = NULL,   style,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmap options — tm_options","text":"crs Map crs (see tm_shape()). NA means crs specified tm_shape(). crs used transformation functions defined tm_shape(). facet.max Maximum number facets facet.flip facets flipped (case facet wrap)? can also set via tm_facets_flip() free.scales backward compatibility: value set, used impute free arguments layer functions raster.max_cells Maximum number raster grid cells show.messages Show messages? show.warnings Show warnings? output.format Output format output.size Output size output.dpi Output dpi animation.dpi Output dpi animations value.const Default visual value constants e.g. default fill color tm_shape(World) + tm_polygons(). list required per visual variable value. value.na Default visual values used visualize NA data values. list required per visual variable value. value.null Default visual values used visualize null (--scope) data values. list required per visual variable value. value.blank Default visual values correspond blank. color \"#00000000\" meaning transparent. list required per visual variable value. values.var Default values data variable mapped visual variable, e.g. color palette. list required per visual variable value. values.range Default range values. See values.range tm_scale_categorical(). list required per visual variable value. value.neutral Default values data variable mapped visual variable, e.g. color palette. list required per visual variable value. values.scale Default scales (object sizes) values. See values.range tm_scale_categorical(). list required per visual variable value. scales.var Default scale functions per visual variable type data variable. list required per visual variable per data type. scale.misc.args Default values scale function-specific arguments. list required per scale function optional per visual variable. continuous.nclass_per_legend_break number continuous legend breaks within one 'unit' (label).  dafault value 50. continuous.nclasses number classes continuous scale. odd.  dafault value 101. label.format Format labels (legend.format tmap v3). label.na Default label missing values. scale Overall scale map asp Aspect ratio map. asp set NA (default) aspect ratio adjusted used shapes. set 0 aspect ratio adjusted size device divided number columns rows. bg.color Background color map. outer.bg.color Background color map outside frame. frame frame . frame.lwd line width frame. See graphics::par, option 'lwd'. frame.r r (radius) frame. frame.double_line double line frame. TRUE FALSE. outer.margins margins outer space (outside frame. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins margins inner space (inside frame). vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins.extra extra arguments margins inner space (inside frame). list arguments. meta.margins margins meta. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). meta.auto_margins auto_margins meta. between_margin between_margin . panel.margin margin panel. component.offset offset component. component.stack_margin stack_margin component. grid.mark.height height mark grid. xylab.height height xylab. coords.height height coords. xlab.show visibility xlab. TRUE FALSE. xlab.text text xlab. xlab.size size xlab. xlab.color color xlab. xlab.rotation rotation xlab. xlab.space space xlab. terms number line heights. xlab.fontface font face xlab. See graphics::par, option 'font'. xlab.fontfamily font family xlab. See graphics::par, option 'family'. xlab.side side xlab. ylab.show visibility ylab. TRUE FALSE. ylab.text text ylab. ylab.size size ylab. ylab.color color ylab. ylab.rotation rotation ylab. ylab.space space ylab. terms number line heights. ylab.fontface font face ylab. See graphics::par, option 'font'. ylab.fontfamily font family ylab. See graphics::par, option 'family'. ylab.side side ylab. panel.type type panel. panel.wrap.pos pos wrap panel. panel.xtab.pos pos xtab panel. unit unit . color.sepia_intensity sepia_intensity color. color.saturation saturation color. color_vision_deficiency_sim color_vision_deficiency_sim . text.fontface font face text. See graphics::par, option 'font'. text.fontfamily font family text. See graphics::par, option 'family'. component.position position component. component.autoscale autoscale component. legend.show visibility legend. TRUE FALSE. legend.design design legend. legend.orientation orientation legend. legend.position position legend. legend.width width legend. legend.height height legend. legend.stack stack legend. legend.group.frame frame group legend. legend.resize_as_group resize_as_group legend. legend.reverse reverse legend. legend.na.show visibility na legend. TRUE FALSE. legend.title.color color title legend. legend.title.size size title legend. legend.title.fontface font face title legend. See graphics::par, option 'font'. legend.title.fontfamily font family title legend. See graphics::par, option 'family'. legend.xlab.color color xlab legend. legend.xlab.size size xlab legend. legend.xlab.fontface font face xlab legend. See graphics::par, option 'font'. legend.xlab.fontfamily font family xlab legend. See graphics::par, option 'family'. legend.ylab.color color ylab legend. legend.ylab.size size ylab legend. legend.ylab.fontface font face ylab legend. See graphics::par, option 'font'. legend.ylab.fontfamily font family ylab legend. See graphics::par, option 'family'. legend.text.color color text legend. legend.text.size size text legend. legend.text.fontface font face text legend. See graphics::par, option 'font'. legend.text.fontfamily font family text legend. See graphics::par, option 'family'. legend.frame frame legend. legend.frame.lwd line width frame legend. See graphics::par, option 'lwd'. legend.frame.r r (radius) frame legend. legend.bg.color color bg legend. legend.bg.alpha alpha transparency bg legend. legend.legend. legend.settings.standard.portrait portrait standard settings legend. legend.settings.standard.landscape landscape standard settings legend. chart.show visibility chart. TRUE FALSE. chart.plot.axis.x x axis plot chart. chart.plot.axis.y y axis plot chart. chart.position position chart. chart.width width chart. chart.height height chart. chart.stack stack chart. chart.group.frame frame group chart. chart.resize_as_group resize_as_group chart. chart.reverse reverse chart. chart.na.show visibility na chart. TRUE FALSE. chart.title.color color title chart. chart.title.size size title chart. chart.title.fontface font face title chart. See graphics::par, option 'font'. chart.title.fontfamily font family title chart. See graphics::par, option 'family'. chart.xlab.color color xlab chart. chart.xlab.size size xlab chart. chart.xlab.fontface font face xlab chart. See graphics::par, option 'font'. chart.xlab.fontfamily font family xlab chart. See graphics::par, option 'family'. chart.ylab.color color ylab chart. chart.ylab.size size ylab chart. chart.ylab.fontface font face ylab chart. See graphics::par, option 'font'. chart.ylab.fontfamily font family ylab chart. See graphics::par, option 'family'. chart.text.color color text chart. chart.text.size size text chart. chart.text.fontface font face text chart. See graphics::par, option 'font'. chart.text.fontfamily font family text chart. See graphics::par, option 'family'. chart.frame frame chart. chart.frame.lwd line width frame chart. See graphics::par, option 'lwd'. chart.frame.r r (radius) frame chart. chart.bg.color color bg chart. chart.bg.alpha alpha transparency bg chart. chart.object.color color object chart. title.show visibility title. TRUE FALSE. title.size size title. title.color color title. title.fontface font face title. See graphics::par, option 'font'. title.fontfamily font family title. See graphics::par, option 'family'. title.bg.color color bg title. title.bg.alpha alpha transparency bg title. title.padding padding title. title.frame frame title. title.frame.lwd line width frame title. See graphics::par, option 'lwd'. title.frame.r r (radius) frame title. title.stack stack title. title.position position title. title.width width title. title.group.frame frame group title. title.resize_as_group resize_as_group title. credits.show visibility credits. TRUE FALSE. credits.size size credits. credits.color color credits. credits.fontface font face credits. See graphics::par, option 'font'. credits.fontfamily font family credits. See graphics::par, option 'family'. credits.bg.color color bg credits. credits.bg.alpha alpha transparency bg credits. credits.padding padding credits. credits.frame frame credits. credits.frame.lwd line width frame credits. See graphics::par, option 'lwd'. credits.frame.r r (radius) frame credits. credits.stack stack credits. credits.position position credits. credits.width width credits. credits.height height credits. credits.group.frame frame group credits. credits.resize_as_group resize_as_group credits. compass.north north compass. compass.type type compass. compass.text.size size text compass. compass.size size compass. compass.show.labels labels show compass. compass.cardinal.directions directions cardinal compass. compass.text.color color text compass. compass.color.dark dark color compass. compass.color.light light color compass. compass.lwd line width compass. See graphics::par, option 'lwd'. compass.bg.color color bg compass. compass.bg.alpha alpha transparency bg compass. compass.margins margins compass. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). compass.show visibility compass. TRUE FALSE. compass.stack stack compass. compass.position position compass. compass.frame frame compass. compass.frame.lwd line width frame compass. See graphics::par, option 'lwd'. compass.frame.r r (radius) frame compass. compass.group.frame frame group compass. compass.resize_as_group resize_as_group compass. logo.height height logo. logo.margins margins logo. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). logo.between_margin between_margin logo. logo.show visibility logo. TRUE FALSE. logo.stack stack logo. logo.position position logo. logo.frame frame logo. logo.frame.lwd line width frame logo. See graphics::par, option 'lwd'. logo.frame.r r (radius) frame logo. logo.group.frame frame group logo. logo.resize_as_group resize_as_group logo. scalebar.show visibility scalebar. TRUE FALSE. scalebar.breaks break values scalebar. scalebar.width width scalebar. scalebar.text.size size text scalebar. scalebar.text.color color text scalebar. scalebar.color.dark dark color scalebar. scalebar.color.light light color scalebar. scalebar.lwd line width scalebar. See graphics::par, option 'lwd'. scalebar.bg.color color bg scalebar. scalebar.bg.alpha alpha transparency bg scalebar. scalebar.size size scalebar. scalebar.margins margins scalebar. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). scalebar.stack stack scalebar. scalebar.position position scalebar. scalebar.frame frame scalebar. scalebar.frame.lwd line width frame scalebar. See graphics::par, option 'lwd'. scalebar.frame.r r (radius) frame scalebar. scalebar.group.frame frame group scalebar. scalebar.resize_as_group resize_as_group scalebar. grid.show visibility grid. TRUE FALSE. grid.labels.pos pos labels grid. grid.x x grid. grid.y y grid. grid.n.x x n grid. grid.n.y y n grid. grid.crs coordinate reference system (CRS) grid. grid.col color grid. grid.lwd line width grid. See graphics::par, option 'lwd'. grid.alpha alpha transparency grid. grid.labels.show visibility labels grid. TRUE FALSE. grid.labels.size size labels grid. grid.labels.col color labels grid. grid.labels.rot rot labels grid. grid.labels.format format labels grid. grid.labels.cardinal cardinal labels grid. grid.labels.margin.x x margin labels grid. grid.labels.margin.y y margin labels grid. grid.labels.space.x x space labels grid. grid.labels.space.y y space labels grid. grid.labels.inside_frame inside_frame labels grid. grid.ticks ticks grid. grid.lines lines grid. grid.ndiscr ndiscr grid. mouse_coordinates.stack stack mouse_coordinates. mouse_coordinates.position position mouse_coordinates. mouse_coordinates.show visibility mouse_coordinates. TRUE FALSE. minimap.server server minimap. minimap.toggle toggle minimap. minimap.stack stack minimap. minimap.position position minimap. minimap.show visibility minimap. TRUE FALSE. panel.show visibility panel. TRUE FALSE. panel.labels labels panel. panel.label.size size label panel. panel.label.color color label panel. panel.label.fontface font face label panel. See graphics::par, option 'font'. panel.label.fontfamily font family label panel. See graphics::par, option 'family'. panel.label.bg.color color bg label panel. panel.label.frame frame label panel. panel.label.frame.lwd line width frame label panel. See graphics::par, option 'lwd'. panel.label.frame.r r (radius) frame label panel. panel.label.height height label panel. panel.label.rot rot label panel. bbox bounding box . set_bounds set_bounds . set_view set_view . set_zoom_limits set_zoom_limits . qtm.scalebar scalebar qtm. qtm.minimap minimap qtm. qtm.mouse_coordinates mouse_coordinates qtm. earth_boundary earth_boundary . earth_boundary.color color earth_boundary. earth_boundary.lwd line width earth_boundary. See graphics::par, option 'lwd'. earth_datum earth_datum . space.color color space. check_and_fix check_and_fix . basemap.show visibility basemap. TRUE FALSE. basemap.server server basemap. basemap.alpha alpha transparency basemap. basemap.zoom zoom basemap. tiles.show visibility tiles. TRUE FALSE. tiles.server server tiles. tiles.alpha alpha transparency tiles. tiles.zoom zoom tiles. attr.color color attr. title deprecated See tm_title() main.title deprecated See tm_title() main.title.size, main.title.color, main.title.fontface, main.title.fontfamily, main.title.position deprecated. Use title. options instead. style style see tm_style() ... List tmap options set, option names (characters) returned (see details)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mode options — tm_plot","title":"Plot mode options — tm_plot","text":"Plot mode options. option specific plot mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mode options — tm_plot","text":"","code":"tm_plot(use.gradient)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mode options — tm_plot","text":"use.gradient Use gradient fill using linearGradient()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine plotting order of features — tm_plot_order","title":"Determine plotting order of features — tm_plot_order","text":"Determine plotting order features.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine plotting order of features — tm_plot_order","text":"","code":"tm_plot_order(   aes,   reverse = TRUE,   na.order = c(\"mix\", \"bottom\", \"top\"),   null.order = c(\"bottom\", \"mix\", \"top\"),   null.below.na = TRUE )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_plot_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine plotting order of features — tm_plot_order","text":"aes Visual variable values determine plotting order. Example: bubble map \"size\" aesthetic used. data variable (say population) mapped via continuous scale (tm_scale_continuous()) bubble sizes. bubbles plotted order size. determined arguments. Use \"DATA\" keep order data. Another special value \"AREA\" \"LENGTH\" preserved polygons lines respectively: rather data variable polygon area / line lengths determines plotting order. reverse Logical determines whether visual values plotted reversed order. visual values (specified tmap option \"values.var\") default reversed, plotted starting last value. bubble map example, means large bubbles plotted first, hence bottom. na.order features plotted NA value (least) one aesthetic variable? (order) \"mix\", \"bottom\", \"top\"? bubble map example: fill color missing bubble, bubbles plotted? null.order non-selected (aka null) features plotted? null..na null features plotted NA features?","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: polygons — tm_polygons","title":"Map layer: polygons — tm_polygons","text":"Map layer draws polygons. Supported visual variables : fill (fill color), col (border color), lwd (line width), lty (line type), fill_alpha (fill color alpha transparency) col_alpha (border color alpha transparency). family opt_*() functions can used specify options different tm_*() functions.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: polygons — tm_polygons","text":"","code":"tm_polygons(   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.chart = tm_chart_none(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.chart = tm_chart_none(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.chart = tm_chart_none(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.chart = tm_chart_none(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   linejoin = \"round\",   lineend = \"round\",   plot.order = tm_plot_order(\"lwd\", reverse = TRUE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   popup.vars = NA,   popup.format = list(),   hover = NA,   id = \"\",   options = opt_tm_polygons(),   ... )  tm_fill(...)  tm_borders(col = tm_const(), ...)  opt_tm_polygons(polygons.only = \"ifany\")"},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: polygons — tm_polygons","text":"fill, fill.scale, fill.legend, fill.chart, fill.free Visual variable determines fill color. See details. col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. lwd, lwd.scale, lwd.legend, lwd.chart, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.chart, lty.free Visual variable determines line type. See details. fill_alpha, fill_alpha.scale, fill_alpha.chart, fill_alpha.legend, fill_alpha.free Visual variable determines fill color transparency. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. linejoin, lineend Line join line end. See gpar() details. plot.order Specification order spatial features drawn. See tm_plot_order() details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). popup.vars names data variables shown popups \"view\" mode. Set popup.vars TRUE show variables shape object. Set popup.vars FALSE disable popups. Set popup.vars character vector variable names variables popups. default (NA) depends whether visual variables (e.g.fill) used. , shown. variables shape object shown. popup.format list formatting options popup values. See argument legend.format options. applicable numeric data variables. one list formatting options provided, applied numeric variables popup.vars. Also, (named) list lists can provided. case, list formatting options applied named variable. hover name data variable specifies hover labels (view mode ). Set FALSE disable hover labels. default FALSE, unless id specified. case, set id, id name data variable specifies indices spatial features. used \"view\" mode. options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 polygons.polygon geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: polygons — tm_polygons","text":"visual variable arguments (e.g. col) can specified either data variable name (e.g., spatial vector attribute raster layer object specified tm_shape()), visual value (col, color expected). Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). *.scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_*() functions. default specified tmap option (tm_options()) scales.var. *.legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options (tm_options()) legend. . *.chart arguments specify additional charts, specified tm_chart_, e.g. tm_chart_histogram() *.free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, *.free argument requires one logical value.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_polygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: polygons — tm_polygons","text":"","code":"# load Africa country data data(World) Africa = World[World$continent == \"Africa\", ] Africa_border = sf::st_make_valid(sf::st_union(sf::st_buffer(Africa, 0.001))) # slow and ugly  # without specifications tm_shape(Africa_border) + tm_polygons()  tm_shape(Africa_border) + tm_fill()  tm_shape(Africa_border) + tm_borders()   # specification with visual variable values tm_shape(Africa) +   tm_polygons(fill = \"limegreen\", col = \"purple\", lwd = 2, lty = \"solid\", col_alpha = 0.3) +   tm_text(\"name\", options = opt_tm_text(remove_overlap = TRUE)) + tm_shape(Africa_border) +   tm_borders(\"darkred\", lwd = 3)   # specification with a data variable tm_shape(Africa) +   tm_polygons(fill = \"income_grp\", fill.scale = tm_scale_categorical(values = \"-tol.muted\"))    # continuous color scale with landscape legend tm_shape(Africa) +   tm_polygons(fill = \"inequality\",     fill.scale = tm_scale_continuous(values = \"-scico.roma\"),     fill.legend = tm_legend(       title = \"\", orientation = \"landscape\",       position = tm_pos_out(\"center\", \"bottom\"), frame = FALSE       )) + tm_shape(Africa_border) +   tm_borders(lwd = 2) + tm_title(\"Inequality index\", position = tm_pos_in(\"right\", \"TOP\"), frame = FALSE) + tm_layout(frame = FALSE)   # bivariate scale tm_shape(World) +   tm_polygons(tm_vars(c(\"inequality\", \"well_being\"), multivariate = TRUE)) #> Labels abbreviated by the first letters, e.g.: \"2 to 3\" => \"2\"  tm_shape(World) +   tm_polygons(     )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the position of map components — tm_pos","title":"Set the position of map components — tm_pos","text":"Set position map components, legends, title, compass, scale bar, etc. tm_pos() function position components: tm_pos_out() places components outside map area tm_pos_in() inside map area. position argument map layer component specified one functions. functions tm_pos_auto_out() tm_pos_auto_in() used set components automatically, used via tmap_options(). See Details positioning works.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the position of map components — tm_pos","text":"","code":"tm_pos(cell.h, cell.v, pos.h, pos.v, align.h, align.v, just.h, just.v)  tm_pos_in(pos.h, pos.v, align.h, align.v, just.h, just.v)  tm_pos_out(cell.h, cell.v, pos.h, pos.v, align.h, align.v, just.h, just.v)  tm_pos_auto_out(cell.h, cell.v, pos.h, pos.v, align.h, align.v, just.h, just.v)  tm_pos_auto_in(align.h, align.v, just.h, just.v)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the position of map components — tm_pos","text":"cell.h, cell.v plotting area overlaid 3x3 grid, middle grid cell map area. Components can drawn cell. cell.h specifies horizontal position (column) can take values \"left\", \"center\", \"right\". cell.v specifies vertical position (row) can take values \"top\", \"center\", \"bottom\". See details graphical explanation. pos.h, pos.v position component within cell. main options pos.h \"left\", \"center\", \"right\". cell.v \"top\", \"center\", \"bottom\". options can also provided upper case; case offset (see tmap option component.offset). Also numbers 0 1 can provided, determine position component inside cell ((0,0) left bottom). arguments just.h just.v determine justification point. align.h, align.v alignment component case multiple components stacked. stacked horizontally, align.v determines components smaller height available height (determined outer.margins specified otherwise highest component) justified: \"top\", \"center\", \"bottom\". Similarly, align.h determines components justified horizontally stacked vertically: \"left\", \"center\", \"right\". just.h, just.v justification components. used case pos.h pos.v numbers.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_pos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the position of map components — tm_pos","text":"tm_pos_in() sets position component(s) inside maps area, equivalent center-center cell (case facets, drawn center-center cell). tm_pos_out() sets position component(s) outside map. amount space top bottom rows, left right columns occupy determined tm_layout() arguments meta.margins meta.auto_margins. former sets relative space bottom, left, top, right side. case set NA, space set automatically based 1) maximum relative space specified meta.auto_margins 2) presence size components cell. instance, one landscape oriented legend center-bottom cell, relative space bottom row set height legend (given smaller corresponding value meta.auto_margins), four sides set 0. tm_pos_auto_out() complex: cell.h cell.v arguments set one four corners. mean components drawn corner. corner represents sides map components drawn. default, legends drawn either bottom right-side map default (see tmap_options(\"legend.position\")). row- column-wise legends general legend (using tm_facets_grid()), general legend drawn corner, practice case rare. arguments pos.h pos.v determine components drawn within cell. , \"left\", \"center\", \"right\" pos.h \"top\", \"center\", \"bottom\" pos.v. values can also specified upper-case, influences offset cell borders, determined tmap option component.offset. default, small offset components drawn inside offset drawn outside upper-case. tm_pos_auto_in() automatically determines pos.h pos.v given available space inside map. similar default positioning tmap3. case multiple components draw cell position inside cell, stacked (determined stack argument legend component function). align.h align.v arguments determine components justified . Note legends components may different facet row column. case tm_facets_grid() tm_facets_stack() applied scales set free (.free argument map layer functions). case legends components draw row- column wise, position legends (components) right next maps, legends (components) aligned maps.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: raster — tm_raster","title":"Map layer: raster — tm_raster","text":"Map layer draws rasters. Supported visual variable : col ( color).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: raster — tm_raster","text":"","code":"tm_raster(   col = tm_vars(),   col.scale = tm_scale(value.na = \"#00000000\"),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_raster(),   ... )  opt_tm_raster(interpolate = FALSE)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: raster — tm_raster","text":"col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 interpolate raster image interpolated? Currently applicable view mode (passed grid)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: raster — tm_raster","text":"visual variable arguments (e.g. col) can specified either data variable name (e.g., spatial vector attribute raster layer object specified tm_shape()), visual value (col, color expected). Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). *.scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_*() functions. default specified tmap option (tm_options()) scales.var. *.legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options (tm_options()) legend. . *.chart arguments specify additional charts, specified tm_chart_, e.g. tm_chart_histogram() *.free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, *.free argument requires one logical value.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: raster — tm_raster","text":"","code":"# load land data data(land, World)  tm_shape(land) +   tm_raster() +   tm_facets_hstack() #> [scale] tm_raster:() the data variable assigned to 'col' contains positive and negative values, so midpoint is set to 0. Set 'midpoint = NA' in 'fill.scale = tm_scale_intervals(<HERE>)' to use all visual values (e.g. colors) #> [plot mode] fit legend/component: Some legend items or map compoments do not #> fit well, and are therefore rescaled. #> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.   tm_shape(land) +   tm_raster(\"elevation\", col.scale = tm_scale_continuous(values = terrain.colors(9))) +   tm_shape(World) +   tm_borders()"},{"path":"https://r-tmap.github.io/tmap/reference/tm_rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: rgb images — tm_rgb","title":"Map layer: rgb images — tm_rgb","text":"Map layer rgb image.. used (multivariate) visual variable col, specified 3 4 variables tm_rgb() tm_rgba() respectively. first three correspond red, green, blue channels. optional fourth alpha transparency channel.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: rgb images — tm_rgb","text":"","code":"tm_rgb(   col = tm_vars(n = 3, multivariate = TRUE),   col.scale = tm_scale_rgb(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   options = opt_tm_rgb(),   ... )  tm_rgba(   col = tm_vars(n = 4, multivariate = TRUE),   col.scale = tm_scale_rgba(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   options = opt_tm_rgb() )  opt_tm_rgb(interpolate = FALSE)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: rgb images — tm_rgb","text":"col, col.scale, col.legend, col.chart, col.free Visual variable determines color. col multivariate variable, 3 (tm_rgb) 4 (tm_rgba) numeric data variables. can specified via tm_vars() multivariate = TRUE options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 interpolate raster image interpolated? Currently applicable view mode (passed grid)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_rgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: rgb images — tm_rgb","text":"","code":"require(stars) #> Loading required package: stars #> Loading required package: abind file = system.file(\"tif/L7_ETMs.tif\", package = \"stars\")  L7 = stars::read_stars(file)  tm_shape(L7) +   tm_rgb()   if (FALSE) { # \\dontrun{ # the previous example was a shortcut of this call tm_shape(L7) +   tm_rgb(col = tm_vars(\"band\", dimvalues = 1:3))  # alternative format: using a stars dimension instead of attributes L7_alt = split(L7, \"band\") tm_shape(L7_alt) +   tm_rgb()  # with attribute names tm_shape(L7_alt) +   tm_rgb(col = tm_vars(c(\"X1\", \"X2\", \"X3\"), multivariate = TRUE))  # with attribute indices tm_shape(L7_alt) +   tm_rgb(col = tm_vars(1:3, multivariate = TRUE))  if (requireNamespace(\"terra\")) {   L7_terra = terra::rast(file)      tm_shape(L7_terra) +     tm_rgb()    # with layer names   tm_shape(L7_terra) +     tm_rgb(tm_vars(names(L7_terra)[1:3], multivariate = TRUE))    # with layer indices   tm_shape(L7_alt) +     tm_rgb(col = tm_vars(1:3, multivariate = TRUE))    } } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: automatic scale — tm_scale","title":"Scales: automatic scale — tm_scale","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale() scale set automatically given data type (factor, numeric, integer) visual variable. tmap option scales.var contains information scale applied .","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: automatic scale — tm_scale","text":"","code":"tm_scale(...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: automatic scale — tm_scale","text":"... arguments passed applied scale function tm_scale_*()","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_asis.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: as is — tm_scale_asis","title":"Scales: as is — tm_scale_asis","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_asis() used take data values use visual variable.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_asis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: as is — tm_scale_asis","text":"","code":"tm_scale_asis(values.scale = NA, value.neutral = NA, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_asis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: as is — tm_scale_asis","text":"values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. ... Arguments caught (used) automatic function tm_scale()","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: scale bar — tm_scale_bar","title":"Map component: scale bar — tm_scale_bar","text":"function renamed tm_scalebar() tmap v4.0","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: scale bar — tm_scale_bar","text":"","code":"tm_scale_bar(...)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: scale bar — tm_scale_bar","text":"... Arguments passed tm_scalebar breaks breaks width width text.size text.size text.color text.color color.dark color.dark color.light color.light lwd lwd position position bg.color bg.color bg.alpha bg.alpha size size stack stack frame frame frame.lwd frame.lwd frame.r frame.r margins margins z z","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: bivariate scale — tm_scale_bivariate","title":"Scales: bivariate scale — tm_scale_bivariate","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_bivariate() used bivariate.scales.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: bivariate scale — tm_scale_bivariate","text":"","code":"tm_scale_bivariate(   scale1 = tm_scale(),   scale2 = tm_scale(),   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = 1,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: bivariate scale — tm_scale_bivariate","text":"scale1, scale2 two tm_scale objects. Currently, tm_scale_*() functions supported except tm_scale_continous(). values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols()) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, grey scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark grey light grey used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle grey (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: categorical and ordinal scale — tm_scale_ordinal","title":"Scales: categorical and ordinal scale — tm_scale_ordinal","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). functions tm_scale_categorical() tm_scale_ordinal() used categorical data. difference functions former assumes unordered categories whereas latter assumes ordered categories. colors (visual variable fill col), different default color palettes used (see tmap option values.var).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: categorical and ordinal scale — tm_scale_ordinal","text":"","code":"tm_scale_ordinal(   n.max = 30,   values = NA,   values.repeat = FALSE,   values.range = 1,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   levels = NULL,   levels.drop = FALSE,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list() )  tm_scale_categorical(   n.max = 30,   values = NA,   values.repeat = TRUE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   levels = NULL,   levels.drop = FALSE,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list() )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: categorical and ordinal scale — tm_scale_ordinal","text":"n.max Maximum number categories (factor levels). case , grouped n.max groups. values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols()) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle gray (\"gray50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. levels Levels show. values treated missing. levels.drop unused levels dropped (therefore assigned visual value shown legend)? labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3)","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: continuous scale — tm_scale_continuous","title":"Scales: continuous scale — tm_scale_continuous","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_continuous() used continuous data. functions tm_scale_continuous_<x>() use transformation functions x.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: continuous scale — tm_scale_continuous","text":"","code":"tm_scale_continuous(   n = NULL,   limits = NULL,   outliers.trunc = NULL,   ticks = NULL,   trans = NULL,   midpoint = NULL,   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list(),   trans.args = list() )  tm_scale_continuous_log(..., base = exp(1))  tm_scale_continuous_log2(...)  tm_scale_continuous_log10(...)  tm_scale_continuous_log1p(...)  tm_scale_continuous_sqrt(...)  tm_scale_continuous_pseudo_log(..., base = exp(1), sigma = 1)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: continuous scale — tm_scale_continuous","text":"n Preferred number tick labels. used ticks specified limits Limits data values mapped continuous scale outliers.trunc outliers truncated? outlier data value respectively lower upper limit. logical vector two values expected. first second value determines whether values lower lower limit respectively higher upper limit truncated lower respectively upper limit. FALSE (default), considered missing values. ticks Tick values. specified, determined automatically n trans Transformation function. One \"identity\" (default), \"log\", \"log1p\". Note: base log scale irrelevant, since log transformed values normalized mapping visual values. midpoint data value interpreted midpoint. default set 0 negative positive values present. Useful values diverging colors. case, two sides color palette assigned negative respectively positive values. values positive values negative, midpoint set NA, means value corresponds middle color class (see style) mapped middle color. specified sequential color palettes (e.g. \"Blues\"), color palette treated diverging color palette. values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols()) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values, especially useful color palettes. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle gray (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3) trans.args list additional argument transformation (generic transformation arguments) ... passed tm_scale_continuous() base base logarithm sigma Scaling factor linear part pseudo-log transformation.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales: continuous scale — tm_scale_continuous","text":"","code":"tm_shape(World) +   tm_polygons(     fill = \"HPI\",     fill.scale = tm_scale_continuous(values = \"scico.roma\", midpoint = 30))   tm_shape(metro) +   tm_bubbles(     size = \"pop1950\",      size.scale = tm_scale_continuous(       values.scale = 1),     size.legend = tm_legend(\"Population in 1950\", frame = FALSE))   tm_shape(metro) +   tm_bubbles(     size = \"pop1950\",      size.scale = tm_scale_continuous(       values.scale = 2,        limits = c(0, 12e6),        ticks = c(1e5, 3e5, 8e5, 4e6, 1e7),        labels = c(\"0 - 200,000\", \"200,000 - 500,000\", \"500,000 - 1,000,000\",          \"1,000,000 - 10,000,000\", \"10,000,000 or more\"),        outliers.trunc = c(TRUE, TRUE)),     size.legend = tm_legend(\"Population in 1950\", frame = FALSE))  # Note that for this type of legend, we recommend tm_scale_intervals()"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: discrete scale — tm_scale_discrete","title":"Scales: discrete scale — tm_scale_discrete","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_discrete() used discrete numerical data, integers.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: discrete scale — tm_scale_discrete","text":"","code":"tm_scale_discrete(   ticks = NA,   midpoint = NULL,   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list() )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: discrete scale — tm_scale_discrete","text":"ticks Discrete values. specified, determined automatically: unique values put discrete scale. midpoint data value interpreted midpoint. default set 0 negative positive values present. Useful values diverging colors. case, two sides color palette assigned negative respectively positive values. values positive values negative, midpoint set NA, means value corresponds middle color class (see style) mapped middle color. specified sequential color palettes (e.g. \"Blues\"), color palette treated diverging color palette. values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle grey (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3)","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: interval scale — tm_scale_intervals","title":"Scales: interval scale — tm_scale_intervals","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_intervals() used numerical data.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: interval scale — tm_scale_intervals","text":"","code":"tm_scale_intervals(   n = 5,   style = ifelse(is.null(breaks), \"pretty\", \"fixed\"),   style.args = list(),   breaks = NULL,   interval.closure = \"left\",   midpoint = NULL,   as.count = NA,   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list() )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: interval scale — tm_scale_intervals","text":"n Number intervals. styles (see argument style ) preferred number rather exact number. style Method create intervals. Options \"cat\", \"fixed\", \"sd\", \"equal\", \"pretty\", \"quantile\", \"kmeans\", \"hclust\", \"bclust\", \"fisher\", \"jenks\", \"dpih\", \"headtails\", \"log10_pretty\". See details classInt::classIntervals() (extra arguments can passed via style.args). style.args List extra arguments passed classInt::classIntervals(). breaks Interval breaks (used required style==\"fixed\") interval.closure value determines whether intervals closed: \"left\" \"right\". .count = TRUE, inverval.closure always set \"left\". midpoint data value interpreted midpoint. default set 0 negative positive values present. Useful values diverging colors. case, two sides color palette assigned negative respectively positive values. values positive values negative, midpoint set NA, means value corresponds middle color class (see style) mapped middle color. specified sequential color palettes (e.g. \"Blues\"), color palette treated diverging color palette. .count data variable processed count variable? instance, style = \"pretty\", n = 2, value range variable 0 10, column classes .count = TRUE 0; 1 5; 6 10 (note 0 regarded category) whereas .count = FALSE 0 5; 5 10. applicable style \"pretty\", \"fixed\", \"log10_pretty\". default, TRUE style one , variable integer. values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"gray25\" \"gray75\"), 0, 0.5 means colors used black middle grey (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3)","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: rank scale — tm_scale_rank","title":"Scales: rank scale — tm_scale_rank","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_rank() used rank numeric data.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: rank scale — tm_scale_rank","text":"","code":"tm_scale_rank(   n = NULL,   ticks = NULL,   values = NA,   values.repeat = FALSE,   values.range = NA,   values.scale = NA,   value.na = NA,   value.null = NA,   value.neutral = NA,   labels = NULL,   label.na = NA,   label.null = NA,   label.format = list(),   unit = \"rank\" )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: rank scale — tm_scale_rank","text":"n Preferred number tick labels. used ticks specified ticks Tick values. specified, determined automatically n values (generic scale argument) visual values. colors (e.g. fill col tm_polygons()) palette name cols4all package (see cols4all::c4a()) vector colors, size (e.g. size tm_symbols()) set sizes (two values specified interpret range), symbol shapes (e.g. shape tm_symbols()) set symbols, etc. tmap option values.var contains default values per visual variable cases also per data type. values.repeat (generic scale argument) values repeated case categories? values.range (generic scale argument) Range values, especially useful color palettes. Vector two numbers (0 1) first determines minimum second maximum. Full range, means values used, encoded c(0, 1). instance, gray scale used color (black white), c(0,1) means colors used, 0.25, 0.75 means colors dark gray light gray used (precisely \"grey25\" \"grey75\"), 0, 0.5 means colors used black middle gray (\"grey50\"). one number specified, interpreted second number (first set 0). Default values can set via tmap option values.range. values.scale (generic scale argument) Scaling values. useful size-related visual variables, size tm_symbols() lwd tm_lines(). value.na (generic scale argument) Value used missing values. See tmap option \"value.na\" defaults per visual variable. value.null (generic scale argument) Value used NULL values. See tmap option \"value.null\" defaults per visual variable. Null data values occur --scope features shown (e.g. map Europe showing data variable per country, null values applied countries outside Europe). value.neutral (generic scale argument) Value can considered neutral. used legends visual variables map layer. E.g. fill size used tm_symbols() (using filled circles), size legend items filled value.neutral color fill.scale scale, fill legend items bubbles size value.neutral size.scale scale. labels (generic scale argument) Labels label.na (generic scale argument) Label missing values label.null (generic scale argument) Label null (--scope) values label.format (generic scale argument) Label formatting (similar legend.format tmap3) unit unit unit name values. default \"rank\".","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales: RGB — tm_scale_rgb","title":"Scales: RGB — tm_scale_rgb","text":"Scales tmap configured family functions prefix tm_scale. function used input .scale arguments layer functions (e.g. fill.scale tm_polygons()). function tm_scale_rgb() used transform r, g, b band variables colors. function adopted (works similar ) stars::st_rgb()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales: RGB — tm_scale_rgb","text":"","code":"tm_scale_rgb(   value.na = NA,   stretch = FALSE,   probs = c(0, 1),   maxColorValue = 255L )  tm_scale_rgba(   value.na = NA,   stretch = FALSE,   probs = c(0, 1),   maxColorValue = 255 )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales: RGB — tm_scale_rgb","text":"value.na value missing values stretch (r, g, b) band stretched? Possible values: \"percent\" (TRUE)  \"histogram\". first case, values stretched probs[1]...probs[2]. second case, histogram equalization performed probs probability (quantile) values stretch = \"percent\" maxColorValue maximum value","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tm_scale_rgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales: RGB — tm_scale_rgb","text":"","code":"require(stars) file = system.file(\"tif/L7_ETMs.tif\", package = \"stars\")  L7 = stars::read_stars(file)  tm_shape(L7) +   tm_rgb(col.scale = tm_scale_rgb(probs = c(0, .99), stretch = TRUE))   tm_shape(L7) +   tm_rgb(col.scale = tm_scale_rgb(stretch = \"histogram\"))"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scalebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: scale bar — tm_scalebar","title":"Map component: scale bar — tm_scalebar","text":"Map component adds scale bar. version 4.0, tm_scalebar() used instead tm_scale_bar() (now deprecated), potential confusion tm_scale_*() scaling functions (like tm_scale_continuous()).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_scalebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: scale bar — tm_scalebar","text":"","code":"tm_scalebar(   breaks,   width,   text.size,   text.color,   color.dark,   color.light,   lwd,   position,   bg.color,   bg.alpha,   size = \"deprecated\",   stack,   frame,   frame.lwd,   frame.r,   margins,   z )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_scalebar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: scale bar — tm_scalebar","text":"breaks breaks width width text.size text.size text.color text.color color.dark color.dark color.light color.light lwd lwd position position bg.color bg.color bg.alpha bg.alpha size size stack stack frame frame frame.lwd frame.lwd frame.r frame.r margins margins z z","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a numeric sequence — tm_seq","title":"Specify a numeric sequence — tm_seq","text":"Specify numeric sequence, numeric scales like tm_scale_continuous(). function needed non-linear relationship numeric data values visual variables. E.g. make relationship area bubbles linear, square root input variables used calculate radius bubbles.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a numeric sequence — tm_seq","text":"","code":"tm_seq(   from = 0,   to = 1,   power = c(\"lin\", \"sqrt\", \"sqrt_perceptual\", \"quadratic\") )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a numeric sequence — tm_seq","text":", numeric range, default 0 1 respectively power power component, one \"lin\", \"sqrt\", \"sqrt_perceptual\", \"quadratic\", correspond 1, 0.5, 0.5716, 2 respectively. See details.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify a numeric sequence — tm_seq","text":"perceived area larger symbols often underestimated. Flannery (1971) experimentally derived method compensate symbols. compensation obtained using power exponent 0.5716 instead 0.5, setting power \"sqrt_perceptual\"","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: simple features — tm_sf","title":"Map layer: simple features — tm_sf","text":"Map layer draws simple features . Supported visual variables : fill (fill color), col (border color), size point size, shape symbol shape, lwd (line width), lty (line type), fill_alpha (fill color alpha transparency) col_alpha (border color alpha transparency). visual variable arguments (e.g. col) can specified either data variable name (object specified tm_shape()), visual value (col, color expected). Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets().","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: simple features — tm_sf","text":"","code":"tm_sf(   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.free = NA,   shape = tm_const(),   shape.scale = tm_scale(),   shape.legend = tm_legend(),   shape.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.free = NA,   linejoin = \"round\",   lineend = \"round\",   plot.order.list = list(polygons = tm_plot_order(\"AREA\"), lines =     tm_plot_order(\"LENGTH\"), points = tm_plot_order(\"size\")),   options = opt_tm_sf(),   zindex = NA,   group = NA,   group.control = \"check\",   ... )  opt_tm_sf(   polygons.only = \"yes\",   lines.only = \"yes\",   points_only = \"yes\",   point_per = \"feature\",   points.icon.scale = 3,   points.just = NA,   points.grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: simple features — tm_sf","text":"fill, fill.scale, fill.legend, fill.free Visual variable determines fill color. See details. col, col.scale, col.legend, col.free Visual variable determines color. See details. size, size.scale, size.legend, size.free Visual variable determines size. See details. shape, shape.scale, shape.legend, shape.free Visual variable determines shape. See details. lwd, lwd.scale, lwd.legend, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.free Visual variable determines line type. See details. fill_alpha, fill_alpha.scale, fill_alpha.legend, fill_alpha.free Visual variable determines fill color transparency. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.free Visual variable determines color transparency. See details. linejoin, lineend line join line end. See gpar() details. plot.order.list Specification order spatial features drawn. consists list three elementary geometry types: polygons, lines , points. types, drawn order, tm_plot_order() required. options options passed corresponding opt_<layer_function> function zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). ... passed tm_polygons(), tm_lines(), tm_dots() polygons.polygon geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified. lines.line geometries shape object (defined tm_shape()) plotted, also geometry types (like polygons)? default \"ifany\", means TRUE case geometry collection specified. points_only point geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified. point_per specification spatial points mapped geometry multi line multi polygon. One \"feature\", \"segment\" \"largest\". first generates spatial point every feature, second every segment (.e. subfeature), third largest segment (subfeature). Note last two options can significant slower. points.icon.scale scaling number determines large icons (grobs) plot mode comparison proportional symbols (bubbles). view mode, use argument grob.dim points.just justification points relative point coordinates. Either one following values: \"left\" , \"right\", \"center\", \"bottom\", \"top\", vector two values first value specifies horizontal second value vertical justification. Besides mentioned values, also numeric values 0 1 can used. 0 means left justification first value bottom justification second value. Note view mode, one value used. points.grob.dim vector four values determine grob objects (see details) shown view mode. first second value width height displayed icon. third fourth value width height rendered png image used icon. Generally, third fourth value large enough render ggplot2 graphic successfully. needed view mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: simple features — tm_sf","text":".scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_() functions. default scale used specified tmap option scales.var. .legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options legend.. .free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, .free argument requires one logical value.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: simple features — tm_sf","text":"","code":"data(World)  World$geometry[World$continent == \"Africa\"] <-    sf::st_centroid(World$geometry[World$continent == \"Africa\"]) World$geometry[World$continent == \"South America\"] <-    sf::st_cast(World$geometry[World$continent == \"South America\"],      \"MULTILINESTRING\", group_or_split = FALSE)  tm_shape(World, crs = \"+proj=robin\") +    tm_sf()"},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Shape (spatial object) specification — tm_shape","title":"Shape (spatial object) specification — tm_shape","text":"Specify shape, spatial object one spatial object class packages: sf, stars, terra.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shape (spatial object) specification — tm_shape","text":"","code":"tm_shape(   shp,   bbox = NULL,   crs = NULL,   is.main = NA,   name = NULL,   unit = NULL,   filter = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shape (spatial object) specification — tm_shape","text":"shp Spatial object bbox Bounding box map (used shp main shape (see .main) crs CRS shp reprojected (used .main = TRUE) .main shp main shape, determines crs bounding box map? default, TRUE first tm_shape call name Name shape unit Unit coordinates filter Filter features ... passed bb (e.g. ext can used enlarge shrink bounding box)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shape (spatial object) specification — tm_shape","text":"","code":"tm_shape(World, crs = \"+proj=ortho +lat_0=-10 +lon_0=-30\") +   tm_polygons()   tm_shape(World, crs = \"+proj=robin\", filter = World$continent==\"Africa\") +   tm_polygons()"},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: symbols — tm_symbols","title":"Map layer: symbols — tm_symbols","text":"Map layer draws symbols Supported visual variables : fill (fill color), col (border color), size symbol size, shape symbol shape, lwd (line width), lty (line type), fill_alpha (fill color alpha transparency) col_alpha (border color alpha transparency).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: symbols — tm_symbols","text":"","code":"tm_symbols(   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.chart = tm_chart_none(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   shape = tm_const(),   shape.scale = tm_scale(),   shape.legend = tm_legend(),   shape.chart = tm_chart_none(),   shape.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.chart = tm_chart_none(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.chart = tm_chart_none(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.chart = tm_chart_none(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   plot.order = tm_plot_order(\"size\"),   zindex = NA,   group = NA,   group.control = \"check\",   popup.vars = NA,   popup.format = list(),   hover = NA,   id = \"\",   options = opt_tm_symbols(),   ... )  tm_dots(   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.free = NA,   plot.order = tm_plot_order(\"DATA\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_dots(),   ... )  tm_bubbles(   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.free = NA,   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.free = NA,   plot.order = tm_plot_order(\"size\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_bubbles(),   ... )  tm_squares(   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.free = NA,   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.free = NA,   plot.order = tm_plot_order(\"size\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_squares(),   ... )  tm_markers(   text = tm_const(),   text.scale = tm_scale(),   text.legend = tm_legend(),   text.chart = tm_chart_none(),   text.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   fontface = tm_const(),   fontface.scale = tm_scale(),   fontface.legend = tm_legend(),   fontface.chart = tm_chart_none(),   fontface.free = NA,   fontfamily = \"\",   bgcol = tm_const(),   bgcol.scale = tm_scale(),   bgcol.legend = tm_legend(),   bgcol.chart = tm_chart_none(),   bgcol.free = NA,   bgcol_alpha = tm_const(),   bgcol_alpha.scale = tm_scale(),   bgcol_alpha.legend = tm_legend(),   bgcol_alpha.chart = tm_chart_none(),   bgcol_alpha.free = NA,   xmod = 0,   xmod.scale = tm_scale(),   xmod.legend = tm_legend_hide(),   xmod.chart = tm_chart_none(),   xmod.free = NA,   ymod = 0,   ymod.scale = tm_scale(),   ymod.legend = tm_legend_hide(),   ymod.chart = tm_chart_none(),   ymod.free = NA,   angle = 0,   angle.scale = tm_scale(),   angle.legend = tm_legend_hide(),   angle.chart = tm_chart_none(),   angle.free = NA,   plot.order = tm_plot_order(\"AREA\", reverse = FALSE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_markers(),   ... )  opt_tm_markers(   markers_on_top_of_text = FALSE,   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   shadow = FALSE,   shadow.offset.x = 0.1,   shadow.offset.y = 0.1,   just = \"center\",   along_lines = TRUE,   bg.padding = 0.4,   clustering = TRUE,   point.label = TRUE,   point.label.gap = 0.4,   point.label.method = \"SANN\",   remove_overlap = FALSE,   dots.just = NA,   dots.icon.scale = 3,   dots.grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )  opt_tm_symbols(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   icon.scale = 3,   just = NA,   grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )  opt_tm_dots(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   icon.scale = 3,   just = NA,   grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )  opt_tm_bubbles(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   icon.scale = 3,   just = NA,   grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )  opt_tm_squares(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   icon.scale = 3,   just = NA,   grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: symbols — tm_symbols","text":"size, size.scale, size.legend, size.chart, size.free Visual variable determines size. See details. fill, fill.scale, fill.legend, fill.chart, fill.free Visual variable determines fill color. See details. col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. shape, shape.scale, shape.legend, shape.chart, shape.free Visual variable determines shape. See details. lwd, lwd.scale, lwd.legend, lwd.chart, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.chart, lty.free Visual variable determines line type. See details. fill_alpha, fill_alpha.scale, fill_alpha.legend, fill_alpha.chart, fill_alpha.free Visual variable determines fill color transparency. See details. fill color alpha transparency See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. plot.order Specification order spatial features drawn. See tm_plot_order() details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). popup.vars names data variables shown popups \"view\" mode. Set popup.vars TRUE show variables shape object. Set popup.vars FALSE disable popups. Set popup.vars character vector variable names variables popups. default (NA) depends whether visual variables (e.g.fill) used. , shown. variables shape object shown. popup.format list formatting options popup values. See argument legend.format options. applicable numeric data variables. one list formatting options provided, applied numeric variables popup.vars. Also, (named) list lists can provided. case, list formatting options applied named variable. hover name data variable specifies hover labels (view mode ). Set FALSE disable hover labels. default FALSE, unless id specified. case, set id, id name data variable specifies indices spatial features. used \"view\" mode. options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 text, text.scale, text.legend, text.chart, text.free Visual variable determines text. See details. fontface, fontface.scale, fontface.legend, fontface.chart, fontface.free Visual variable determines font face. See details. fontfamily font family. See gpar() details. bgcol, bgcol.scale, bgcol.legend, bgcol.chart, bgcol.free Visual variable determines background color. See Details. bgcol_alpha, bgcol_alpha.scale, bgcol_alpha.legend, bgcol_alpha.chart, bgcol_alpha.free Visual variable determines background color transparency. See Details. xmod, xmod.scale, xmod.legend, xmod.chart, xmod.free Transformation variable determines x offset. See details. ymod, ymod.scale, ymod.legend, ymod.chart, ymod.free Transformation variable determines y offset. See details. text. See details. angle, angle.scale, angle.legend, angle.chart, angle.free Rotation angle markers_on_top_of_text markers plot top text (default FALSE) points_only point geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified. point_per specification spatial points mapped geometry multi line multi polygon. One \"feature\", \"segment\" \"largest\". first generates spatial point every feature, second every segment (.e. subfeature), third largest segment (subfeature). Note last two options can significant slower. on_surface case polygons, centroids computed. points surface? TRUE, slower default FALSE, centroids outside surface replaced points computed sf::st_point_on_surface(). shadow Shadow behind text. Logical color. shadow.offset.x, shadow.offset.y Shadow offset line heights just justification text relative point coordinates. Either one following values: \"left\" , \"right\", \"center\", \"bottom\", \"top\", vector two values first value specifies horizontal second value vertical justification. Besides mentioned values, also numeric values 0 1 can used. 0 means left justification first value bottom justification second value. Note view mode, one value used. along_lines logical determines whether labels rotated along spatial lines. applicable spatial lines shape used. bg.padding padding background terms line heights. clustering value determines whether text labels clustered \"view\" mode. One : TRUE, FALSE, output markerClusterOptions. point.label logical determines whether labels placed automatically. default FALSE tm_text, TRUE tm_labels number labels less 500 (otherwise slow). point.label.gap numeric determines gap point label point.label.method optimization method, either \"SANN\" simulated annealing (default) \"GA\" genetic algorithm. remove_overlap logical determines whether overlapping labels removed dots.just justification text relative point coordinates. Either one following values: \"left\" , \"right\", \"center\", \"bottom\", \"top\", vector two values first value specifies horizontal second value vertical justification. Besides mentioned values, also numeric values 0 1 can used. 0 means left justification first value bottom justification second value. Note view mode, one value used. dots.icon.scale scaling number determines large icons (grobs) plot mode comparison proportional symbols (bubbles). view mode, size determined icon specification (see tmap_icons) , grobs specified grob.width grob.height dots.grob.dim vector four values determine grob objects (see details) shown view mode. first second value width height displayed icon. third fourth value width height rendered png image used icon. Generally, third fourth value large enough render ggplot2 graphic successfully. needed view mode. icon.scale scaling number determines large icons (grobs) plot mode comparison proportional symbols (bubbles). view mode, use argument grob.dim grob.dim vector four values determine grob objects (see details) shown view mode. first second value width height displayed icon. third fourth value width height rendered png image used icon. Generally, third fourth value large enough render ggplot2 graphic successfully. needed view mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: symbols — tm_symbols","text":"visual variable arguments (e.g. col) can specified either data variable name (e.g., spatial vector attribute raster layer object specified tm_shape()), visual value (col, color expected). Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). *.scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_*() functions. default specified tmap option (tm_options()) scales.var. *.legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options (tm_options()) legend. . *.chart arguments specify additional charts, specified tm_chart_, e.g. tm_chart_histogram() *.free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, *.free argument requires one logical value. symbol shape specification one following three options. numeric value specifies plotting character symbol. See parameter pch points last example create plot options. Note supported \"view\" mode. grob object, can ggplot2 plot object created ggplotGrob. specify multiple shapes, list grob objects required. See example proportional symbol map ggplot2 plots. icon specification, can created tmap_icons. specify multiple shapes (needed shapes argument), vector list shape specification required. shape specification options can also mixed. shapes argument, possible use named vector list, names correspond value variable specified shape argument. small multiples, list shape specification(s) provided.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_symbols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: symbols — tm_symbols","text":"","code":"metroAfrica = sf::st_intersection(metro, World[World$continent == \"Africa\", ]) #> Warning: attribute variables are assumed to be spatially constant throughout all geometries Africa = World[World$continent == \"Africa\", ]  # to do: update land library(sf) st_crs(land) = 4326  tm_shape(land) +   tm_raster(\"cover_cls\",         col.scale = tm_scale(           values = cols4all::c4a(\"brewer.pastel1\")[c(3,7,7,2,6,1,2,2)]         ),         col.legend = tm_legend_hide()) +   tm_shape(rivers) +   tm_lines(lwd = \"strokelwd\", lwd.scale = tm_scale_asis(values.scale = .3),        col = cols4all::c4a(\"brewer.pastel1\")[2]) +   tm_shape(Africa, is.main = TRUE) +   tm_borders() +   tm_shape(metroAfrica) +   tm_symbols(fill = \"red\", shape = \"pop2020\", size = \"pop2020\",          size.scale = tm_scale_intervals(               breaks = c(1, 2, 5, 10, 15, 20, 25) * 1e6,               values.range = c(0.2,2)            ),          size.legend = tm_legend(\"Population in 2020\"),          shape.scale = tm_scale_intervals(               breaks = c(1, 2, 5, 10, 15, 20, 25) * 1e6,               values = c(21, 23, 22, 21, 23, 22)            ),          shape.legend = tm_legend_combine(\"size\")) +   tm_labels(\"name\", options = opt_tm_labels(remove_overlap = FALSE))   ## to do: replace this example:  if (FALSE) { # \\dontrun{   if (require(rnaturalearth)) {      airports <- ne_download(scale=10, type=\"airports\", returnclass = \"sf\")     airplane <- tmap_icons(system.file(\"img/airplane.png\", package = \"tmap\"))        current.mode <- tmap_mode(\"view\")      tm_shape(NLD_prov, crs = 4326) +       tm_polygons() +     tm_shape(airports) +       tm_symbols(shape = airplane,              size = \"natlscale\",              size.legend = tm_legend_hide(),              id = \"name\"              ) +       tm_text(text = \"name\")      tmap_mode(current.mode)   } } # }  ######################## ## plot symbol shapes ########################  # create grid of 25 points in the Atlantic atlantic_grid = cbind(expand.grid(x = -51:-47, y = 20:24), id = seq_len(25)) x = sf::st_as_sf(atlantic_grid, coords = c(\"x\", \"y\"), crs = 4326)  tm_shape(x, bbox = tmaptools::bb(x, ext = 1.2)) +   tm_symbols(shape = \"id\",          size = 2,          lwd = 2,          fill = \"orange\",          col = \"black\",          shape.scale = tm_scale_asis()) +   tm_text(\"id\", ymod = -2)   # also supported in view mode :-)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: text — tm_text","title":"Map layer: text — tm_text","text":"Map layer draws symbols Supported visual variables : text (text ) col (color), size (font size), fontface (font face).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: text — tm_text","text":"","code":"tm_text(   text = tm_const(),   text.scale = tm_scale(),   text.legend = tm_legend(),   text.chart = tm_chart_none(),   text.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   fontface = tm_const(),   fontface.scale = tm_scale(),   fontface.legend = tm_legend(),   fontface.chart = tm_chart_none(),   fontface.free = NA,   fontfamily = \"\",   bgcol = tm_const(),   bgcol.scale = tm_scale(),   bgcol.legend = tm_legend(),   bgcol.chart = tm_chart_none(),   bgcol.free = NA,   bgcol_alpha = tm_const(),   bgcol_alpha.scale = tm_scale(),   bgcol_alpha.legend = tm_legend(),   bgcol_alpha.chart = tm_chart_none(),   bgcol_alpha.free = NA,   xmod = 0,   xmod.scale = tm_scale(),   xmod.legend = tm_legend_hide(),   xmod.chart = tm_chart_none(),   xmod.free = NA,   ymod = 0,   ymod.scale = tm_scale(),   ymod.legend = tm_legend_hide(),   ymod.chart = tm_chart_none(),   ymod.free = NA,   angle = 0,   angle.scale = tm_scale(),   angle.legend = tm_legend_hide(),   angle.chart = tm_chart_none(),   angle.free = NA,   plot.order = tm_plot_order(\"size\", reverse = FALSE),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_text(),   ... )  tm_labels(   text = tm_const(),   text.scale = tm_scale(),   text.legend = tm_legend(),   text.chart = tm_chart_none(),   text.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   fontface = tm_const(),   fontface.scale = tm_scale(),   fontface.legend = tm_legend(),   fontface.chart = tm_chart_none(),   fontface.free = NA,   fontfamily = \"\",   bgcol = tm_const(),   bgcol.scale = tm_scale(),   bgcol.legend = tm_legend(),   bgcol.chart = tm_chart_none(),   bgcol.free = NA,   bgcol_alpha = tm_const(),   bgcol_alpha.scale = tm_scale(),   bgcol_alpha.legend = tm_legend(),   bgcol_alpha.chart = tm_chart_none(),   bgcol_alpha.free = NA,   xmod = 0,   xmod.scale = tm_scale(),   xmod.legend = tm_legend_hide(),   xmod.chart = tm_chart_none(),   xmod.free = NA,   ymod = 0,   ymod.scale = tm_scale(),   ymod.legend = tm_legend_hide(),   ymod.chart = tm_chart_none(),   ymod.free = NA,   angle = 0,   angle.scale = tm_scale(),   angle.legend = tm_legend_hide(),   angle.chart = tm_chart_none(),   angle.free = NA,   plot.order = tm_plot_order(\"AREA\", reverse = FALSE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_labels(),   ... )  tm_labels_highlighted(   text = tm_const(),   text.scale = tm_scale(),   text.legend = tm_legend(),   text.chart = tm_chart_none(),   text.free = NA,   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.chart = tm_chart_none(),   size.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.chart = tm_chart_none(),   col.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.chart = tm_chart_none(),   col_alpha.free = NA,   fontface = tm_const(),   fontface.scale = tm_scale(),   fontface.legend = tm_legend(),   fontface.chart = tm_chart_none(),   fontface.free = NA,   fontfamily = \"\",   bgcol = tm_const(),   bgcol.scale = tm_scale(),   bgcol.legend = tm_legend(),   bgcol.chart = tm_chart_none(),   bgcol.free = NA,   bgcol_alpha = tm_const(),   bgcol_alpha.scale = tm_scale(),   bgcol_alpha.legend = tm_legend(),   bgcol_alpha.chart = tm_chart_none(),   bgcol_alpha.free = NA,   xmod = 0,   xmod.scale = tm_scale(),   xmod.legend = tm_legend_hide(),   xmod.chart = tm_chart_none(),   xmod.free = NA,   ymod = 0,   ymod.scale = tm_scale(),   ymod.legend = tm_legend_hide(),   ymod.chart = tm_chart_none(),   ymod.free = NA,   angle = 0,   angle.scale = tm_scale(),   angle.legend = tm_legend_hide(),   angle.chart = tm_chart_none(),   angle.free = NA,   plot.order = tm_plot_order(\"AREA\", reverse = FALSE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   options = opt_tm_labels(),   ... )  opt_tm_text(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   shadow = FALSE,   shadow.offset.x = 0.1,   shadow.offset.y = 0.1,   just = \"center\",   along_lines = FALSE,   bg.padding = 0.4,   clustering = FALSE,   point.label = FALSE,   point.label.gap = 0,   point.label.method = \"SANN\",   remove_overlap = FALSE )  opt_tm_labels(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   shadow = FALSE,   shadow.offset.x = 0.1,   shadow.offset.y = 0.1,   just = \"center\",   along_lines = TRUE,   bg.padding = 0.4,   clustering = FALSE,   point.label = NA,   point.label.gap = 0.4,   point.label.method = \"SANN\",   remove_overlap = FALSE )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: text — tm_text","text":"text, text.scale, text.legend, text.chart, text.free Visual variable determines text. See details. size, size.scale, size.legend, size.chart, size.free Visual variable determines size. See details. col, col.scale, col.legend, col.chart, col.free Visual variable determines color. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free Visual variable determines color transparency. See details. fontface, fontface.scale, fontface.legend, fontface.chart, fontface.free Visual variable determines font face. See details. fontfamily font family. See gpar() details. bgcol, bgcol.scale, bgcol.legend, bgcol.chart, bgcol.free Visual variable determines background color. See Details. bgcol_alpha, bgcol_alpha.scale, bgcol_alpha.legend, bgcol_alpha.chart, bgcol_alpha.free Visual variable determines background color transparency. See Details. xmod, xmod.scale, xmod.legend, xmod.chart, xmod.free Transformation variable determines x offset. See details. ymod, ymod.scale, ymod.legend, ymod.chart, ymod.free Transformation variable determines y offset. See details. text. See details. angle, angle.scale, angle.legend, angle.chart, angle.free Rotation angle plot.order Specification order spatial features drawn. See tm_plot_order() details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see group.control) group.control view mode, group control determines layer groups can switched . Options: \"radio\" radio buttons (meaning one group can shown), \"check\" check boxes (multiple groups can shown), \"none\" control (group (de)selected). options options passed corresponding opt_<layer_function> function ... catch deprecated arguments version < 4.0 points_only point geometries shape object (defined tm_shape()) plotted? default \"ifany\", means TRUE case geometry collection specified. point_per specification spatial points mapped geometry multi line multi polygon. One \"feature\", \"segment\" \"largest\". first generates spatial point every feature, second every segment (.e. subfeature), third largest segment (subfeature). Note last two options can significant slower. on_surface case polygons, centroids computed. points surface? TRUE, slower default FALSE, centroids outside surface replaced points computed sf::st_point_on_surface(). shadow Shadow behind text. Logical color. shadow.offset.x, shadow.offset.y Shadow offset line heights just justification text relative point coordinates. Either one following values: \"left\" , \"right\", \"center\", \"bottom\", \"top\", vector two values first value specifies horizontal second value vertical justification. Besides mentioned values, also numeric values 0 1 can used. 0 means left justification first value bottom justification second value. Note view mode, one value used. along_lines logical determines whether labels rotated along spatial lines. applicable spatial lines shape used. bg.padding padding background terms line heights. clustering value determines whether text labels clustered \"view\" mode. One : TRUE, FALSE, output markerClusterOptions. point.label logical determines whether labels placed automatically. default FALSE tm_text, TRUE tm_labels number labels less 500 (otherwise slow). point.label.gap numeric determines gap point label point.label.method optimization method, either \"SANN\" simulated annealing (default) \"GA\" genetic algorithm. remove_overlap logical determines whether overlapping labels removed","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map layer: text — tm_text","text":"visual variable arguments (e.g. col) can specified either data variable name (object specified tm_shape()), visual value (col, color expected). Multiple values can specified: case facets created. facets can combined faceting data variables, specified tm_facets(). .scale arguments determine used scale map data values visual variable values. can specified one available tm_scale_() functions. default scale used specified tmap option scales.var. .legend arguments determine used legend, specified tm_legend(). default legend settings determined tmap options legend.. .free arguments determine whether scales applied freely across facets, shared. logical value required. can also specified vector three logical values; determine whether scales applied freely per facet dimension. useful facets applied (see tm_facets()). maximally three facet dimensions: rows, columns, pages. applies facet grid (tm_facets_grid()). instance, col.free = c(TRUE, FALSE, FALSE) means visual variable col, row facets scale, therefore legend. facet wraps stacks (tm_facets_wrap() tm_facets_stack()) one facet dimension, .free argument requires one logical value.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: text — tm_text","text":"","code":"tm_shape(World, bbox = World) +   tm_text(\"name\", size=\"pop_est\", col=\"continent\",       col.scale = tm_scale_categorical(values = \"seaborn.dark\"),       col.legend = tm_legend_hide(),       size.scale = tm_scale_continuous(values.scale = 4),       size.legend = tm_legend_hide())   metro$upside_down = ifelse(sf::st_coordinates(metro)[,2] < 0, 180, 0) tm_shape(metro) +   tm_text(text = \"name\", size = \"pop2020\",       angle = \"upside_down\", size.legend = tm_legend_hide(),       col = \"upside_down\",       col.scale = tm_scale_categorical(values = c(\"#9900BB\", \"#228822\")),       col.legend = tm_legend_hide()) +   tm_title_out(\"Which Hemisphere?\", position = tm_pos_out(\"center\", \"top\", pos.v = \"bottom\"))    metroAfrica = sf::st_intersection(metro, World[World$continent == \"Africa\", ]) #> Warning: attribute variables are assumed to be spatially constant throughout all geometries Africa = World[World$continent == \"Africa\", ]  # to do: update land library(sf) st_crs(land) = 4326  tm_shape(land) +   tm_raster(\"cover_cls\",         col.scale = tm_scale(             values = cols4all::c4a(\"brewer.pastel1\")[c(3,7,7,2,6,1,2,2)]         ),         col.legend = tm_legend_hide()) + tm_shape(rivers) +   tm_lines(lwd = \"strokelwd\", lwd.scale = tm_scale_asis(values.scale = .3),        col = cols4all::c4a(\"brewer.pastel1\")[2]) +     tm_shape(Africa, is.main = TRUE) +   tm_borders() +     tm_shape(metroAfrica) +   tm_symbols(fill = \"red\", shape = \"pop2020\", size = \"pop2020\",          size.scale = tm_scale_intervals(                breaks = c(1, 2, 5, 10, 15, 20, 25) * 1e6,                values.range = c(0.2,2)          ),          size.legend = tm_legend(\"Population in 2020\"),          shape.scale = tm_scale_intervals(               breaks = c(1, 2, 5, 10, 15, 20, 25) * 1e6,               values = c(21, 23, 22, 21, 23, 22)          ),          shape.legend = tm_legend_combine(\"size\")) +   tm_labels(\"name\")   tm_shape(metroAfrica) +   tm_markers(text = \"name\",          dots_fill = \"red\",          dots_size = 0.3)   tm_shape(metroAfrica) +   tm_markers(text = \"name\",          dots_shape = marker_icon(),          dots_col = NA,          dots_fill = \"red\",          dots_size = 2,          ymod = -0.25,          options = opt_tm_markers(point.label = FALSE, remove_overlap = TRUE))"},{"path":"https://r-tmap.github.io/tmap/reference/tm_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Map component: title — tm_title","title":"Map component: title — tm_title","text":"Map component adds title","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map component: title — tm_title","text":"","code":"tm_title(   text,   size,   color,   padding,   fontface,   fontfamily,   stack,   just,   frame,   frame.lwd,   frame.r,   bg.color,   bg.alpha,   position,   width,   height,   group.frame,   resize_as_group,   z )  tm_title_in(text, ..., position = tm_pos_in(\"left\", \"top\"))  tm_title_out(text, ..., position = tm_pos_out(\"center\", \"top\"))"},{"path":"https://r-tmap.github.io/tmap/reference/tm_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map component: title — tm_title","text":"text text title size font size title color font color title padding padding fontface font face, bold, italic fontfamily font family stack stack just just frame frame frame.lwd frame line width frame.r frame.r bg.color Background color bg.alpha Background transparency position position width, height width height title box. group.frame group.frame resize_as_group resize_as_group z z ... passed tm_title()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap function to specify variables — tm_vars","title":"tmap function to specify variables — tm_vars","text":"tmap function specify variables shape object","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap function to specify variables — tm_vars","text":"","code":"tm_vars(x = NA, dimvalues = NULL, n = NA, multivariate = FALSE)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmap function to specify variables — tm_vars","text":"x variable names, variable indices, dimension name dimvalues dimension values n specified first n variables taken (first n dimension values) multivariate case multiple variables specified, serve facets (FALSE) multivariate visual variable?","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_view.html","id":null,"dir":"Reference","previous_headings":"","what":"View mode options — tm_view","title":"View mode options — tm_view","text":"View mode options. options specific view mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View mode options — tm_view","text":"","code":"tm_view(   use_WebGL,   control.position,   control.bases,   control.overlays,   set_bounds,   set_view,   set_zoom_limits,   leaflet.options,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tm_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View mode options — tm_view","text":"use_WebGL use webGL points, lines, polygons. much faster standard leaflet layer functions, number visual variables limited; fill, size, color (lines) supported. default TRUE visual variables used. control.position position control attribute control.bases base layers control.overlays overlay layers set_bounds logical determines whether maximum bounds set, bounding box. applicable plot mode. view mode, passed setMaxBounds() set_view numeric vector determines view. Either vector three: lng, lat, zoom, single value: zoom. See setView(). applicable bbox specified set_zoom_limits numeric vector two set minimum maximum zoom levels (see tileOptions()). leaflet.options options passed leafletOptions() ... catch deprecated arguments","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_xlab.html","id":null,"dir":"Reference","previous_headings":"","what":"Map: x and y labels — tm_xlab","title":"Map: x and y labels — tm_xlab","text":"x y labels maps","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tm_xlab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map: x and y labels — tm_xlab","text":"","code":"tm_xlab(text, size, color, rotation, space, fontface, fontfamily, side)  tm_ylab(text, size, color, rotation, space, fontface, fontfamily, side)"},{"path":"https://r-tmap.github.io/tmap/reference/tm_xlab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map: x and y labels — tm_xlab","text":"text text title size font size title color color rotation rotation degrees space space label map number line heights fontface font face fontfamily font family side side: \"top\" \"bottom\" tm_xlab \"left\" \"right\" tm_ylab","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated: format — tmap_format","title":"Deprecated: format — tmap_format","text":"tmap < 4.0 possible set shape-specific options, margins legend position. However, become superfluous tmap > 4.0 legends default placed outside map area. needed, shape-specific set options can stored style tmap_options_save.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated: format — tmap_format","text":"","code":"tmap_format(format)  tmap_format_add(..., name)  tm_format(format, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated: format — tmap_format","text":"format Name format ... used name Name format","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-element.html","id":null,"dir":"Reference","previous_headings":"","what":"Stacking of tmap elements — tmap-element","title":"Stacking of tmap elements — tmap-element","text":"plus operator allows stack tmap elements (functions prefix tm_)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stacking of tmap elements — tmap-element","text":"","code":"# S3 method for class 'tmap' e1 + e2"},{"path":"https://r-tmap.github.io/tmap/reference/tmap-element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stacking of tmap elements — tmap-element","text":"e1 first tmap element e2 second tmap element","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Thematic Map Visualization — tmap-package","title":"Thematic Map Visualization — tmap-package","text":"Thematic maps geographical maps spatial data distributions visualized. package offers flexible, layer-based, easy use approach create thematic maps, choropleths bubble maps. based grammar graphics, resembles syntax ggplot2.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Thematic Map Visualization — tmap-package","text":"page provides brief overview package functions.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap-package.html","id":"main-plotting-method","dir":"Reference","previous_headings":"","what":"Main plotting method","title":"Thematic Map Visualization — tmap-package","text":"Shape specification: Aesthetics base layers: Aesthetics derived layers: Faceting (small multiples) Attributes: Layout element: Change options: Create icons:","code":""},{"path":[]},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Thematic Map Visualization — tmap-package","text":"Tennekes, M., 2018, tmap: Thematic Maps R, Journal Statistical Software, 84(6), 1-39, doi:10.18637/jss.v084.i06","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Thematic Map Visualization — tmap-package","text":"Martijn Tennekes mtennekes@gmail.com","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapAddLayerOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal tmap function to add a default value for the layer functions — tmapAddLayerOptions","title":"Internal tmap function to add a default value for the layer functions — tmapAddLayerOptions","text":"Internal tmap function add default value layer functions","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapAddLayerOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal tmap function to add a default value for the layer functions — tmapAddLayerOptions","text":"","code":"tmapAddLayerOptions(option, id, value)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapAddLayerOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal tmap function to add a default value for the layer functions — tmapAddLayerOptions","text":"option, one : \"value.const\", \"value.na\", \"value.blank\", \"values.var\", 'values.range', \"value.neutral\", \"scales.var\" id name visual variable layer, format \"x.y\", x visual variable y layer. also possible set x ; applies layer functions. value value","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta1.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that extracts meta data from shape objects — tmapGetShapeMeta1","title":"Internal method that extracts meta data from shape objects — tmapGetShapeMeta1","text":"Internal method extracts meta data shape objects","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that extracts meta data from shape objects — tmapGetShapeMeta1","text":"","code":"tmapGetShapeMeta1(shp, o)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that extracts meta data from shape objects — tmapGetShapeMeta1","text":"shp shape object o list options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta2.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that extracts more meta data from shape objects — tmapGetShapeMeta2","title":"Internal method that extracts more meta data from shape objects — tmapGetShapeMeta2","text":"Internal method extracts meta data shape objects","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that extracts more meta data from shape objects — tmapGetShapeMeta2","text":"","code":"tmapGetShapeMeta2(shp, smeta, o)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapGetShapeMeta2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that extracts more meta data from shape objects — tmapGetShapeMeta2","text":"shp shape smeta meta (tmapGetShapeMeta1()) o list options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapMode.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method for submitting a new mode — tmapMode","title":"Internal method for submitting a new mode — tmapMode","text":"Internal method submitting new mode","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method for submitting a new mode — tmapMode","text":"","code":"tmapMode(id, name, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapMode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method for submitting a new mode — tmapMode","text":"id id mode: please use lowercase one-word. used tmap_mode(). name name mode: please use title case. used recognize internal functions, e.g. tmapLeafletInit ... mode specific options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapShape.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that processed shape objects — tmapShape","title":"Internal method that processed shape objects — tmapShape","text":"Internal method processed shape objects","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapShape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that processed shape objects — tmapShape","text":"","code":"tmapShape(shp, is.main, crs, bbox, unit, filter, shp_name, smeta, o, tmf)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapShape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that processed shape objects — tmapShape","text":"shp shp .main .main crs crs bbox bbox unit unit filter filter shp_name shp_name smeta smeta o o tmf tmf","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapSplitShp.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that split shape objects — tmapSplitShp","title":"Internal method that split shape objects — tmapSplitShp","text":"Internal method split shape objects. far, used split stars object (dimension attributes)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapSplitShp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that split shape objects — tmapSplitShp","text":"","code":"tmapSplitShp(shp, split_stars_dim, smeta)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapSplitShp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that split shape objects — tmapSplitShp","text":"shp shape split_stars_dim name dimension split (\"\" skip)","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapSubsetShp.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method that subsets data from shape objects — tmapSubsetShp","title":"Internal method that subsets data from shape objects — tmapSubsetShp","text":"Internal method subsets data shape objects","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmapSubsetShp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method that subsets data from shape objects — tmapSubsetShp","text":"","code":"tmapSubsetShp(shp, vars)"},{"path":"https://r-tmap.github.io/tmap/reference/tmapSubsetShp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method that subsets data from shape objects — tmapSubsetShp","text":"shp shape vars vector variable names","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create animation — tmap_animation","title":"Create animation — tmap_animation","text":"Create gif animation video tmap plot.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create animation — tmap_animation","text":"","code":"tmap_animation(   tm,   filename = NULL,   width = NA,   height = NA,   dpi = NA,   delay = 40,   fps = NA,   loop = TRUE,   outer.margins = NA,   asp = NULL,   scale = NA,   restart.delay = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create animation — tmap_animation","text":"tm tmap list tmap objects. tm tmap object, facets created, nrow ncol tm_facets() set 1 order create one map per frame. filename filename. omitted (default), animation shown viewer browser. specified, gif file video file (.e. mp4). package gifski required create gif animation. package av (uses FFmpeg library) required video formats. mp4 format recommended many video formats supported, wmv, avi, mkv. width, height Dimensions animation file (pixels). Required tm list, recommended specify advance tm tmap object. specified latter case, determined aspect ratio map. dpi dots per inch. default 100, can set option animation.dpi tmap_options(). delay delay time images (1/100th second). See also fps fps frames per second, calculated 100 / delay. fps specified, delay set 100/fps. loop logical determined whether animation looped, integer value determines many times animation looped. outer.margins (passed tmap_save()) overrides outer.margins argument tm_layout() (unless set NA) asp (passed tmap_save()) specified, overrides asp argument tm_layout(). Tip: set 0 map frame placed edges image. scale (passed tmap_save()) overrides scale argument tm_layout() (unless set NA) restart.delay used anymore. ... arguments passed av::av_encode_video()","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create animation — tmap_animation","text":"tmap plots supported, series R plots.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_animation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create animation — tmap_animation","text":"","code":"if (FALSE) { # \\dontrun{ data(NLD_prov)  m1 <- tm_shape(NLD_prov) +          tm_polygons(\"yellow\") +     tm_facets(along = \"name\")  tmap_animation(m1, delay=40)  data(World, metro)  m2 <- tm_shape(World, projection = \"+proj=eck4\", simplify = 0.5) +           tm_fill() +       tm_shape(metro) +            tm_bubbles(size = paste0(\"pop\", seq(1970, 2030, by=10)),                  col = \"purple\",                  border.col = \"black\", border.alpha = .5,                  scale = 2) +       tm_facets(free.scales.symbol.size = FALSE, nrow=1,ncol=1) +        tm_format(\"World\")  tmap_animation(m2, delay=100, outer.margins = 0)  m3 <- lapply(seq(50, 85, by = 5), function(age) {   World$at_most <- World$life_exp <= age   World_sel <- World[which((World$life_exp <= age) & (World$life_exp > (age - 5))), ]   tm_shape(World) +     tm_polygons(\"at_most\", palette = c(\"gray95\", \"gold\"), legend.show = FALSE) +     tm_shape(World_sel) +     tm_text(\"name\", size = \"AREA\", root = 5, remove_overlap = TRUE) +     tm_layout(main.title = paste0(\"Life expectency at most \", age), frame = FALSE) })  tmap_animation(m3, width = 1200, height = 600, delay = 100)  m4 <- tm_shape(World) +   tm_polygons() + tm_shape(metro) +   tm_bubbles(col = \"red\") +   tm_text(\"name\", ymod = -1) + tm_facets(by = \"name\", free.coords = FALSE, nrow = 1, ncol = 1) +   tm_layout(panel.show = FALSE, frame = FALSE)  tmap_animation(m4, filename = \"World_cities.mp4\",      width=1200, height = 600, fps = 2, outer.margins = 0) } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange small multiples in grid layout — tmap_arrange","title":"Arrange small multiples in grid layout — tmap_arrange","text":"Arrange small multiples grid layout. Normally, small multiples created specifying multiple variables one aesthetic specifying argument (see tm_facets()). function can used arrange custom small multiples grid layout.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange small multiples in grid layout — tmap_arrange","text":"","code":"tmap_arrange(   ...,   ncol = NA,   nrow = NA,   widths = NA,   heights = NA,   sync = FALSE,   asp = 0,   outer.margins = 0.02 )  # S3 method for class 'tmap_arrange' knit_print(x, ..., options = NULL)  # S3 method for class 'tmap_arrange' print(x, knit = FALSE, ..., options = NULL)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange small multiples in grid layout — tmap_arrange","text":"... tmap objects one list tmap objects. number multiples can plot limited (see details). ncol number columns nrow number rows widths vector column widths. add 1 length equal ncol. heights vector row heights. add 1 length equal nrow. sync logical. navigation view mode (zooming panning) synchronized? default FALSE. asp aspect ratio. aspect ratio map. Normally, controlled asp argument tm_layout() (also tmap option). argument overwrite , unless set NULL. default value asp 0, means aspect ratio adjusted size device divided number columns rows. asp set NA, also default value tm_layout(), aspect ratio adjusted used shapes. outer.margins outer.margins, numeric vector four single value. defines outer margins multiple. overwrite outer.margins argument tm_layout(), unless set NULL. x tmap_arrange object (returned tmap_arrange()). options options passed knitr::knit_print() knit knitr::knit_print() enabled, normal base::print() function?","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arrange small multiples in grid layout — tmap_arrange","text":"global option tmap.limits controls limit number facets plotted. default, tmap_options(tmap.limits = c(facets.view=4, facets.plot=64)). maximum number interactive facets set four since otherwise may become slow.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_arrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange small multiples in grid layout — tmap_arrange","text":"","code":"tm1 = tm_shape(World) + tm_polygons(\"HPI\") tm2 = tm_shape(metro) + tm_bubbles(size = \"pop2020\")  tmap_arrange(tm1, tm2)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_design_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the design mode — tmap_design_mode","title":"Set the design mode — tmap_design_mode","text":"-called \"design mode\" enabled, inner outer margins, legend position, aspect ratio shown explicitly plot mode. Also, information aspect ratios printed console. function sets global option tmap.design.mode. can used toggle function without arguments.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_design_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the design mode — tmap_design_mode","text":"","code":"tmap_design_mode(design.mode)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_design_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the design mode — tmap_design_mode","text":"design.mode Logical value determines design mode. omitted design mode toggled.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_devel_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the development mode — tmap_devel_mode","title":"Set the development mode — tmap_devel_mode","text":"-called \"development mode\" enabled, helpful messages timings printed console","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_devel_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the development mode — tmap_devel_mode","text":"","code":"tmap_devel_mode(devel.mode)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_devel_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the development mode — tmap_devel_mode","text":"devel.mode logical value determines development mode. omitted development mode toggled.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify icons — tmap_icons","title":"Specify icons — tmap_icons","text":"Specifies icons png images, can used markers thematic maps. function marker_icon() specification default marker.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify icons — tmap_icons","text":"","code":"tmap_icons(   file,   width = 48,   height = 48,   keep.asp = TRUE,   just = c(\"center\", \"center\"),   as.local = TRUE,   ... )  marker_icon()"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_icons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify icons — tmap_icons","text":"file character value/vector containing file path(s) url(s). width width icon. keep.asp, interpreted maximum width. height height icon. keep.asp, interpreted maximum height. keep.asp keep aspect ratio png image. TRUE aspect ratio differs width/height, either width height adjusted accordingly. just justification icons relative point coordinates. first value specifies horizontal second value vertical justification. Possible values : \"left\" , \"right\", \"center\", \"bottom\", \"top\". Numeric values 0 specify left alignment 1 right alignment. default value just c(\"center\", \"center\"). .local file url, saved local temporary file? ... arguments passed leaflet::icons(). iconWidth, iconHeight, iconAnchorX, iconAnchorY specified, override width height, just.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_icons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify icons — tmap_icons","text":"icon data (see leaflet::icons())","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal methods for tmap extensions — .TMAP","title":"Internal methods for tmap extensions — .TMAP","text":"Internal methods tmap extensions","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal methods for tmap extensions — .TMAP","text":"","code":".TMAP  .TMAP_LEAFLET  .TMAP_GRID  toTitleCase(x)  tm_element(..., subclass = NULL)  tm_element_list(...)  tmapChartBinned(chart, bin_colors, breaks_def, na.show, x1)  tmapChartBinned2d(chart, chart1, chart2)  tmapChartBinned2d_numcat(chart, chart1, chart2)  tmapChartBinned2d_numnum(chart, chart1, chart2)  tmapChartBinned2d_catcat(chart, chart1, chart2)  tmapChartRaw(chart, na.show, x1, ...)  tmapChartRaw_nna(chart, na.show, x1, ...)  tmapChartNone(chart, na.show, x1, ...)  tmapChartPass(chart, na.show, x1, ...)  tmapChartBinned_categorical(chart, bin_colors, breaks_def, na.show, x1)  tmapChartBinned_numeric(chart, bin_colors, breaks_def, na.show, x1)  tmapGpar(   fill = NULL,   col = NULL,   shape = NULL,   size = NULL,   fill_alpha = NULL,   col_alpha = NULL,   lty = NULL,   lwd = NULL,   linejoin = NULL,   lineend = NULL,   ... )  tmapTpar(...)  lwd_to_mm(value, unit = \"bigpts\")  tmapGridLines(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapGridPolygons(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapGridRaster(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapGridSymbols(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapGridText(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapLeafletPolygons(   shpTM,   dt,   pdt,   popup.format,   hdt,   idt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapLeafletLines(   shpTM,   dt,   pdt,   popup.format,   hdt,   idt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o )  tmapLeafletSymbols(   shpTM,   dt,   pdt,   popup.format,   hdt,   idt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapLeafletRaster(   shpTM,   dt,   gp,   pdt,   popup.format,   hdt,   idt,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapLeafletText(   shpTM,   dt,   gp,   bbx,   facet_row,   facet_col,   facet_page,   id,   pane,   group,   o,   ... )  tmapScaleAsIs(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapScaleBivariate(   x1,   x2,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapScaleCategorical(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapScaleIntervals(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapScaleRank(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE )  tmapUsrCls(x)  format_aes_results(values, ord = NULL, legend, chart)  chart_save(legend)  data_type(x)  data_class(x, check_for_color_class = FALSE)  tmapScale(aes, value, scale, legend, chart, free)  tmapScaleAuto(   x1,   scale,   legend,   chart,   o,   aes,   layer,   layer_args,   sortRev,   bypass_ord,   submit_legend = TRUE,   ... )  tmapValuesCheck_col(x, is_var = TRUE)  tmapValuesCheck_fill(x, is_var = TRUE)  tmapValuesCheck_bgcol(x, is_var = TRUE)  tmapValuesCheck_shape(x, is_var = TRUE)  tmapValuesCheck_size(x, is_var = TRUE)  tmapValuesCheck_area(x, is_var = TRUE)  tmapValuesCheck_lwd(x, is_var = TRUE)  tmapValuesCheck_lty(x, is_var = TRUE)  tmapValuesCheck_xmod(x, is_var = TRUE)  tmapValuesCheck_angle(x, is_var = TRUE)  tmapValuesCheck_col_alpha(x, is_var = TRUE)  tmapValuesCheck_fill_alpha(x, is_var = TRUE)  tmapValuesCheck_bgcol_alpha(x, is_var = TRUE)  tmapValuesCheck_area(x, is_var = TRUE)  tmapValuesCheck_text(x, is_var = TRUE)  tmapValuesCheck_fontface(x, is_var = TRUE)  tmapValuesIsDiv_fill(x)  tmapValuesIsDiv_col(x)  tmapValuesIsDiv_bgcol(x)  tmapValuesIsDiv_size(x)  tmapValuesIsDiv_area(x)  tmapValuesIsDiv_lwd(x)  tmapValuesIsDiv_lty(x)  tmapValuesIsDiv_col_alpha(x)  tmapValuesIsDiv_fill_alpha(x)  tmapValuesIsDiv_bgcol_alpha(x)  tmapValuesIsDiv_area(x)  tmapValuesIsDiv_xmod(x)  tmapValuesIsDiv_angle(x)  tmapValuesIsDiv_shape(x)  tmapValuesIsDiv_text(x)  tmapValuesIsDiv_fontface(x)  tmapValuesRange_fill(x, n, isdiv)  tmapValuesRange_col(x, n, isdiv)  tmapValuesRange_bgcol(x, n, isdiv)  tmapValuesRange_shape(x, n, isdiv)  tmapValuesRange_lty(x, n, isdiv)  tmapValuesRange_size(x, n, isdiv)  tmapValuesRange_area(x, n, isdiv)  tmapValuesRange_lwd(x, n, isdiv)  tmapValuesRange_col_alpha(x, n, isdiv)  tmapValuesRange_fill_alpha(x, n, isdiv)  tmapValuesRange_bgcol_alpha(x, n, isdiv)  tmapValuesRange_area(x, n, isdiv)  tmapValuesRange_xmod(x, n, isdiv)  tmapValuesRange_angle(x, n, isdiv)  tmapValuesRange_text(x, n, isdiv)  tmapValuesRange_fontface(x, n, isdiv)  tmapValuesVV_fill(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o,   aes = \"fill\" )  tmapValuesVV_col(...)  tmapValuesVV_bgcol(...)  tmapValuesVV_shape(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesVV_lty(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesVV_size(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesVV_area(...)  tmapValuesVV_lwd(...)  tmapValuesVV_col_alpha(...)  tmapValuesVV_fill_alpha(...)  tmapValuesVV_bgcol_alpha(...)  tmapValuesVV_area(...)  tmapValuesVV_xmod(...)  tmapValuesVV_angle(...)  tmapValuesVV_text(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesVV_fontface(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesSubmit_col(x, args)  tmapValuesSubmit_fill(x, args)  tmapValuesSubmit_bgcol(x, args)  tmapValuesSubmit_size(x, args)  tmapValuesSubmit_area(x, args)  tmapValuesSubmit_xmod(x, args)  tmapValuesSubmit_ymod(x, args)  tmapValuesSubmit_angle(x, args)  tmapValuesSubmit_lwd(x, args)  tmapValuesSubmit_lty(x, args)  tmapValuesSubmit_shape(x, args)  tmapValuesSubmit_col_alpha(x, args)  tmapValuesSubmit_fill_alpha(x, args)  tmapValuesSubmit_bgcol_alpha(x, args)  tmapValuesSubmit_text(x, args)  tmapValuesSubmit_fontface(x, args)  tmapValuesScale_col(x, scale)  tmapValuesScale_fill(x, scale)  tmapValuesScale_bgcol(x, scale)  tmapValuesScale_size(x, scale)  tmapValuesScale_area(x, scale)  tmapValuesScale_lwd(x, scale)  tmapValuesScale_lty(x, scale)  tmapValuesScale_shape(x, scale)  tmapValuesScale_col_alpha(x, scale)  tmapValuesScale_fill_alpha(x, scale)  tmapValuesScale_bgcol_alpha(x, scale)  tmapValuesScale_text(x, scale)  tmapValuesScale_fontface(x, scale)  tmapValuesScale_xmod(x, scale)  tmapValuesScale_angle(x, scale)  tmapValuesColorize_col(x, pc)  tmapValuesColorize_fill(x, pc)  tmapValuesColorize_bgcol(x, pc)  tmapValuesColorize_size(x, pc)  tmapValuesColorize_area(x, pc)  tmapValuesColorize_lwd(x, pc)  tmapValuesColorize_lty(x, pc)  tmapValuesColorize_shape(x, pc)  tmapValuesColorize_col_alpha(x, pc)  tmapValuesColorize_fill_alpha(x, pc)  tmapValuesColorize_bgcol_alpha(x, pc)  tmapValuesColorize_text(x, pc)  tmapValuesColorize_fontface(x, pc)  tmapValuesColorize_xmod(x, pc)  tmapValuesColorize_angle(x, pc)  tmapSeq(s, n = NULL)  transform_values(x, lim, rng, power, scale, include.neutral = TRUE)  tmapValuesCVV_fill(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_col(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_bgcol(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_size(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_area(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_lwd(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_col_alpha(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_fill_alpha(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_bgcol_alpha(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_area(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_xmod(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_ymod(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_angle(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_shape(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_lty(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_text(x, value.na, n, range, scale, rep, o)  tmapValuesCVV_fontface(x, value.na, n, range, scale, rep, o)  tmapValuesBVV_fill(x, value.na, m, n, scale, rep, o)  tmapValuesBVV_col(x, value.na, m, n, scale, rep, o)  tmapValuesBVV_bgcol(x, value.na, m, n, scale, rep, o)  tmapValuesCheck_num(x, is_var = TRUE)  tmapValuesIsDiv_num(x)  tmapValuesRange_num(x, n, isdiv)  tmapValuesVV_num(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesSubmit_num(x, args)  tmapValuesScale_num(x, scale)  tmapValuesColorize_num(x, pc)  tmapValuesCVV_num(x, value.na, n, range, scale, rep, o)  tmapValuesCheck_skip(x, is_var)  tmapValuesIsDiv_skip(x)  tmapValuesRange_skip(x, n, isdiv)  tmapValuesVV_skip(   x,   value.na,   isdiv,   n,   dvalues,   are_breaks,   midpoint,   range,   scale,   rep,   o )  tmapValuesSubmit_skip(x, args)  tmapValuesScale_skip(x, scale)  tmapValuesColorize_skip(x, pc)  tmapValuesCVV_skip(x, value.na, n, range, scale, rep, o)  tmapTransCentroid(   shpTM,   xmod = NULL,   ymod = NULL,   ord__,   plot.order,   args,   scale )  tmapTransRaster(shpTM, ord__, plot.order, args)  tmapTransPolygons(shpTM, ord__, plot.order, args, scale)  tmapTransLines(shpTM, ord__, plot.order, args, scale)  tmapTransCartogram(shpTM, size, ord__, plot.order, args, scale)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_internal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal methods for tmap extensions — .TMAP","text":"object class environment length 6. object class environment length 0. object class environment length 0.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal methods for tmap extensions — .TMAP","text":"... args subclass subclass fill, col, shape, size, fill_alpha, col_alpha, lty, lwd, linejoin, lineend visual variables shpTM shpTM scale scale args args xmod, ymod xmod ymod ord__ ord plot.order plot.order","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_last.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the last map to be modified or created — tmap_last","title":"Retrieve the last map to be modified or created — tmap_last","text":"Retrieve last map modified created. Works way ggplot2::last_plot(), although difference: tmap_last() returns last call instead stacked tmap-elements.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_last.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the last map to be modified or created — tmap_last","text":"","code":"tmap_last()"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_last.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the last map to be modified or created — tmap_last","text":"call","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":null,"dir":"Reference","previous_headings":"","what":"Export tmap to the format of the used graphics mode — tmap_leaflet","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"tmap_grob() returns grob object (\"plot\" mode) tmap_leaflet() leaflet object (\"view\" mode).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"","code":"tmap_leaflet(x, show = FALSE, ...)  tmap_grob(x, asp = NA, scale = 1, show = FALSE, ...)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"x tmap object. show show map? ... Arguments passed print.tmap return.asp aspect ratio returned? vp viewport (\"plot\" mode) knit logical, knit? .shiny logical, map drawn shiny? proxy logical, .shiny, tmapProxy used? options vector options asp, scale desired aspect ratio scale map. applicable \"plot\" mode.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"tmap_grob() returns grob object (\"plot\" mode) tmap_leaflet() leaflet object (\"view\" mode). case small multiples shown, list returned.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_leaflet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export tmap to the format of the used graphics mode — tmap_leaflet","text":"","code":"map = tm_shape(World) + tm_polygons() tmap_leaflet(map, show = TRUE)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Set tmap mode to static plotting or interactive viewing — tmap_mode","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"Set tmap mode static plotting interactive viewing. global option tmap.mode determines whether thematic maps plot graphics device, shown interactive leaflet map (see also tmap_options(). function tmap_mode() wrapper set global option. convenient function ttm(), stands toggle thematic map, toggle switch two modes. function ttmp() stands toggle thematic map print last map: ttm() followed tmap_last(); order words, shows last map mode. recommended use tmap_mode() scripts ttm()/ttmp() console.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"","code":"tmap_mode(mode = NULL)  ttm()  ttmp()"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"mode One \"plot\" \"view\". See Details info.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"previous tmap mode switching.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"mode-plot-","dir":"Reference","previous_headings":"","what":"mode = \"plot\"","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"Thematic maps shown graphics device. default mode, supports tmap's features, small multiples (see tm_facets()) extensive layout settings (see tm_layout()). recommended use tmap_save() saving static maps.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"mode-view-","dir":"Reference","previous_headings":"","what":"mode = \"view\"","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"Thematic maps viewed interactively web browser RStudio's Viewer pane. Maps fully interactive tiles OpenStreetMap map providers (see tm_tiles()). See also tm_view() options related \"view\" mode. mode generates leaflet::leaflet() widget, can also directly obtained tmap_leaflet(). R Markdown, possible publish HTML page. However, couple constraints comparison \"plot\": map always projected according Web Mercator projection. Although projection de facto standard interactive web-based mapping, lacks equal-area property, important many thematic maps, especially choropleths (see examples tm_shape()). Small multiples supported legend made aesthetics regarding size, symbol size line width. Text labels supported (yet) layout options set tm_layout()) regarding map format used. However, styling options still apply.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"Tennekes, M., 2018, tmap: Thematic Maps R, Journal Statistical Software, 84(6), 1-39, doi:10.18637/jss.v084.i06","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set tmap mode to static plotting or interactive viewing — tmap_mode","text":"","code":"tmap_mode() #> ℹ Current tmap mode is \"plot\". #> ℹ Call `tmap::ttm()` to switch mode.  tmap_mode(\"plot\") #> ℹ tmap mode set to \"plot\".  tm_shape(World) + tm_polygons(\"HPI\")   tmap_mode(\"view\") #> ℹ tmap mode set to \"view\".  tm_shape(World) + tm_polygons(\"HPI\")  ttm() #> ℹ tmap mode set to \"plot\".  tm_shape(World) + tm_polygons(\"HPI\")"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_options.html","id":null,"dir":"Reference","previous_headings":"","what":"tmap options — tm_check_fix","title":"tmap options — tm_check_fix","text":"tmap options","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tmap options — tm_check_fix","text":"","code":"tm_check_fix()  tmap_options(   ...,   crs,   facet.max,   facet.flip,   free.scales,   raster.max_cells,   show.messages,   show.warnings,   output.format,   output.size,   output.dpi,   animation.dpi,   value.const,   value.na,   value.null,   value.blank,   values.var,   values.range,   value.neutral,   values.scale,   scales.var,   scale.misc.args,   continuous.nclass_per_legend_break,   continuous.nclasses,   label.format,   label.na,   scale,   asp,   bg.color,   outer.bg.color,   frame,   frame.lwd,   frame.r,   frame.double_line,   outer.margins,   inner.margins,   inner.margins.extra,   meta.margins,   meta.auto_margins,   between_margin,   panel.margin,   component.offset,   component.stack_margin,   grid.mark.height,   xylab.height,   coords.height,   xlab.show,   xlab.text,   xlab.size,   xlab.color,   xlab.rotation,   xlab.space,   xlab.fontface,   xlab.fontfamily,   xlab.side,   ylab.show,   ylab.text,   ylab.size,   ylab.color,   ylab.rotation,   ylab.space,   ylab.fontface,   ylab.fontfamily,   ylab.side,   panel.type,   panel.wrap.pos,   panel.xtab.pos,   unit,   color.sepia_intensity,   color.saturation,   color_vision_deficiency_sim,   text.fontface,   text.fontfamily,   component.position,   component.autoscale,   legend.show,   legend.design,   legend.orientation,   legend.position,   legend.width,   legend.height,   legend.stack,   legend.group.frame,   legend.resize_as_group,   legend.reverse,   legend.na.show,   legend.title.color,   legend.title.size,   legend.title.fontface,   legend.title.fontfamily,   legend.xlab.color,   legend.xlab.size,   legend.xlab.fontface,   legend.xlab.fontfamily,   legend.ylab.color,   legend.ylab.size,   legend.ylab.fontface,   legend.ylab.fontfamily,   legend.text.color,   legend.text.size,   legend.text.fontface,   legend.text.fontfamily,   legend.frame,   legend.frame.lwd,   legend.frame.r,   legend.bg.color,   legend.bg.alpha,   legend.only,   legend.settings.standard.portrait,   legend.settings.standard.landscape,   chart.show,   chart.plot.axis.x,   chart.plot.axis.y,   chart.position,   chart.width,   chart.height,   chart.stack,   chart.group.frame,   chart.resize_as_group,   chart.reverse,   chart.na.show,   chart.title.color,   chart.title.size,   chart.title.fontface,   chart.title.fontfamily,   chart.xlab.color,   chart.xlab.size,   chart.xlab.fontface,   chart.xlab.fontfamily,   chart.ylab.color,   chart.ylab.size,   chart.ylab.fontface,   chart.ylab.fontfamily,   chart.text.color,   chart.text.size,   chart.text.fontface,   chart.text.fontfamily,   chart.frame,   chart.frame.lwd,   chart.frame.r,   chart.bg.color,   chart.bg.alpha,   chart.object.color,   title.show,   title.size,   title.color,   title.fontface,   title.fontfamily,   title.bg.color,   title.bg.alpha,   title.padding,   title.frame,   title.frame.lwd,   title.frame.r,   title.stack,   title.position,   title.width,   title.group.frame,   title.resize_as_group,   credits.show,   credits.size,   credits.color,   credits.fontface,   credits.fontfamily,   credits.bg.color,   credits.bg.alpha,   credits.padding,   credits.frame,   credits.frame.lwd,   credits.frame.r,   credits.stack,   credits.position,   credits.width,   credits.height,   credits.group.frame,   credits.resize_as_group,   compass.north,   compass.type,   compass.text.size,   compass.size,   compass.show.labels,   compass.cardinal.directions,   compass.text.color,   compass.color.dark,   compass.color.light,   compass.lwd,   compass.bg.color,   compass.bg.alpha,   compass.margins,   compass.show,   compass.stack,   compass.position,   compass.frame,   compass.frame.lwd,   compass.frame.r,   compass.group.frame,   compass.resize_as_group,   logo.height,   logo.margins,   logo.between_margin,   logo.show,   logo.stack,   logo.position,   logo.frame,   logo.frame.lwd,   logo.frame.r,   logo.group.frame,   logo.resize_as_group,   scalebar.show,   scalebar.breaks,   scalebar.width,   scalebar.text.size,   scalebar.text.color,   scalebar.color.dark,   scalebar.color.light,   scalebar.lwd,   scalebar.bg.color,   scalebar.bg.alpha,   scalebar.size,   scalebar.margins,   scalebar.stack,   scalebar.position,   scalebar.frame,   scalebar.frame.lwd,   scalebar.frame.r,   scalebar.group.frame,   scalebar.resize_as_group,   grid.show,   grid.labels.pos,   grid.x,   grid.y,   grid.n.x,   grid.n.y,   grid.crs,   grid.col,   grid.lwd,   grid.alpha,   grid.labels.show,   grid.labels.size,   grid.labels.col,   grid.labels.rot,   grid.labels.format,   grid.labels.cardinal,   grid.labels.margin.x,   grid.labels.margin.y,   grid.labels.space.x,   grid.labels.space.y,   grid.labels.inside_frame,   grid.ticks,   grid.lines,   grid.ndiscr,   mouse_coordinates.stack,   mouse_coordinates.position,   mouse_coordinates.show,   minimap.server,   minimap.toggle,   minimap.stack,   minimap.position,   minimap.show,   panel.show,   panel.labels,   panel.label.size,   panel.label.color,   panel.label.fontface,   panel.label.fontfamily,   panel.label.bg.color,   panel.label.frame,   panel.label.frame.lwd,   panel.label.frame.r,   panel.label.height,   panel.label.rot,   bbox,   set_bounds,   set_view,   set_zoom_limits,   qtm.scalebar,   qtm.minimap,   qtm.mouse_coordinates,   earth_boundary,   earth_boundary.color,   earth_boundary.lwd,   earth_datum,   space.color,   check_and_fix,   basemap.show,   basemap.server,   basemap.alpha,   basemap.zoom,   tiles.show,   tiles.server,   tiles.alpha,   tiles.zoom,   attr.color,   title = NULL,   main.title = NULL,   main.title.size = NULL,   main.title.color = NULL,   main.title.fontface = NULL,   main.title.fontfamily = NULL,   main.title.position = NULL )  tmap_options_mode(mode = NA, style = NULL, default.options = FALSE)  tmap_options_diff()  tmap_options_reset()  tmap_options_save(style)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tmap options — tm_check_fix","text":"... List tmap options set, option names (characters) returned (see details) crs Map crs (see tm_shape()). NA means crs specified tm_shape(). crs used transformation functions defined tm_shape(). facet.max Maximum number facets facet.flip facets flipped (case facet wrap)? can also set via tm_facets_flip() free.scales backward compatibility: value set, used impute free arguments layer functions raster.max_cells Maximum number raster grid cells show.messages Show messages? show.warnings Show warnings? output.format Output format output.size Output size output.dpi Output dpi animation.dpi Output dpi animations value.const Default visual value constants e.g. default fill color tm_shape(World) + tm_polygons(). list required per visual variable value. value.na Default visual values used visualize NA data values. list required per visual variable value. value.null Default visual values used visualize null (--scope) data values. list required per visual variable value. value.blank Default visual values correspond blank. color \"#00000000\" meaning transparent. list required per visual variable value. values.var Default values data variable mapped visual variable, e.g. color palette. list required per visual variable value. values.range Default range values. See values.range tm_scale_categorical(). list required per visual variable value. value.neutral Default values data variable mapped visual variable, e.g. color palette. list required per visual variable value. values.scale Default scales (object sizes) values. See values.range tm_scale_categorical(). list required per visual variable value. scales.var Default scale functions per visual variable type data variable. list required per visual variable per data type. scale.misc.args Default values scale function-specific arguments. list required per scale function optional per visual variable. continuous.nclass_per_legend_break number continuous legend breaks within one 'unit' (label).  dafault value 50. continuous.nclasses number classes continuous scale. odd.  dafault value 101. label.format Format labels (legend.format tmap v3). label.na Default label missing values. scale Overall scale map asp Aspect ratio map. asp set NA (default) aspect ratio adjusted used shapes. set 0 aspect ratio adjusted size device divided number columns rows. bg.color Background color map. outer.bg.color Background color map outside frame. frame frame . frame.lwd line width frame. See graphics::par, option 'lwd'. frame.r r (radius) frame. frame.double_line double line frame. TRUE FALSE. outer.margins margins outer space (outside frame. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins margins inner space (inside frame). vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). inner.margins.extra extra arguments margins inner space (inside frame). list arguments. meta.margins margins meta. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). meta.auto_margins auto_margins meta. between_margin between_margin . panel.margin margin panel. component.offset offset component. component.stack_margin stack_margin component. grid.mark.height height mark grid. xylab.height height xylab. coords.height height coords. xlab.show visibility xlab. TRUE FALSE. xlab.text text xlab. xlab.size size xlab. xlab.color color xlab. xlab.rotation rotation xlab. xlab.space space xlab. terms number line heights. xlab.fontface font face xlab. See graphics::par, option 'font'. xlab.fontfamily font family xlab. See graphics::par, option 'family'. xlab.side side xlab. ylab.show visibility ylab. TRUE FALSE. ylab.text text ylab. ylab.size size ylab. ylab.color color ylab. ylab.rotation rotation ylab. ylab.space space ylab. terms number line heights. ylab.fontface font face ylab. See graphics::par, option 'font'. ylab.fontfamily font family ylab. See graphics::par, option 'family'. ylab.side side ylab. panel.type type panel. panel.wrap.pos pos wrap panel. panel.xtab.pos pos xtab panel. unit unit . color.sepia_intensity sepia_intensity color. color.saturation saturation color. color_vision_deficiency_sim color_vision_deficiency_sim . text.fontface font face text. See graphics::par, option 'font'. text.fontfamily font family text. See graphics::par, option 'family'. component.position position component. component.autoscale autoscale component. legend.show visibility legend. TRUE FALSE. legend.design design legend. legend.orientation orientation legend. legend.position position legend. legend.width width legend. legend.height height legend. legend.stack stack legend. legend.group.frame frame group legend. legend.resize_as_group resize_as_group legend. legend.reverse reverse legend. legend.na.show visibility na legend. TRUE FALSE. legend.title.color color title legend. legend.title.size size title legend. legend.title.fontface font face title legend. See graphics::par, option 'font'. legend.title.fontfamily font family title legend. See graphics::par, option 'family'. legend.xlab.color color xlab legend. legend.xlab.size size xlab legend. legend.xlab.fontface font face xlab legend. See graphics::par, option 'font'. legend.xlab.fontfamily font family xlab legend. See graphics::par, option 'family'. legend.ylab.color color ylab legend. legend.ylab.size size ylab legend. legend.ylab.fontface font face ylab legend. See graphics::par, option 'font'. legend.ylab.fontfamily font family ylab legend. See graphics::par, option 'family'. legend.text.color color text legend. legend.text.size size text legend. legend.text.fontface font face text legend. See graphics::par, option 'font'. legend.text.fontfamily font family text legend. See graphics::par, option 'family'. legend.frame frame legend. legend.frame.lwd line width frame legend. See graphics::par, option 'lwd'. legend.frame.r r (radius) frame legend. legend.bg.color color bg legend. legend.bg.alpha alpha transparency bg legend. legend.legend. legend.settings.standard.portrait portrait standard settings legend. legend.settings.standard.landscape landscape standard settings legend. chart.show visibility chart. TRUE FALSE. chart.plot.axis.x x axis plot chart. chart.plot.axis.y y axis plot chart. chart.position position chart. chart.width width chart. chart.height height chart. chart.stack stack chart. chart.group.frame frame group chart. chart.resize_as_group resize_as_group chart. chart.reverse reverse chart. chart.na.show visibility na chart. TRUE FALSE. chart.title.color color title chart. chart.title.size size title chart. chart.title.fontface font face title chart. See graphics::par, option 'font'. chart.title.fontfamily font family title chart. See graphics::par, option 'family'. chart.xlab.color color xlab chart. chart.xlab.size size xlab chart. chart.xlab.fontface font face xlab chart. See graphics::par, option 'font'. chart.xlab.fontfamily font family xlab chart. See graphics::par, option 'family'. chart.ylab.color color ylab chart. chart.ylab.size size ylab chart. chart.ylab.fontface font face ylab chart. See graphics::par, option 'font'. chart.ylab.fontfamily font family ylab chart. See graphics::par, option 'family'. chart.text.color color text chart. chart.text.size size text chart. chart.text.fontface font face text chart. See graphics::par, option 'font'. chart.text.fontfamily font family text chart. See graphics::par, option 'family'. chart.frame frame chart. chart.frame.lwd line width frame chart. See graphics::par, option 'lwd'. chart.frame.r r (radius) frame chart. chart.bg.color color bg chart. chart.bg.alpha alpha transparency bg chart. chart.object.color color object chart. title.show visibility title. TRUE FALSE. title.size size title. title.color color title. title.fontface font face title. See graphics::par, option 'font'. title.fontfamily font family title. See graphics::par, option 'family'. title.bg.color color bg title. title.bg.alpha alpha transparency bg title. title.padding padding title. title.frame frame title. title.frame.lwd line width frame title. See graphics::par, option 'lwd'. title.frame.r r (radius) frame title. title.stack stack title. title.position position title. title.width width title. title.group.frame frame group title. title.resize_as_group resize_as_group title. credits.show visibility credits. TRUE FALSE. credits.size size credits. credits.color color credits. credits.fontface font face credits. See graphics::par, option 'font'. credits.fontfamily font family credits. See graphics::par, option 'family'. credits.bg.color color bg credits. credits.bg.alpha alpha transparency bg credits. credits.padding padding credits. credits.frame frame credits. credits.frame.lwd line width frame credits. See graphics::par, option 'lwd'. credits.frame.r r (radius) frame credits. credits.stack stack credits. credits.position position credits. credits.width width credits. credits.height height credits. credits.group.frame frame group credits. credits.resize_as_group resize_as_group credits. compass.north north compass. compass.type type compass. compass.text.size size text compass. compass.size size compass. compass.show.labels labels show compass. compass.cardinal.directions directions cardinal compass. compass.text.color color text compass. compass.color.dark dark color compass. compass.color.light light color compass. compass.lwd line width compass. See graphics::par, option 'lwd'. compass.bg.color color bg compass. compass.bg.alpha alpha transparency bg compass. compass.margins margins compass. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). compass.show visibility compass. TRUE FALSE. compass.stack stack compass. compass.position position compass. compass.frame frame compass. compass.frame.lwd line width frame compass. See graphics::par, option 'lwd'. compass.frame.r r (radius) frame compass. compass.group.frame frame group compass. compass.resize_as_group resize_as_group compass. logo.height height logo. logo.margins margins logo. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). logo.between_margin between_margin logo. logo.show visibility logo. TRUE FALSE. logo.stack stack logo. logo.position position logo. logo.frame frame logo. logo.frame.lwd line width frame logo. See graphics::par, option 'lwd'. logo.frame.r r (radius) frame logo. logo.group.frame frame group logo. logo.resize_as_group resize_as_group logo. scalebar.show visibility scalebar. TRUE FALSE. scalebar.breaks break values scalebar. scalebar.width width scalebar. scalebar.text.size size text scalebar. scalebar.text.color color text scalebar. scalebar.color.dark dark color scalebar. scalebar.color.light light color scalebar. scalebar.lwd line width scalebar. See graphics::par, option 'lwd'. scalebar.bg.color color bg scalebar. scalebar.bg.alpha alpha transparency bg scalebar. scalebar.size size scalebar. scalebar.margins margins scalebar. vector 4 values: bottom, left, top, right. unit device height (bottom top) width (left right). scalebar.stack stack scalebar. scalebar.position position scalebar. scalebar.frame frame scalebar. scalebar.frame.lwd line width frame scalebar. See graphics::par, option 'lwd'. scalebar.frame.r r (radius) frame scalebar. scalebar.group.frame frame group scalebar. scalebar.resize_as_group resize_as_group scalebar. grid.show visibility grid. TRUE FALSE. grid.labels.pos pos labels grid. grid.x x grid. grid.y y grid. grid.n.x x n grid. grid.n.y y n grid. grid.crs coordinate reference system (CRS) grid. grid.col color grid. grid.lwd line width grid. See graphics::par, option 'lwd'. grid.alpha alpha transparency grid. grid.labels.show visibility labels grid. TRUE FALSE. grid.labels.size size labels grid. grid.labels.col color labels grid. grid.labels.rot rot labels grid. grid.labels.format format labels grid. grid.labels.cardinal cardinal labels grid. grid.labels.margin.x x margin labels grid. grid.labels.margin.y y margin labels grid. grid.labels.space.x x space labels grid. grid.labels.space.y y space labels grid. grid.labels.inside_frame inside_frame labels grid. grid.ticks ticks grid. grid.lines lines grid. grid.ndiscr ndiscr grid. mouse_coordinates.stack stack mouse_coordinates. mouse_coordinates.position position mouse_coordinates. mouse_coordinates.show visibility mouse_coordinates. TRUE FALSE. minimap.server server minimap. minimap.toggle toggle minimap. minimap.stack stack minimap. minimap.position position minimap. minimap.show visibility minimap. TRUE FALSE. panel.show visibility panel. TRUE FALSE. panel.labels labels panel. panel.label.size size label panel. panel.label.color color label panel. panel.label.fontface font face label panel. See graphics::par, option 'font'. panel.label.fontfamily font family label panel. See graphics::par, option 'family'. panel.label.bg.color color bg label panel. panel.label.frame frame label panel. panel.label.frame.lwd line width frame label panel. See graphics::par, option 'lwd'. panel.label.frame.r r (radius) frame label panel. panel.label.height height label panel. panel.label.rot rot label panel. bbox bounding box . set_bounds set_bounds . set_view set_view . set_zoom_limits set_zoom_limits . qtm.scalebar scalebar qtm. qtm.minimap minimap qtm. qtm.mouse_coordinates mouse_coordinates qtm. earth_boundary earth_boundary . earth_boundary.color color earth_boundary. earth_boundary.lwd line width earth_boundary. See graphics::par, option 'lwd'. earth_datum earth_datum . space.color color space. check_and_fix check_and_fix . basemap.show visibility basemap. TRUE FALSE. basemap.server server basemap. basemap.alpha alpha transparency basemap. basemap.zoom zoom basemap. tiles.show visibility tiles. TRUE FALSE. tiles.server server tiles. tiles.alpha alpha transparency tiles. tiles.zoom zoom tiles. attr.color color attr. title deprecated See tm_title() main.title deprecated See tm_title() main.title.size, main.title.color, main.title.fontface, main.title.fontfamily, main.title.position deprecated. Use title. options instead. mode mode, e.g. \"plot\" \"view\" style style, see tmap_style() available styles default.options return default options current options?","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save tmap — tmap_save","title":"Save tmap — tmap_save","text":"Save tmap file. can either static plot (e.g. png) interactive map (html).","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save tmap — tmap_save","text":"","code":"tmap_save(   tm = NULL,   filename = NA,   device = NULL,   width = NA,   height = NA,   units = NA,   dpi = NA,   outer.margins = NA,   asp = NULL,   scale = NA,   insets_tm = NULL,   insets_vp = NULL,   add.titles = TRUE,   in.iframe = FALSE,   selfcontained = !in.iframe,   verbose = NULL,   ... )"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save tmap — tmap_save","text":"tm tmap object filename filename including extension, optionally path. extensions pdf, eps, svg, wmf (Windows ), png, jpg, bmp, tiff, html supported. extension missing, file saved static plot \"plot\" mode interactive map (html) \"view\" mode (see details). default format static plots png, can changed using option \"output.format\" tmap_options(). NA (default), file saved \"tmap01\" default format, number incremented file already exists. device graphic device use. Either device function (e.g., png cairo_pdf) text indicating selected graphic device: \"pdf\", \"eps\", \"svg\", \"wmf\" (Windows ), \"png\", \"jpg\", \"bmp\", \"tiff\". NULL, graphic device guessed based filename argument. height, width dimensions plot (applicable html files). Units set argument units. one specified, calculated using formula asp = width / height, asp estimated aspect ratio map. missing, set width * height equal option \"output.size\" tmap_options(). default 49, meaning map square (aspect ratio 1) width height set 7. units units width height (\"\", \"cm\", \"mm\"). default, pixels (\"px\") used either width height set value greater 50. Else, units inches (\"\"). dpi dots per inch. applicable raster graphics. default set 300, can changed using option \"output.dpi\" tmap_options(). outer.margins overrides outer.margins argument tm_options() (unless set NA) asp specified, overrides asp argument tm_options(). Tip: set 0 map frame placed edges image. scale overrides scale argument tm_options() (unless set NA) insets_tm tmap object inset map, list tmap objects multiple inset maps. number tmap objects equal number viewports specified insets_vp. insets_vp viewport inset map, list viewports multiple inset maps. number viewports equal number tmap objects specified insets_tm. add.titles add titles leaflet object. .iframe interactive map saved iframe? , two HTML files saved; one small parent HTML file iframe container, one large child HTML file actual widget. See widgetframe::saveWidgetframe() details. default FALSE, means one large HTML file saved (see saveWidget()). selfcontained interactive map saved, resources (e.g. JavaScript libraries) contained HTML file? FALSE, placed adjacent directory (see also htmlwidgets::saveWidget()). Note HTML file often still large selfcontained = FALSE, since map data (polygons popups), also contained HTML file, usually take space map resources. verbose Deprecated. now controlled tmap option show.messages (see tmap_options()) ... Arguments passed htmlwidgets::saveWidget, widgetframe::saveWidgetframe widget Widget save file File save HTML libdir Directory copy HTML dependencies (defaults filename_files). background Text string giving html background color widget. Defaults white. title Text use title generated page. knitrOptions list knitr chunk options.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save tmap — tmap_save","text":"filename, invisibly, export successful.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save tmap — tmap_save","text":"","code":"if (FALSE) { # \\dontrun{   data(NLD_muni, NLD_prov)   m <- tm_shape(NLD_muni) +          tm_fill(col=\"population\", convert2density=TRUE,                   style=\"kmeans\",                   title=expression(\"Population (per \" * km^2 * \")\")) +          tm_borders(\"black\", alpha=.5) +       tm_shape(NLD_prov) +          tm_borders(\"grey25\", lwd=2) +     tm_style(\"classic\") +     tm_format(\"NLD\", inner.margins = c(.02, .15, .06, .15)) +        tm_scale_bar(position = c(\"left\", \"bottom\")) +       tm_compass(position=c(\"right\", \"bottom\"))      tmap_save(m, \"choropleth.png\", height = 7) # height interpreted in inches   tmap_save(m, \"choropleth_icon.png\", height = 100, scale = .1) # height interpreted in pixels      data(World)   m2 <- tm_shape(World) +     tm_fill(\"well_being\", id=\"name\", title=\"Well-being\") +     tm_format(\"World\")    # save image   tmap_save(m2, \"World_map.png\", width=1920, height=1080, asp=0)    # cut left inner margin to make sure Antarctica is snapped to frame   tmap_save(m2 + tm_layout(inner.margins = c(0, -.1, 0.05, 0.01)),          \"World_map2.png\", width=1920, height=1080, asp=0)      # save interactive plot   tmap_save(m2, \"World_map.html\") } # }"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get the default tmap style — tmap_style","title":"Set or get the default tmap style — tmap_style","text":"Set get default tmap style. Without arguments, current style returned. Also available styles displayed. style set, corresponding tmap options (see tmap_options()) set accordingly. default style (.e. loading package) \"white\".","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get the default tmap style — tmap_style","text":"","code":"tmap_style(style)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get the default tmap style — tmap_style","text":"style Name style. omitted, tmap_style() returns current style also shows available styles. style specified,tmap_style() sets style accordingly. Note case, tmap options (see tmap_options()) reset according style definition. See tm_layout() predefined styles, tmap_style_catalogue (migrated v4 yet) creating catalogue.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or get the default tmap style — tmap_style","text":"style changing","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set or get the default tmap style — tmap_style","text":"Note tm_style() used within plot call (affects plot), whereas tmap_style() sets style globally. loading style, options defined style (.e. difference default \"white\" style) can obtained tmap_options_diff(). documentation tmap_options() (details examples) shows create new style.","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or get the default tmap style — tmap_style","text":"","code":"tmap_style() #> current tmap style is \"white (modified)\" #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) + tm_polygons(\"HPI\")   tmap_style(\"cobalt\") #> style set to \"cobalt\" #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) + tm_polygons(\"HPI\")   # for backwards compatibility, the styles of tmap versions 1-3 are also included:  tmap_style(\"v3\") #> style set to \"v3\" (tmap v3 default) #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" #> tmap v3 styles: \"gray_v3\", \"natural_v3\", \"cobalt_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) + tm_polygons(\"HPI\")   tmap_style(\"cobalt_v3\") #> style set to \"cobalt_v3\" #> other available styles are: \"white\" (tmap default), \"gray\", \"natural\", \"cobalt\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" #> tmap v3 styles: \"v3\" (tmap v3 default), \"gray_v3\", \"natural_v3\", \"albatross_v3\", \"beaver_v3\", \"bw_v3\", \"classic_v3\", \"watercolor_v3\"  tm_shape(World) + tm_polygons(\"HPI\")"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style_catalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a style catalogue — tmap_style_catalogue","title":"Create a style catalogue — tmap_style_catalogue","text":"Create style catalogue predefined tmap style. result set png images, one style.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style_catalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a style catalogue — tmap_style_catalogue","text":"","code":"tmap_style_catalogue(path = \"./tmap_style_previews\", styles = NA)  tmap_style_catalog(path = \"./tmap_style_previews\", styles = NA)"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_style_catalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a style catalogue — tmap_style_catalogue","text":"path path png images stored styles vector styles function names (see tmap_style) preview generated. default, preview generated loaded styles.","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_tip.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a random tip to the console — tmap_tip","title":"Print a random tip to the console — tmap_tip","text":"Print random tip console","code":""},{"path":"https://r-tmap.github.io/tmap/reference/tmap_tip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a random tip to the console — tmap_tip","text":"","code":"tmap_tip()"},{"path":"https://r-tmap.github.io/tmap/reference/tmap_tip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a random tip to the console — tmap_tip","text":"message","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-40-development-version","dir":"Changelog","previous_headings":"","what":"tmap 4.0 (development version)","title":"tmap 4.0 (development version)","text":"consistency ggplot2, tm_polygons() now recognizes fill argument instead col. Similarly, border.col now col. tmap now requires R 3.6 . view mode, hover now independent id (#851). tm_vars() new function multivariate scale (#819) New family functions tm_chart_*() charting (See ?tm_chart) (#581) New vignettes available explain upgrade code tmap v4","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33-4","dir":"Changelog","previous_headings":"","what":"tmap 3.3-4","title":"tmap 3.3-4","text":"CRAN release: 2023-09-12 (!) last version tmap 3.x. Next CRAN version tmap 4.x fixed bug (stars appeared upside plot mode) fixed newly introduced shiny bug (#767)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33-3","dir":"Changelog","previous_headings":"","what":"tmap 3.3-3","title":"tmap 3.3-3","text":"CRAN release: 2022-03-02 added device tmap_save() fixed many small bugs (see GitHub issue list)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33-2","dir":"Changelog","previous_headings":"","what":"tmap 3.3-2","title":"tmap 3.3-2","text":"CRAN release: 2021-06-16 Worlds fixed (now ‘s2’ proof, see GitHub issue #564)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33-1","dir":"Changelog","previous_headings":"","what":"tmap 3.3-1","title":"tmap 3.3-1","text":"CRAN release: 2021-03-15 fixed view titles added html.escape popup.format control whether html code escaped view popups fixed many small bugs (see GitHub issue list)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-33","dir":"Changelog","previous_headings":"","what":"tmap 3.3","title":"tmap 3.3","text":"CRAN release: 2021-01-19 tmap_grob() added, exports tmap plots grob objects (grid package) SpatRaster objects (terra package) supported fixed many small bugs (see GitHub issue list)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-32","dir":"Changelog","previous_headings":"","what":"tmap 3.2","title":"tmap 3.2","text":"CRAN release: 2020-09-15 tmap_animation() improved: now using av gifski hood; added progress bar; lists tmap objects supported; improved default settings improved tmapOutput(); now works reactive shiny objects improved internally used margins; also small exported maps look good (see example tmap_save()) improved tmap_design_mode(); tmap.design.mode now global option (tmap option anymore) reexported providers leafet added show.warnings tmap_options() added width argument tm_credits() tm_text() improved: added “id” argument, tm_remove_layer() can applied ","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-31","dir":"Changelog","previous_headings":"","what":"tmap 3.1","title":"tmap 3.1","text":"CRAN release: 2020-07-09 interactive maps origin CRS working: tmap_options(projection = 0, basemaps = NULL) added tm_mouse_coordinates() show mouse coordinates view mode added tmap_design_mode() toggle design mode. made background symbol grob shapes transparent added .iframe selfcontained tmap_save() improved tm_add_legend(): added type = \"title\" title legend elements added ttmp() shows last map mode. fixed many small bugs (see GitHub issue list)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-30","dir":"Changelog","previous_headings":"","what":"tmap 3.0","title":"tmap 3.0","text":"CRAN release: 2020-04-09 [!] spatial rasters/arrays now implemented using stars package (instead raster package) .count argument added layer functions; numeric variables can treated count variables (integers) drop.levels argument added layer functions allows drop unused levels new style added color classes: “dpih” “headtails”; also added style.args pass arguments classInt::classIntervals() grid labels specification per axis fixed bug geometry collection","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-23-2","dir":"Changelog","previous_headings":"","what":"tmap 2.3-2","title":"tmap 2.3-2","text":"CRAN release: 2020-01-19 probably last version release tmap 3.0 many small improvements bug fixes (see GitHub) first stars supported (full support expected tmap 3.0) replaced projection shortcuts \"epsg/proj4strings\" examples","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-23-1","dir":"Changelog","previous_headings":"","what":"tmap 2.3-1","title":"tmap 2.3-1","text":"CRAN release: 2019-09-17 improved popups view mode added validity checks sf objects minor bugs fixed: see GitHub issue list","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-23","dir":"Changelog","previous_headings":"","what":"tmap 2.3","title":"tmap 2.3","text":"CRAN release: 2019-07-18 [!] shiny integration: added tmapOutput(), renderTmap(), tmapProxy(), , tm_remove_layer() improved tmap_save() (regarding default values) improved tm_rgb() (added r g b max.value arguments) added tm_graticules() supported TMS servers view mode, layers can hidden legend group = NULL replaced mapview leafsync minor bugs fixed: see GitHub issue list","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-22","dir":"Changelog","previous_headings":"","what":"tmap 2.2","title":"tmap 2.2","text":"CRAN release: 2019-01-05 improved tm_rgb() improved breaks interactive maps added bbox argument qtm() improved projection shortcut codes (using EPSG database) fixed several bugs (see GitHub)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-21-1","dir":"Changelog","previous_headings":"","what":"tmap 2.1-1","title":"tmap 2.1-1","text":"CRAN release: 2018-08-09 fixed two small bugs","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-21","dir":"Changelog","previous_headings":"","what":"tmap 2.1","title":"tmap 2.1","text":"CRAN release: 2018-08-06 added option max.raster (maximum raster size) made rasters view mode faster bug fixed geometry collection objects without data view mode improved handling manual palettes tmap_arrange() can take list tmap objects","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-20","dir":"Changelog","previous_headings":"","what":"tmap 2.0","title":"tmap 2.0","text":"CRAN release: 2018-07-15 [!] tmap migrated sp sf. sp objects still supported, internal functions based sf [!] added tm_sf() draws sf objects [!] renamed *_tmap() functions (e.g. save_tmap()) tmap_*() consistency [!] added tm_basemap() tm_tiles(): now, multiple (overlay) tiled maps can shown [!] rearranged tmap options, styles formats. See tmap_options(), tmap_style(), tmap_format(), tm_style() tm_format() [!] added filter argument tm_shape() added colorNULL layer functions added tm_minimap() added remove.NA.facets tm_facets() units data columns supported tmap_animation() enhanced loop options added tmap_tips() changes backwards compatible 1.11-2 vignettes rewritten, including vignette describes changes 2.0","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-111-2","dir":"Changelog","previous_headings":"","what":"tmap 1.11-2","title":"tmap 1.11-2","text":"CRAN release: 2018-04-10 added references JSS paper (including citation)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-111-1","dir":"Changelog","previous_headings":"","what":"tmap 1.11-1","title":"tmap 1.11-1","text":"CRAN release: 2018-02-13 fixed bug labels argument tm_fill() fixed bug regarding legend symbols facets free scales fixed bug rasters view mode improved popup width view mode","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-111","dir":"Changelog","previous_headings":"","what":"tmap 1.11","title":"tmap 1.11","text":"CRAN release: 2017-11-24 added text.align text..columns legend.format legend.(aes).reverse added layer functions symbol shapes can put list small multiples, named according values variable specified shape argument grid labels can now rotated formatted changed default values free.coords drop.units tm_facets() fixed bug NAs view mode fixed bug dismo::gmap() raster shapes fixed bug ambiguous values aesthetics (e.g. “blue” also variable name) NOTE: last version major update (sf fully replaces sp)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-110","dir":"Changelog","previous_headings":"","what":"tmap 1.10","title":"tmap 1.10","text":"CRAN release: 2017-05-11 [!] tm_scale_bar(), tm_text(), tm_grid() now supported view mode (requires leaflet 1.1.0) added along argument tm_facets(), enables faceting along multiple pages (animation frames) added main.title argument tm_layout added tmap_options(), including new option tmap.unit (“metric” “imperial”“) improved automatic labelling breaks improved legend view mode: missing values shown default (like plot mode) improved bubble scaling view mode fixed bug aspect ratio bug","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-18-1","dir":"Changelog","previous_headings":"","what":"tmap 1.8-1","title":"tmap 1.8-1","text":"CRAN release: 2017-01-29 added tm_rgb() (shortcut rgb rasters) fixed interactive maps R Markdown fixed bug qtm() called without arguments","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-18","dir":"Changelog","previous_headings":"","what":"tmap 1.8","title":"tmap 1.8","text":"CRAN release: 2017-01-03 [!] package split: non-plotting functions migrated tmaptools added tmap_arrange() arranging custom small multiples added simplify argument tm_shape() added error message NA-projected shapes view mode improved unit handling, now can set metric imperial NA values allowed direct color variables sf (simple features) objects supported","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-16-1","dir":"Changelog","previous_headings":"","what":"tmap 1.6-1","title":"tmap 1.6-1","text":"CRAN release: 2016-10-29 improved projections: code efficient now shortcuts renewed. Also, CRS objects now supported project arguments (e.g. tm_shape(), set_projection), .CRS added get_projection get_proj4. Rscript works: methods moved imports depends","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-16","dir":"Changelog","previous_headings":"","what":"tmap 1.6","title":"tmap 1.6","text":"CRAN release: 2016-10-21 [!] tm_symbols() added, create proportional symbol maps: besides bubbles, also supports symbol shapes, png icons, small ggplot2 plots [!] imported cartogram function cartogram package (thanks Sebastian!) [!] reverse geocoding function tmaptools::rev_geocode_OSM() added [!] tm_logo() added added popup.vars base layer functions bounding box (argument bbox tm_shape()) working view mode tmaptools::geocode_OSM() improved: SpatialPointsDataFrame can now returned last_tmap() added, retrieves last produced map crop_shape can also handle polygons cropping area append_data improved; coverage information can retrieved under_coverage over_coverage interpolate parameter added tm_raster() added support custom legend formatting functions legend items can now stacked horizontally legend width height can determined fully manually (negative values legend.height legend.width) argument interval.closure added layer functions determine intervals closed added warnings non-supported elements view mode fixed raster brick bug fixed save_tmap/get_asp_ratifo bug","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-14-1","dir":"Changelog","previous_headings":"","what":"tmap 1.4-1","title":"tmap 1.4-1","text":"CRAN release: 2016-05-07 add just argument anchor text labels, legend attributes position map attributes (scale bar) can placed outside frame added tm_xlab() tm_ylab() RGB raster support, see tm_raster static text (.e titles, credits, legend titles, labels) support expressions updated Europe shape: projection bounding box now consistent Eurostat publications added crop_shape, convenient wrapper around raster::crop()","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-14","dir":"Changelog","previous_headings":"","what":"tmap 1.4","title":"tmap 1.4","text":"CRAN release: 2016-03-18 [!] interactive mapping added. Now, tmap two modes: “plot” (graphics device) “view” (interactive viewer, leaflet widget) [!] facets (small multiples) improved: group two variables possible, panel layout added, missing data can shown separately added geocode_OSM(), function find coordinates (now tmaptools::geocode_OSM()) improved set_projection raster objects added double_line offset_line added insets option save_tmap improved default settings contrast argument regarding seq div palettes improved automatic positions legend map attributes (specifically, legend snaps right-hand side without need adjust legend.width, legend attributes position improved double frame enabled) improved tm_layouts()’s design.mode output lwd parameter added tm_scale_bar() tm_compass() fixed bb bug","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-12-1","dir":"Changelog","previous_headings":"","what":"tmap 1.2-1","title":"tmap 1.2-1","text":"fixed bug PROJ.4 version < 4.9.1 improved error messages rd projection reset \"+init=epsg:28992\", since latter now \"+towgs\" item fixed bug print.tmap() returned object","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-12","dir":"Changelog","previous_headings":"","what":"tmap 1.2","title":"tmap 1.2","text":"CRAN release: 2015-12-11 added read_osm(), function read Open Street Map data (now tmaptools::read_osm()) added bb, handy bounding box function added layout themes tm_style tm_format added automatic text labeling added interactive SVG, can opened RStudio (see itmap) added map compass (tm_compass()) added text aesthetics size col added automatic map coloring added earth boundary, useful projected world maps World added warped grid lines (e.g. long-lat lines can shown projected maps) added new color scale modes (enabled style=\"cat\", “cont”, “order”) added save_tmap() added smooth_map, smooth_raster_cover, sample_dots, points_to_raster poly_to_raster added read_GPX improved automatic layout regarding title, legend, map attributes layer arguments, e.g. palette, can take multiple values small multiples improved grid lines (labels can also placed outside frame) arguments free.coords drop.shapes tm_facets() working updated examples vignette fixed viewport bug see ?tmap structured overview tmap functions","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-10","dir":"Changelog","previous_headings":"","what":"tmap 1.0","title":"tmap 1.0","text":"CRAN release: 2015-05-28 added tm_credits() tm_scale_bar() added .master argument tm_shape(), determines shape master added unit unit.size arguments tm_shape() correlates coordinates desired units added tm_polygons(), combination tm_fill() tm_borders() fixed several small bugs","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-08","dir":"Changelog","previous_headings":"","what":"tmap 0.8","title":"tmap 0.8","text":"added tm_raster() improved legend behavior: legend titles set layer functions (instead tm_layout()) removed crop_shape(), since raster::crop() job, , faster --scope functions migrated spatialToolbox package, available https://github.com/mtennekes/spatialToolbox","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-071","dir":"Changelog","previous_headings":"","what":"tmap 0.7.1","title":"tmap 0.7.1","text":"fixed bug scale parameter (global scale set tm_layout())","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-07","dir":"Changelog","previous_headings":"","what":"tmap 0.7","title":"tmap 0.7","text":"CRAN release: 2015-03-27 enhanced small multiples (tm_facets()) respect scaling free coordinate scales added alpha argument tm_layers() transparency added text shadow argument added function split() split shape object sbind() combine shape objects. added automatic legend positioning legend.position = NULL improved number formatting legend improved inner.margins outer.margins. can take one value (e.g. outer.margins=0 rather outer.margins=c(0,0,0,0)) improved qtm(): tm_facets() parameters working, also fixed scale parameter bug improved examples approx_areas, calc_densities fixed bug regarding drawing frame outer.margins=0. fixed bug plotting bubbles improved temp file handling animation_tmap() added functions get set polygon directions, calculate intersection ratios polygons (intersection_shapes)","code":""},{"path":"https://r-tmap.github.io/tmap/news/index.html","id":"tmap-06","dir":"Changelog","previous_headings":"","what":"tmap 0.6","title":"tmap 0.6","text":"CRAN release: 2014-07-30 first CRAN version newer version may available https://github.com/r-tmap/tmap get started, see package vignette ‘tmap nutshell’ help files questions suggestions, please contact (mtennekes gmail dot com)","code":""}]
